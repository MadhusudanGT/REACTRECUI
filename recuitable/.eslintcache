[{"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\index.js":"1","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\App.js":"2","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\reportWebVitals.js":"3","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\CenteredTabs\\ActiveUsers.js":"4","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\Icons\\Icons.js":"5","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\MenuBar\\Menu.js":"6","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\PopUpBox\\PopUp.js":"7","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\RECTable\\Table.js":"8","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\DashBoard\\SettingsUserPage\\UserSettings.js":"9","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\CenteredTabs\\User.js":"10","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\CenteredTabs\\inActiveUser.js":"11","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\InputFieldsUser\\AddUser.js":"12","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\RECTable\\Table1.js":"13","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\service.js":"14","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\ConnectionAxios.js":"15","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\RECTable\\AddUserTable.js":"16","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\RECTable\\SearchAndAdd.js":"17","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\UserLandingPage\\UserInterviewForm.js":"18","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\UserLandingPage\\DocumentForm.js":"19","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\UserLandingPage\\UserDeatilsForm.js":"20","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\UserLandingPage\\EducationSkillsForm.js":"21","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\FormikValidationForm\\RegistrationForm.js":"22","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\InterViewProceses\\LandingPageInterview.js":"23","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\InterViewProceses\\SecondInterviewProcess.js":"24","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\InterViewProceses\\FinalRound.js":"25","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\LoginPage\\Login.js":"26","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\FormikValidationForm\\UpdateProfileForm.js":"27","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantLandingPage\\LandingPage.js":"28","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantLandingPage\\LandingPageCard.js":"29","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\Footer\\Footer.js":"30","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\MenuBar\\MenuBarLandingPage.js":"31","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\LoginPage\\Registration.js":"32","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\JobModel\\JobDetailsPage.js":"33","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\JobService.js":"34","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantLandingPage\\LandingPageForUnauth.js":"35","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\LoginPage\\ForgetPassword.js":"36","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantProfile\\ApplicantProfile.js":"37","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantProfile\\ProfileProgress.js":"38","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\UserLandingPage\\UserDetails.js":"39","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\ApplicationService.js":"40","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\TechnicalLandingPage.js":"41","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\HrLandingPge.js":"42","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleDashboard.js":"43","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleApplications.js":"44","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleRejected.js":"45","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleNotification.js":"46","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleTodaySch.js":"47","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleSchedule.js":"48","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleSelected.js":"49","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\RegService.js":"50","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\HandleTechnicalTeam.js":"51","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\HandleHrDashboard.js":"52","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\ReSchuledMeetings.js":"53","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\HandleHrNotification.js":"54","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\ScheduledMeetings.js":"55","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\TodaysHrMeetings.js":"56","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\InterViewProceses\\Questions.js":"57","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\InterViewProceses\\TimeCount.js":"58","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\UserTestService.js":"59","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\ScheduledMeetings.js":"60","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\HandleTechnicalTeam.js":"61","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\MenuBar\\MenuBarLandingAuth.js":"62","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantProfile\\UserProfile.js":"63","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantProfile\\accordian.js":"64"},{"size":500,"mtime":1611989976383,"results":"65","hashOfConfig":"66"},{"size":2783,"mtime":1613146143904,"results":"67","hashOfConfig":"66"},{"size":362,"mtime":499162500000,"results":"68","hashOfConfig":"66"},{"size":186,"mtime":1610014073984,"results":"69","hashOfConfig":"66"},{"size":146,"mtime":1610004479768,"results":"70","hashOfConfig":"66"},{"size":1472,"mtime":1612609455785,"results":"71","hashOfConfig":"66"},{"size":1435,"mtime":1610018632519,"results":"72","hashOfConfig":"66"},{"size":7929,"mtime":1613064593331,"results":"73","hashOfConfig":"66"},{"size":650,"mtime":1610012173011,"results":"74","hashOfConfig":"66"},{"size":3071,"mtime":1610798803506,"results":"75","hashOfConfig":"66"},{"size":193,"mtime":1610030316279,"results":"76","hashOfConfig":"66"},{"size":4188,"mtime":1613238204684,"results":"77","hashOfConfig":"66"},{"size":4614,"mtime":1611551125958,"results":"78","hashOfConfig":"66"},{"size":715,"mtime":1610722989393,"results":"79","hashOfConfig":"66"},{"size":190,"mtime":1613238979430,"results":"80","hashOfConfig":"66"},{"size":4561,"mtime":1613238460083,"results":"81","hashOfConfig":"66"},{"size":1998,"mtime":1611466613264,"results":"82","hashOfConfig":"66"},{"size":167,"mtime":1611306404956,"results":"83","hashOfConfig":"66"},{"size":10079,"mtime":1613228228618,"results":"84","hashOfConfig":"66"},{"size":13319,"mtime":1613063207861,"results":"85","hashOfConfig":"66"},{"size":18210,"mtime":1613063555627,"results":"86","hashOfConfig":"66"},{"size":8281,"mtime":1613238154303,"results":"87","hashOfConfig":"66"},{"size":8890,"mtime":1612892177064,"results":"88","hashOfConfig":"66"},{"size":248,"mtime":1612807551369,"results":"89","hashOfConfig":"66"},{"size":250,"mtime":1612807567228,"results":"90","hashOfConfig":"66"},{"size":5694,"mtime":1613227951445,"results":"91","hashOfConfig":"66"},{"size":8098,"mtime":1613238171912,"results":"92","hashOfConfig":"66"},{"size":5852,"mtime":1613064004965,"results":"93","hashOfConfig":"66"},{"size":2450,"mtime":1612783388157,"results":"94","hashOfConfig":"66"},{"size":2146,"mtime":1613062561779,"results":"95","hashOfConfig":"66"},{"size":3530,"mtime":1613231147310,"results":"96","hashOfConfig":"66"},{"size":7753,"mtime":1613238454911,"results":"97","hashOfConfig":"66"},{"size":18104,"mtime":1613238311473,"results":"98","hashOfConfig":"66"},{"size":663,"mtime":1613238940357,"results":"99","hashOfConfig":"66"},{"size":5859,"mtime":1613062823769,"results":"100","hashOfConfig":"66"},{"size":300,"mtime":1611940683882,"results":"101","hashOfConfig":"66"},{"size":10868,"mtime":1613203816143,"results":"102","hashOfConfig":"66"},{"size":1483,"mtime":1611990239340,"results":"103","hashOfConfig":"66"},{"size":10544,"mtime":1613224263893,"results":"104","hashOfConfig":"66"},{"size":977,"mtime":1613238914750,"results":"105","hashOfConfig":"66"},{"size":8258,"mtime":1613238664933,"results":"106","hashOfConfig":"66"},{"size":9277,"mtime":1613065775632,"results":"107","hashOfConfig":"66"},{"size":174,"mtime":1612887444514,"results":"108","hashOfConfig":"66"},{"size":4925,"mtime":1613066668124,"results":"109","hashOfConfig":"66"},{"size":4410,"mtime":1613066751151,"results":"110","hashOfConfig":"66"},{"size":174,"mtime":1612432546823,"results":"111","hashOfConfig":"66"},{"size":10724,"mtime":1613041878273,"results":"112","hashOfConfig":"66"},{"size":7428,"mtime":1613066864565,"results":"113","hashOfConfig":"66"},{"size":4718,"mtime":1612890482843,"results":"114","hashOfConfig":"66"},{"size":761,"mtime":1613238949129,"results":"115","hashOfConfig":"66"},{"size":9584,"mtime":1613065867710,"results":"116","hashOfConfig":"66"},{"size":1140,"mtime":1613064784881,"results":"117","hashOfConfig":"66"},{"size":22318,"mtime":1613067661351,"results":"118","hashOfConfig":"66"},{"size":180,"mtime":1612591413406,"results":"119","hashOfConfig":"66"},{"size":22336,"mtime":1613067282024,"results":"120","hashOfConfig":"66"},{"size":10748,"mtime":1613041903178,"results":"121","hashOfConfig":"66"},{"size":2463,"mtime":1612801778824,"results":"122","hashOfConfig":"66"},{"size":1692,"mtime":1612808219524,"results":"123","hashOfConfig":"66"},{"size":244,"mtime":1612811240727,"results":"124","hashOfConfig":"66"},{"size":895,"mtime":1613238957033,"results":"125","hashOfConfig":"66"},{"size":680,"mtime":1613238985860,"results":"126","hashOfConfig":"66"},{"size":3007,"mtime":1613062955544,"results":"127","hashOfConfig":"66"},{"size":5465,"mtime":1613237918106,"results":"128","hashOfConfig":"66"},{"size":10440,"mtime":1613220407186,"results":"129","hashOfConfig":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"1alpmih",{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"132"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"132"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"132"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"132"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"132"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"132"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"132"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"132"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":2,"source":"181","usedDeprecatedRules":"132"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"132"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"132"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"132"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"132"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"132"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"132"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"132"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"132"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"132"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"132"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"132"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"132"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"132"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"132"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"132"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"132"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"132"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"132"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"132"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"132"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"132"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"132"},"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\index.js",[],["291","292"],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\App.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\reportWebVitals.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\CenteredTabs\\ActiveUsers.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\Icons\\Icons.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\MenuBar\\Menu.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\PopUpBox\\PopUp.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\RECTable\\Table.js",["293","294","295","296"],"import React, { useState, useEffect } from 'react';\r\nimport {makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport InputFields from '../InputFieldsUser/AddUser';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport DataService from \"../../Service/service\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport SearchAndAdd from \"./SearchAndAdd\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport UpdateProfileForm from \"../FormikValidationForm/UpdateProfileForm\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n      },\r\n      container: {\r\n        maxHeight: 440,\r\n      },\r\n      modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n}));\r\n\r\nexport default function BasicTable() {\r\nconst classes = useStyles();\r\nconst [open, setOpen] = React.useState(false);\r\nconst [getUser,setUserData]=useState([]);\r\nconst [getData,setData]=useState('');\r\nconst[getfName,setfName]=useState('');\r\nconst [openDilogBox, setOpenDilogBox] = React.useState(false);\r\nconst [state, setState] = React.useState({\r\n  open: false,\r\n  vertical: 'top',\r\n  horizontal: 'center',\r\n});\r\n\r\nconst { vertical, horizontal} = state;\r\nconst [getUserName,setUserName]=useState('');\r\nconst [getUserId,setUserId]=useState('');\r\nconst handleDeleteBoxOpen = (e) => {\r\n  setOpenDilogBox(true);\r\n  setUserName(e.firstName);\r\n  setUserId(e.id);\r\n  \r\n};\r\n\r\nconst handleDeleteBoxClose = () => {\r\n  setOpenDilogBox(false);\r\n if(getUserName===getfName){\r\n  handleDelete(getUserId);\r\n }else{\r\n   alert(\"please check the user name\")\r\n }\r\n};\r\nconst handleClose = () => {\r\nsetOpen(false);\r\n};\r\n\r\nconst handleDelete=(id)=>{\r\n  deleteUser(id);\r\n  retrieveUsers();\r\n    console.log(\"user deleted with id:=\",id);\r\n}\r\n\r\nconst [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n\r\nconst handleClickSnackbar = () => {\r\n  setOpenSnackbar(true);\r\n};\r\n\r\nconst handleCloseSnackbar = (event, reason) => {\r\n  if (reason === 'clickaway') {\r\n    return;\r\n  }\r\n\r\n  setOpenSnackbar(false);\r\n};\r\n\r\nconst handleEdit=(e)=>{\r\nconsole.log(\"edit\",e);\r\nsetData(e);\r\nsetOpen(true);\r\n}\r\n\r\nconst deleteUser =(id)=>{\r\n DataService.remove(id);\r\n retrieveUsers();\r\n console.log(getUser)\r\n handleClickSnackbar();\r\n window.location=\"/UserManagement\";\r\n}\r\n\r\nuseEffect(() => {\r\n retrieveUsers();\r\n  },[]);\r\n\r\n  const retrieveUsers = async () => {\r\n   await DataService.getAll()\r\n      .then(response => {\r\n         setUserData(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  const [getSearch,setSearch]=useState([]);\r\n  const search=(searchTerm)=>{\r\n    if(searchTerm==''){\r\nretrieveUsers();\r\n    }\r\n    else{\r\n      DataService.search(searchTerm).then(responce=>{\r\n        setSearch(responce.data);\r\n        setUserData(responce.data);\r\n        console.log(getSearch)\r\n       \r\n    });\r\n    }\r\n    }\r\nreturn (\r\n<>\r\n<TextField label=\"Search...\" variant=\"outlined\"\r\n        onChange={e=> search(e.target.value)} />\r\n        {/* <Button color=\"primary\" onClick={handlesearch}>SERACH</Button> */}\r\n<div className={classes.root}>\r\n      <Snackbar  anchorOrigin={{ vertical, horizontal }} key={vertical + horizontal}\r\n       open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n        <Alert onClose={handleCloseSnackbar} severity=\"success\">\r\n         User status become inActive now!\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n<TableContainer component={Paper}>\r\n<SearchAndAdd/>\r\n<Table stickyHeader aria-label=\"sticky table\">\r\n<TableHead>\r\n<TableRow>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>ID</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>FIRST NAME</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>LAST NAME</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>STATUS</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>DOB</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>JOIN DATE</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>EMAIL</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>ACTION</TableCell>\r\n\r\n</TableRow>\r\n</TableHead>\r\n<TableBody>\r\n{getUser.map((row) => (\r\n  <>\r\n  {row.status==='Active' &&\r\n  <TableRow key={row.id}  hover role=\"checkbox\" tabIndex={-1}>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.id}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.firstName}</TableCell>\r\n<TableCell style={{ minWidth: row.minWidth}}  align=\"center\">{row.lastName}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.status}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.dob}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.createdAt}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.email}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">\r\n<Button onClick={() => handleEdit(row)}><EditIcon style={{color:'blue'}} /></Button>\r\n<Button onClick={() => handleDeleteBoxOpen(row)}><DeleteIcon style={{color:'Orange'}} /></Button>\r\n</TableCell>\r\n</TableRow>\r\n}\r\n</>\r\n\r\n)\r\n\r\n)}\r\n\r\n</TableBody>\r\n\r\n</Table>\r\n</TableContainer>\r\n\r\n<div>\r\n<Modal\r\naria-labelledby=\"transition-modal-title\"\r\naria-describedby=\"transition-modal-description\"\r\nclassName={classes.modal}\r\nopen={open}\r\nonClose={handleClose}\r\ncloseAfterTransition\r\nBackdropComponent={Backdrop}\r\nBackdropProps={{\r\ntimeout: 500,\r\n}}\r\n>\r\n<Fade in={open}>\r\n<div className={classes.paper}>\r\n<UpdateProfileForm data={getData}/>\r\n</div>\r\n</Fade>\r\n\r\n</Modal>\r\n</div>\r\n\r\n<Dialog open={openDilogBox} onClose={handleDeleteBoxClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">YOU LIKE TO DELETE THIS USER</DialogTitle>\r\n        {getUserName}\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"USER NAME\"\r\n            type=\"email\"\r\n            fullWidth\r\n            onChange={e => setfName(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteBoxClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteBoxClose} color=\"primary\">\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n</>\r\n);\r\n}","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\DashBoard\\SettingsUserPage\\UserSettings.js",["297","298","299","300","301","302"],"import React from 'react';\r\nimport CenteredTab from \"../../components/CenteredTabs/ActiveUsers\";\r\nimport Icons from \"../../components/Icons/Icons\";\r\nimport MenuBar from \"../../components/MenuBar/Menu\";\r\nimport PopUp from \"../../components/PopUpBox/PopUp\";\r\nimport RECTable from \"../../components/RECTable/Table\";\r\nimport User from \"../../components/CenteredTabs/User\";\r\nimport ActiveUser from\"../../components/CenteredTabs/ActiveUsers\";\r\nimport InActiveUser from\"../../components/CenteredTabs/inActiveUser\";\r\nconst UserSettings=()=>{\r\n    return(\r\n        <>\r\n        <MenuBar/>\r\n        <User/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserSettings;","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\CenteredTabs\\User.js",["303","304"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ActiveUser from \"./ActiveUsers\";\r\nimport InActiveUser from \"./inActiveUser\";\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Link from '@material-ui/core/Link';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport MenuBar from \"../MenuBar/Menu\";\r\nimport UserSettings from \"../../DashBoard/SettingsUserPage/UserSettings\";\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function User() {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  // function handleClick() {\r\n  //   history.push(\"/User\");\r\n  //   console.info('You clicked a breadcrumb.');\r\n  // }\r\n\r\n  // function handleClick1(event){\r\n  //   history.push('/Menu')\r\n  // }\r\n\r\n  return (\r\n    <div className={classes.root} style={{backgroundColor:'LightGray'}}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n      <Breadcrumbs aria-label=\"breadcrumb\">\r\n      <Link color=\"inherit\" href=\"/Menu\">\r\n        Menu\r\n      </Link>\r\n      <Link color=\"inherit\" href=\"/\">\r\n        Users\r\n      </Link>\r\n    </Breadcrumbs>\r\n        <Tabs\r\n          value={value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n        >\r\n          <Tab label=\"MANAGE ACTIVE USER\" {...a11yProps(0)} />\r\n          <Tab label=\"INACTIVE USER\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <ActiveUser/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <InActiveUser/>\r\n      </TabPanel>\r\n      <Router>\r\n    <Switch>\r\n        <Route exact path=\"/Menu\" component={MenuBar} />\r\n    </Switch>\r\n</Router>\r\n    </div>\r\n   \r\n  );\r\n}\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\CenteredTabs\\inActiveUser.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\InputFieldsUser\\AddUser.js",["305","306","307","308","309"],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\RECTable\\Table1.js",["310","311","312","313","314","315","316","317"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport InputFields from '../InputFieldsUser/AddUser';\r\nimport TimelapseIcon from '@material-ui/icons/Timelapse';\r\nimport DataService from \"../../Service/service\";\r\nimport SearchAndAdd from \"./SearchAndAdd\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n      },\r\n      container: {\r\n        maxHeight: 440,\r\n      },\r\n      modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n\r\n}));\r\n\r\nexport default function BasicTable() {\r\nconst classes = useStyles();\r\nconst [open, setOpen] = React.useState(false);\r\nconst [getUser,setUserData]=useState([]);\r\nconst [getData,setData]=useState('');\r\nconst handleOpen = () => {\r\nsetOpen(true);\r\n};\r\n\r\n\r\nconst handleClose = () => {\r\nsetOpen(false);\r\n};\r\n\r\nconst handleDelete=(id)=>{\r\n  deleteUser(id);\r\n    console.log(\"user deleted with id:=\",id);\r\n    \r\n}\r\n\r\nconst handleEdit=(e)=>{\r\nconsole.log(\"edit\",e);\r\nsetData(e);\r\nsetOpen(true);\r\n}\r\n\r\nconst deleteUser =(id)=>{\r\n DataService.remove(id);\r\n console.log(getUser)\r\n}\r\n\r\n\r\nuseEffect(() => {\r\n retrieveUsers();\r\n  },[]);\r\n\r\n  const retrieveUsers = async () => {\r\n   await DataService.getAll()\r\n      .then(response => {\r\n         setUserData(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\nreturn (\r\n<>\r\n<TableContainer component={Paper}>\r\n<Table stickyHeader aria-label=\"sticky table\">\r\n<TableHead>\r\n<TableRow>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>ID</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>FIRST NAME</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>LAST NAME</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>STATUS</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>DOB</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>JOIN DATE</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>EMAIL</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>ACTION</TableCell>\r\n\r\n</TableRow>\r\n</TableHead>\r\n<TableBody>\r\n{getUser.map((row) => (\r\n  <>\r\n  {row.status==='inActive'&&\r\n<TableRow key={row.id}  hover role=\"checkbox\" tabIndex={-1}>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.id}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.firstName}</TableCell>\r\n<TableCell style={{ minWidth: row.minWidth}}  align=\"center\">{row.lastName}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.status}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.dob}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.createdAt}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.email}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">\r\n<Button onClick={() => handleEdit(row)}><TimelapseIcon style={{color:'blue'}} /></Button>\r\n</TableCell>\r\n</TableRow>\r\n}\r\n</>\r\n))}\r\n</TableBody>\r\n\r\n</Table>\r\n</TableContainer>\r\n\r\n<div>\r\n<Modal\r\naria-labelledby=\"transition-modal-title\"\r\naria-describedby=\"transition-modal-description\"\r\nclassName={classes.modal}\r\nopen={open}\r\nonClose={handleClose}\r\ncloseAfterTransition\r\nBackdropComponent={Backdrop}\r\nBackdropProps={{\r\ntimeout: 500,\r\n}}\r\n>\r\n<Fade in={open}>\r\n<div className={classes.paper}>\r\nTime Tracker for inActive user\r\n</div>\r\n</Fade>\r\n</Modal>\r\n</div>\r\n\r\n</>\r\n);\r\n}","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\service.js",["318"],"import http from \"./ConnectionAxios\";\r\n\r\n// async function  getAll(){\r\n//    return await http.get(\"/users\");\r\n// };\r\n\r\nconst getAll = async () => {\r\n\r\n  return await http.get(\"/users\");\r\n}\r\n\r\nconst get = async(id) => {\r\n  return await http.get(`/tutorials/${id}`);\r\n};\r\n\r\nconst create = async(data) => {\r\n  return await http.post(\"/create\", data);\r\n};\r\n\r\nconst update = async(id, data) => {\r\n  return await  http.put(`/update/${id}`, data);\r\n};\r\n\r\nconst remove = async(id) => {\r\n  return await http.delete(`/users/${id}`);\r\n};\r\n\r\n\r\nconst search = async(keyword) => {\r\n  return await http.get(`/search?keyword=${keyword}`);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  get,\r\n  create,\r\n  update,\r\n  remove,\r\n  search\r\n};\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\ConnectionAxios.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\RECTable\\AddUserTable.js",["319","320","321","322"],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\RECTable\\SearchAndAdd.js",["323","324","325","326","327","328","329"],"import React, { useState, useEffect } from 'react';\r\nimport {fade, makeStyles } from '@material-ui/core/styles';\r\nimport CreateUser from \"./AddUserTable\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport DataService from \"../../Service/service\";\r\nimport Table from \"./Table\";\r\nimport RegistrationForm from \"../FormikValidationForm/RegistrationForm\";\r\nconst useStyles = makeStyles((theme) => ({\r\n      modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n}));\r\n\r\nconst SearchAndAdd=()=>{\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n      const handleOpen = () => {\r\n        setOpen(true);\r\n        };\r\n\r\n        const handleClose= () => {\r\n            setOpen(false);\r\n            };\r\n\r\n\r\n    return(\r\n        <>\r\n        <div style={{float:'left',margin:'20px'}}>\r\nREGISTERED USER\r\n</div>\r\n<div style={{float:'right',margin:'20px'}}>\r\n<Button color=\"primary\"><GetAppIcon/></Button>\r\n<Button color=\"primary\" onClick={handleOpen}>\r\n<AddIcon/>\r\nADD USER</Button>\r\n</div>\r\n\r\n<div>\r\n<Modal\r\naria-labelledby=\"transition-modal-title\"\r\naria-describedby=\"transition-modal-description\"\r\nclassName={classes.modal}\r\nopen={open}\r\nonClose={handleClose}\r\ncloseAfterTransition\r\nBackdropComponent={Backdrop}\r\nBackdropProps={{\r\ntimeout: 500,\r\n}}\r\n>\r\n<Fade in={open}>\r\n<div className={classes.paper}>\r\n<RegistrationForm/>\r\n</div>\r\n</Fade>\r\n\r\n</Modal>\r\n</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchAndAdd;","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\UserLandingPage\\UserInterviewForm.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\UserLandingPage\\DocumentForm.js",["330","331","332","333","334","335","336","337","338","339","340"],"import React, { useState ,useEffect,useReducer} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from \"axios\";\r\nimport Card from '@material-ui/core/Card';\r\nimport * as yup from \"yup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Formik, Form} from \"formik\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nlet Schema = yup.object().shape({\r\n  ProjectName: yup.string()\r\n  .min(2, 'Too Short!')\r\n     .max(70, 'Too Long!'),\r\n  ProjectDescription: yup.string()\r\n  .min(20, 'Too Short!')\r\n     .max(200, 'Too Long!'),\r\n     WebSiteLink: yup.string()\r\n     .min(5, 'Too Short!')\r\n        .max(200, 'Too Long!'),\r\n        Document: yup.string()\r\n        .min(20, 'Too Short!')\r\n           .max(200, 'Too Long!')\r\n           .required(\"Documetn inforamtion is required.\"),\r\n           experience: yup.number()\r\n           .min(0, 'Too Short!')\r\n              .max(5, 'Too Long!')\r\n              .required(\"experience is required.\"),\r\n})\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        minWidth: 275,\r\n      },\r\n    },\r\n  }));\r\n\r\nconst  UserDeatilsForm=()=>{\r\n    const classes = useStyles();\r\n    const [file, setFile] = useState(null);\r\n\r\n\r\n\r\n  const UPLOAD_ENDPOINT =\r\n    \"http://localhost:8080/file/uploadFile\";\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    let res = await uploadFile(file);\r\n  };\r\n\r\n  const uploadFile = async file => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    return await axios.post(UPLOAD_ENDPOINT, formData).then(res=>{\r\n   handleClickSnackbar();\r\n    });\r\n  };\r\n\r\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n  const [response,setResponse]=React.useState([]);\r\n  const [snackcolor,setsnackcolor]=React.useState('');\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: 'top',\r\n    horizontal: 'center',\r\n  });\r\n  const { vertical, horizontal} = state;\r\n  const handleClickSnackbar = () => {\r\n    setOpenSnackbar(true);\r\n  };\r\n  \r\n  const handleCloseSnackbar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n  \r\n    setOpenSnackbar(false);\r\n  };\r\n  const handleOnChange = e => {\r\n    console.log(e.target.files[0]);\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const [fields, setFields] = useState([{ value: null }]);\r\n  const [checked, setChecked] = React.useState(true);\r\n\r\n  const handleChangeCheck = (event) => {\r\n    setChecked(event.target.checked);\r\n  };\r\n\r\n  function handleChange(i, event) {\r\n    const values = [...fields];\r\n    values[i].value = event.target.value;\r\n    setFields(values);\r\n  }\r\n\r\n  function handleAdd() {\r\n    const values = [...fields];\r\n    values.push({ value: null });\r\n    setFields(values);\r\n  }\r\n\r\n  function handleRemove(i) {\r\n    const values = [...fields];\r\n    values.splice(i, 1);\r\n\r\n    setFields(values);\r\n  }\r\n\r\n\r\n  const[userdocument,setDocument]=useState(()=>{\r\n    let storge=JSON.parse(localStorage.getItem('document'));\r\n    return storge?storge:[];\r\n  });\r\n    return(\r\n<>\r\n<div className={classes.root}>\r\n      <Snackbar  anchorOrigin={{ vertical, horizontal }} key={vertical + horizontal}\r\n       open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n        <Alert onClose={handleCloseSnackbar} severity={snackcolor}>\r\n     {response}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n<div style={{marginTop:\"20px\"}}>\r\n<form onSubmit={handleSubmit}>\r\n      <Typography>UPLOAD RESUME</Typography>\r\n      <Button\r\n  variant=\"contained\"\r\n  component=\"label\"\r\n>\r\n  Upload File\r\n  <input type=\"file\" onChange={handleOnChange} />\r\n</Button>\r\n     \r\n      <Button color=\"secondary\"\r\n              variant=\"contained\"\r\n              color=\"primary\" type=\"submit\">Upload File</Button>\r\n    </form>\r\n              \r\n            </div>\r\n            <Typography align='left' style={{margin:'20px',fontSize:'20px',color:'black'}}>ADD FIELDS</Typography>\r\n            <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\" type=\"button\" onClick={() => handleAdd()}>\r\n        +\r\n      </Button>\r\n            {fields.map((field, idx) => {\r\n        return (\r\n          <div key={`${field}-${idx}`}>\r\n        <Formik\r\n          initialValues={{\r\n         ProjectName:'',\r\n         ProjectDescription:'',\r\n         WebSiteLink:'',\r\n         Document:'',\r\n         LastUpdate:new Date(),\r\n         experience:''\r\n          }}\r\n          validationSchema={Schema}\r\n          onSubmit={values => {\r\n            console.log(values)\r\n            localStorage.setItem('document',JSON.stringify({...values}));\r\n              setsnackcolor(\"success\");\r\n              setResponse(\"DOCUMENT SAVED SUCCESFULLY\");\r\n              handleClickSnackbar();  \r\n          }}\r\n        >\r\n          {({ errors, handleChange, touched }) => (\r\n            <Form className={classes.form}>\r\n                <Card className={classes.root} style={{margin:'20px'}}>\r\n                <CardContent>\r\n              <Grid container spacing={2}>  \r\n              <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.experience && touched.experience}\r\n                    autoComplete=\"experience\"\r\n                    name=\"experience\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdocument.experience}\r\n                    onChange={handleChange}\r\n                    id=\"experience\"\r\n                    label=\"EXPERIENCE\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.experience && touched.experience\r\n                        ? errors.experience\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n \r\n        <Grid item xs={12} sm={6}>\r\n        <TextField\r\n                    error={errors.ProjectName && touched.ProjectName}\r\n                    autoComplete=\"ProjectName\"\r\n                    name=\"ProjectName\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdocument.ProjectName}\r\n                    onChange={handleChange}\r\n                    id=\"ProjectName\"\r\n                    label=\"PROJECT NAME\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.ProjectName && touched.ProjectName\r\n                        ? errors.ProjectName\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n             <Grid container spacing={3} style={{marginTop:'20px'}}>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n                    error={errors.ProjectDescription && touched.ProjectDescription}\r\n                    autoComplete=\"ProjectDescription\"\r\n                    name=\"ProjectDescription\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdocument.ProjectDescription}\r\n                    onChange={handleChange}\r\n                    id=\"ProjectDescription\"\r\n                    label=\"PROJECT DESCRIPTION\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.ProjectDescription && touched.ProjectDescription\r\n                        ? errors.ProjectDescription\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.WebSiteLink && touched.WebSiteLink}\r\n                    autoComplete=\"WebSiteLink\"\r\n                    name=\"WebSiteLink\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdocument.WebSiteLink}\r\n                    onChange={handleChange}\r\n                    id=\"WebSiteLink\"\r\n                    label=\"URL\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.WebSiteLink && touched.WebSiteLink\r\n                        ? errors.WebSiteLink\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.Document && touched.Document}\r\n                    autoComplete=\"Document\"\r\n                    name=\"Document\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdocument.Document}\r\n                    onChange={handleChange}\r\n                    id=\"Document\"\r\n                    label=\"DOCUMENT INFORMATION\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.Document && touched.Document\r\n                        ? errors.Document\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n      </Grid>\r\n              \r\n                </Grid>\r\n                </CardContent>\r\n                </Card>\r\n                {/* ------- */}\r\n        \r\n              <Button\r\n                type=\"submit\"\r\n            \r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Save\r\n              </Button>\r\n\r\n            </Form>\r\n            \r\n          )}\r\n        </Formik>\r\n      \r\n        <Button\r\n                type=\"submit\"\r\n            \r\n                variant=\"contained\"\r\n                color=\"primary\" type=\"button\" onClick={() => handleRemove(idx)}>\r\n              X\r\n            </Button>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n</>\r\n    )\r\n}\r\nexport default UserDeatilsForm;","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\UserLandingPage\\UserDeatilsForm.js",["341","342","343","344","345","346","347"],"import React, { useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport * as yup from \"yup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Formik, Form} from \"formik\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\nconst addressRegex = /^[a-zA-Z0-9][a-zA-Z0-9 .,-]*$/;\r\n\r\nlet Schema = yup.object().shape({\r\n  firstName: yup.string()\r\n  .min(2, 'Too Short!')\r\n     .max(70, 'Too Long!')\r\n     .required(\"This field is required.\"),\r\n  lastName: yup.string()\r\n  .min(1, 'Too Short!')\r\n     .max(20, 'Too Long!')\r\n     .required(\"This field is required.\"),\r\n  email: yup\r\n    .string()\r\n    .email()\r\n    .required(\"This field is required.\"),\r\n      phoneNumber: yup.string().matches(phoneRegExp, 'Phone number is not valid'),\r\n      summary: yup.string()\r\n      .min(10, 'Too Short!')\r\n         .max(250, 'Too Long!')\r\n         .required(\"Please tell about yourself\"),\r\n\r\n         street1: yup.string()\r\n         .min(2, \"Must be at least ${min} characters.\")\r\n         .max(60, \"Must be no more than ${max} characters.\")\r\n         .matches(\r\n           addressRegex,\r\n           \"May only contain hyphens, periods, commas or alphanumeric characters.\"\r\n         )\r\n         .required(\"Required.\"),\r\n       street2: yup.string()\r\n         .nullable()\r\n         .max(60, \"Must be no more than ${max} characters.\")\r\n         .matches(addressRegex, {\r\n           excludeEmptyString: true,\r\n           message:\r\n             \"May only contain hyphens, periods, commas or alphanumeric characters.\"\r\n         }),\r\n       city: yup.string()\r\n         .max(20, \"Must be no more than ${max} characters.\")\r\n         .matches(\r\n           addressRegex,\r\n           \"May only contain hyphens, periods, commas or alphanumeric characters.\"\r\n         )\r\n         .required(\"Required.\"),\r\n       state: yup.string().required(\"Required.\"),\r\n       zipCode: yup.number()\r\n         .min(501, \"Invalid zip code.\")\r\n         .max(999501, \"Invalid zip code.\")\r\n         .required(\"Required.\")  \r\n\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        minWidth: 275,\r\n      },\r\n    },\r\n  }));\r\n\r\nconst  UserDeatilsForm=()=>{\r\n    const classes = useStyles();\r\n\r\n\r\n    const [checked, setChecked] = React.useState(true);\r\n\r\n    const handleChangeCheck = (event) => {\r\n      setChecked(event.target.checked);\r\n    };\r\n\r\n\r\n\r\n    const[userdeatils,setuserdeatils]=useState(()=>{\r\n      let storge=JSON.parse(localStorage.getItem('userdetails'));\r\n  \r\n      return storge?storge:[];\r\n    });\r\n\r\n    \r\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n  const [response,setResponse]=React.useState([]);\r\n  const [snackcolor,setsnackcolor]=React.useState('');\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: 'top',\r\n    horizontal: 'center',\r\n  });\r\n  const { vertical, horizontal} = state;\r\n  const handleClickSnackbar = () => {\r\n    setOpenSnackbar(true);\r\n  };\r\n  \r\n  const handleCloseSnackbar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n  \r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n    return(\r\n<>\r\n<div className={classes.root}>\r\n      <Snackbar  anchorOrigin={{ vertical, horizontal }} key={vertical + horizontal}\r\n       open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n        <Alert onClose={handleCloseSnackbar} severity={snackcolor}>\r\n     {response}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n<Typography align='left' style={{margin:'20px',fontSize:'20px',color:'black'}}>Basic Details</Typography>\r\n        <Formik\r\n          initialValues={{\r\n          firstName:userdeatils.firstName,\r\n          lastName:'',\r\n          email:'',\r\n          phoneNumber:'',\r\n          summary:'',\r\n          dataofappl:new Date(),\r\n          street1:'',\r\n          street2:'',\r\n          city:'',\r\n          state:'',\r\n          zipCode:''\r\n          }}\r\n          validationSchema={Schema}\r\n          onSubmit={values => {\r\n            console.log(values)\r\n        \r\n            setuserdeatils({...values});\r\n            localStorage.setItem('emailvalue',values.email)\r\n            localStorage.setItem('userdetails',JSON.stringify({...values}))\r\n            setsnackcolor(\"success\");\r\n              setResponse(\"USER DETAILS SAVED SUCCESFULLY\");\r\n              handleClickSnackbar(); \r\n          }}\r\n        >\r\n          {({ errors, handleChange, touched }) => (\r\n            <Form className={classes.form}>\r\n                <Card className={classes.root} style={{margin:'20px'}}>\r\n                <CardContent>\r\n              <Grid container spacing={2}>   \r\n                <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    error={errors.firstName && touched.firstName}\r\n                    autoComplete=\"firstName\"\r\n                    name=\"firstName\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdeatils.firstName}\r\n                    onChange={handleChange}\r\n                    id=\"firstName\"\r\n                    label=\"FIRST NAME\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.firstName && touched.firstName\r\n                        ? errors.firstName\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n        <TextField\r\n                    error={errors.lastName && touched.lastName}\r\n                    autoComplete=\"lastName\"\r\n                    name=\"lastName\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdeatils.lastName}\r\n                    onChange={handleChange}\r\n                    id=\"lastName\"\r\n                    label=\"LAST NAME\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.lastName && touched.lastName\r\n                        ? errors.lastName\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n             <Grid container spacing={3} style={{marginTop:'20px'}}>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n                    error={errors.email && touched.email}\r\n                    autoComplete=\"email\"\r\n                    name=\"email\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdeatils.email}\r\n                    onChange={handleChange}\r\n                    id=\"email\"\r\n                    label=\"EMAIL ID\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.email && touched.email\r\n                        ? errors.email\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.phoneNumber && touched.phoneNumber}\r\n                    autoComplete=\"phoneNumber\"\r\n                    name=\"phoneNumber\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdeatils.phoneNumber}\r\n                    onChange={handleChange}\r\n                    id=\"phoneNumber\"\r\n                    label=\"PHONE NO\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.phoneNumber && touched.phoneNumber\r\n                        ? errors.phoneNumber\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.summary && touched.summary}\r\n                    autoComplete=\"summary\"\r\n                    name=\"summary\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdeatils.summary}\r\n                    onChange={handleChange}\r\n                    id=\"summary\"\r\n                    label=\"SUMMARY\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.summary && touched.summary\r\n                        ? errors.summary\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n      </Grid>\r\n              \r\n                </Grid>\r\n                </CardContent>\r\n                </Card>\r\n                <Typography align='left' style={{margin:'20px',fontSize:'20px',color:'black'}}>\r\n                  Address Details</Typography>\r\n                  <Card className={classes.root} style={{margin:'20px'}}>\r\n                <CardContent>\r\n              <Grid container spacing={2}>   \r\n                <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    error={errors.street1 && touched.street1}\r\n                    autoComplete=\"street1\"\r\n                    name=\"street1\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdeatils.street1}\r\n                    onChange={handleChange}\r\n                    id=\"street1\"\r\n                    label=\"ADDRESS LINE1\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.street1 && touched.street1\r\n                        ? errors.street1\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n        <TextField\r\n                    error={errors.street2 && touched.street2}\r\n                    autoComplete=\"street2\"\r\n                    name=\"street2\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdeatils.street2}\r\n                    onChange={handleChange}\r\n                    id=\"street2\"\r\n                    label=\"ADDRESS LINE2\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.street2 && touched.street2\r\n                        ? errors.street2\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n             <Grid container spacing={3} style={{marginTop:'20px'}}>\r\n        <Grid item xs={12} sm={4}>\r\n      \r\n          <TextField\r\n                    error={errors.city && touched.city}\r\n                    autoComplete=\"city\"\r\n                    name=\"city\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdeatils.city}\r\n                    onChange={handleChange}\r\n                    id=\"city\"\r\n                    label=\"CITY\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.city && touched.city\r\n                        ? errors.city\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.state && touched.state}\r\n                    autoComplete=\"state\"\r\n                    name=\"state\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdeatils.state}\r\n                    onChange={handleChange}\r\n                    id=\"state\"\r\n                    label=\"STATE\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.state && touched.state\r\n                        ? errors.state\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.zipCode && touched.zipCode}\r\n                    autoComplete=\"zipCode\"\r\n                    name=\"zipCode\"\r\n                    variant=\"outlined\"\r\n                    defaultValue={userdeatils.zipCode}\r\n                    onChange={handleChange}\r\n                    id=\"zipCode\"\r\n                    label=\"Pin Code\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.zipCode && touched.zipCode\r\n                        ? errors.zipCode\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n      </Grid>\r\n              \r\n                </Grid>\r\n                </CardContent>\r\n                </Card>\r\n                {/* ------- */}\r\n        \r\n        \r\n                <Button\r\n                type=\"submit\"\r\n            \r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Save\r\n              </Button>\r\n             \r\n\r\n            </Form>\r\n            \r\n          )}\r\n        </Formik>\r\n\r\n\r\n</>\r\n    )\r\n}\r\nexport default UserDeatilsForm;","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\UserLandingPage\\EducationSkillsForm.js",["348","349","350","351","352","353","354","355","356","357","358"],"import React, { useState ,useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport { Formik, Form, Field, ErrorMessage  } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet Schema = yup.object().shape({\r\n  schoolName: yup.string()\r\n  .min(4, 'Too Short!')\r\n     .max(70, 'Too Long!')\r\n     .required(\"This field is required.\"),\r\n  schoolBoard: yup.string()\r\n  .min(5, 'Too Short!')\r\n     .max(70, 'Too Long!')\r\n     .required(\"This field is required.\"),\r\n     completedYear: yup.number()\r\n     .min(2000, 'Too Short!')\r\n     .max(2020, 'Too Long!')\r\n        .required(\"This field is required.\"),    \r\n        percentage:yup.number()\r\n        .min(55, 'Too Short!')\r\n        .max(100, 'Too Long!')\r\n        .required(\"This field is required.\"),\r\n        place:yup.string()\r\n        .min(2, 'Too Short!')\r\n        .max(20, 'Too Long!')\r\n        .required(\"This field is required.\"),\r\n\r\n        collageName: yup.string()\r\n  .min(4, 'Too Short!')\r\n     .max(70, 'Too Long!')\r\n     .required(\"This field is required.\"),\r\n  collageBoard: yup.string()\r\n  .min(5, 'Too Short!')\r\n     .max(70, 'Too Long!')\r\n     .required(\"This field is required.\"),\r\n     completedYear1: yup.number()\r\n     .min(2000, 'Too Short!')\r\n        .max(2020, 'Too Long!')\r\n        .required(\"This field is required.\"),    \r\n        percentage1:yup.number()\r\n        .min(55, 'Too Short!')\r\n        .max(100, 'Too Long!')\r\n        .required(\"This field is required.\"),\r\n        place1:yup.string().\r\n        min(2, 'Too Short!')\r\n        .max(20, 'Too Long!')\r\n        .required(\"This field is required.\"),\r\n\r\n        \r\n        collageName1: yup.string()\r\n  .min(4, 'Too Short!')\r\n     .max(70, 'Too Long!')\r\n     .required(\"This field is required.\"),\r\n  collageBoard1: yup.string()\r\n  .min(5, 'Too Short!')\r\n     .max(70, 'Too Long!')\r\n     .required(\"This field is required.\"),\r\n     completedYear2: yup.number()\r\n     .min(2000, 'Too Short!')\r\n        .max(2020, 'Too Long!')\r\n        .required(\"This field is required.\"),    \r\n        percentage2:yup.number()\r\n        .min(55, 'Too Short!')\r\n        .max(100, 'Too Long!')\r\n        .required(\"This field is required.\"),\r\n        place2:yup.string().\r\n        min(2, 'Too Short!')\r\n        .max(20, 'Too Long!')\r\n        .required(\"This field is required.\"),\r\n       \r\n        \r\n\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        minWidth: 275,\r\n      },\r\n    },\r\n  }));\r\n\r\nconst  UserDeatilsForm=({educdata})=>{\r\n    const classes = useStyles();\r\n   \r\nconst [educationDeatails,seteducationDeatails]=useState([]);\r\n    const [checked, setChecked] = React.useState(true);\r\n\r\n    const handleChangeCheck = (event) => {\r\n      setChecked(event.target.checked);\r\n    };\r\n   \r\n    const[education,setEducation]=useState(()=>{\r\n      let storge=JSON.parse(localStorage.getItem('education'));\r\n      return storge?storge:[];\r\n    });\r\n\r\n    const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n  const [response,setResponse]=React.useState([]);\r\n  const [snackcolor,setsnackcolor]=React.useState('');\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: 'top',\r\n    horizontal: 'center',\r\n  });\r\n  const { vertical, horizontal} = state;\r\n  const handleClickSnackbar = () => {\r\n    setOpenSnackbar(true);\r\n  };\r\n  \r\n  const handleCloseSnackbar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n  \r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n    return(\r\n      <>\r\n      <div className={classes.root}>\r\n      <Snackbar  anchorOrigin={{ vertical, horizontal }} key={vertical + horizontal}\r\n       open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n        <Alert onClose={handleCloseSnackbar} severity={snackcolor}>\r\n     {response}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n<Typography align='left' style={{margin:'20px',fontSize:'20px',color:'black'}}>SECONDARY EDUCATION DETAILS (10th)</Typography>\r\n        <Formik\r\n          initialValues={{\r\n          schoolName:'',\r\n          schoolBoard:'',\r\n          completedYear:'',\r\n          percentage:'',\r\n          place:'',\r\n\r\n          collageName:'',\r\n          collageBoard:'',\r\n          completedYear1:'',\r\n          percentage1:'',\r\n          place1:'',\r\n\r\n          collageName1:'',\r\n          collageBoard1:'',\r\n          completedYear2:'',\r\n          percentage2:'',\r\n          place2:''\r\n          }}\r\n          validationSchema={Schema}\r\n          onSubmit={values => {\r\n            console.log(values)\r\n            localStorage.setItem('education',JSON.stringify({...values}))\r\n            setsnackcolor(\"success\");\r\n              setResponse(\"EDUCATION DETAILS SAVED SUCCESFULLY\");\r\n              handleClickSnackbar(); \r\n          }}\r\n        >\r\n          {({ errors, handleChange, touched }) => (\r\n            <Form className={classes.form}>\r\n                <Card className={classes.root} style={{margin:'20px'}}>\r\n                <CardContent>\r\n              <Grid container spacing={2}>   \r\n                <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    error={errors.schoolName && touched.schoolName}\r\n                    autoComplete=\"schoolName\"\r\n                    name=\"schoolName\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.schoolName}\r\n                    onChange={handleChange}\r\n                    id=\"schoolName\"\r\n                    label=\"SCHOOL NAME\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.schoolName && touched.schoolName\r\n                        ? errors.schoolName\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n        <TextField\r\n                    error={errors.schoolBoard && touched.schoolBoard}\r\n                    autoComplete=\"schoolBoard\"\r\n                    name=\"schoolBoard\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.schoolBoard}\r\n                    onChange={handleChange}\r\n                    id=\"schoolBoard\"\r\n                    label=\"SCHOOL BOARD\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.schoolBoard && touched.schoolBoard\r\n                        ? errors.schoolBoard\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n             <Grid container spacing={3} style={{marginTop:'20px'}}>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n                    error={errors.completedYear && touched.completedYear}\r\n                    autoComplete=\"completedYear\"\r\n                    name=\"completedYear\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.completedYear}\r\n                    onChange={handleChange}\r\n                    id=\"completedYear\"\r\n                    label=\"COMPLETED YEAR\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.completedYear && touched.completedYear\r\n                        ? errors.completedYear\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.percentage && touched.percentage}\r\n                    autoComplete=\"percentage\"\r\n                    name=\"percentage\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.percentage}\r\n                    onChange={handleChange}\r\n                    id=\"percentage\"\r\n                    label=\"PERCENTAGE(%)\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.percentage && touched.percentage\r\n                        ? errors.percentage\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.place && touched.place}\r\n                    autoComplete=\"place\"\r\n                    name=\"place\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.place}\r\n                    onChange={handleChange}\r\n                    id=\"place\"\r\n                    label=\"PLACE\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.place && touched.place\r\n                        ? errors.place\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n      </Grid>\r\n              \r\n                </Grid>\r\n                </CardContent>\r\n                </Card>\r\n                <Typography align='left' style={{margin:'20px',fontSize:'20px',color:'black'}}>\r\n                HIGHER SECONDARY EDUCATION DETAILS (12th)</Typography>\r\n                  <Card className={classes.root} style={{margin:'20px'}}>\r\n                <CardContent>\r\n                <Grid container spacing={2}>   \r\n                <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    error={errors.collageName && touched.collageName}\r\n                    autoComplete=\"collageName\"\r\n                    name=\"collageName\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.collageName}\r\n                    onChange={handleChange}\r\n                    id=\"collageName\"\r\n                    label=\"COLLEGE NAME\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.collageName && touched.collageName\r\n                        ? errors.collageName\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n        <TextField\r\n                    error={errors.collageBoard && touched.collageBoard}\r\n                    autoComplete=\"collageBoard\"\r\n                    name=\"collageBoard\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.collageBoard}\r\n                    onChange={handleChange}\r\n                    id=\"collageBoard\"\r\n                    label=\"COLLEGE BOARD\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.collageBoard && touched.collageBoard\r\n                        ? errors.collageBoard\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n             <Grid container spacing={3} style={{marginTop:'20px'}}>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n                    error={errors.completedYear1 && touched.completedYear1}\r\n                    autoComplete=\"completedYear1\"\r\n                    name=\"completedYear1\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.completedYear1}\r\n                    onChange={handleChange}\r\n                    id=\"completedYear1\"\r\n                    label=\"COMPLETED YEAR\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.completedYear1 && touched.completedYear1\r\n                        ? errors.completedYear1\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.percentage1 && touched.percentage1}\r\n                    autoComplete=\"percentage1\"\r\n                    name=\"percentage1\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.percentage1}\r\n                    onChange={handleChange}\r\n                    id=\"percentage1\"\r\n                    label=\"PERCENTAGE(%)\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.percentage1 && touched.percentage1\r\n                        ? errors.percentage1\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.place1 && touched.place1}\r\n                    autoComplete=\"place1\"\r\n                    name=\"place1\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.place1}\r\n                    onChange={handleChange}\r\n                    id=\"place1\"\r\n                    label=\"PLACE\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.place1 && touched.place1\r\n                        ? errors.place1\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n      </Grid>\r\n      </Grid>\r\n                </CardContent>\r\n                </Card>\r\n                {/* ------- */}\r\n                <Typography align='left' style={{margin:'20px',fontSize:'20px',color:'black'}}>\r\n                GRADUCATION DETAILS</Typography>\r\n                  <Card className={classes.root} style={{margin:'20px'}}>\r\n                <CardContent>\r\n                <Grid container spacing={2}>   \r\n                <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    error={errors.collageName1 && touched.collageName1}\r\n                    autoComplete=\"collageName1\"\r\n                    name=\"collageName1\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.collageName1}\r\n                    onChange={handleChange}\r\n                    id=\"collageName1\"\r\n                    label=\"COLLEGE NAME\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.collageName1 && touched.collageName1\r\n                        ? errors.collageName1\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n        <TextField\r\n                    error={errors.collageBoard1 && touched.collageBoard1}\r\n                    autoComplete=\"collageBoard1\"\r\n                    name=\"collageBoard1\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.collageBoard1}\r\n                    onChange={handleChange}\r\n                    id=\"collageBoard1\"\r\n                    label=\"COLLEGE BOARD\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.collageBoard1 && touched.collageBoard1\r\n                        ? errors.collageBoard1\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n             <Grid container spacing={3} style={{marginTop:'20px'}}>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n                    error={errors.completedYear2 && touched.completedYear2}\r\n                    autoComplete=\"completedYear2\"\r\n                    name=\"completedYear2\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.completedYear2}\r\n                    onChange={handleChange}\r\n                    id=\"completedYear2\"\r\n                    label=\"COMPLETED YEAR\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.completedYear2 && touched.completedYear2\r\n                        ? errors.completedYear2\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.percentage2 && touched.percentage2}\r\n                    autoComplete=\"percentage2\"\r\n                    name=\"percentage2\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.percentage2}\r\n                    onChange={handleChange}\r\n                    id=\"percentage2\"\r\n                    label=\"PERCENTAGE(%)\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.percentage2 && touched.percentage2\r\n                        ? errors.percentage2\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.place2 && touched.place2}\r\n                    autoComplete=\"place2\"\r\n                    name=\"place2\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.place2}\r\n                    onChange={handleChange}\r\n                    id=\"place2\"\r\n                    label=\"PLACE\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.place2 && touched.place2\r\n                        ? errors.place2\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n      </Grid>\r\n      </Grid>\r\n                              </CardContent>\r\n                </Card>\r\n                \r\n    \r\n                <Button\r\n                type=\"submit\"\r\n            \r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Save\r\n              </Button>\r\n\r\n            </Form>\r\n            \r\n          )}\r\n        </Formik>\r\n\r\n\r\n</>\r\n    )\r\n}\r\nexport default UserDeatilsForm;","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\FormikValidationForm\\RegistrationForm.js",["359"],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\InterViewProceses\\LandingPageInterview.js",["360","361","362"],"import React from \"react\";\r\nimport Menu from \"../MenuBar/Menu\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SecondRound from \"./SecondInterviewProcess\";\r\nimport FinalRound from \"./FinalRound\";\r\nimport Questions from \"./Questions\";\r\nimport TimeCounter from \"./TimeCount\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  completed: {\r\n    display: 'inline-block',\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['step1', 'step2', 'step3'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <Questions/>;\r\n    case 1:\r\n      return <SecondRound/>;\r\n    case 2:\r\n      return <FinalRound/>;\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalNonLinearAlternativeLabelStepper() {\r\n  \r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [completed, setCompleted] = React.useState(new Set());\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n  const steps = getSteps();\r\n\r\n  const totalSteps = () => {\r\n    return getSteps().length;\r\n  };\r\n\r\n  const isStepOptional = (step) => {\r\n    return step === 1;\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped((prevSkipped) => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  };\r\n\r\n  const skippedSteps = () => {\r\n    return skipped.size;\r\n  };\r\n\r\n  const completedSteps = () => {\r\n    return completed.size;\r\n  };\r\n\r\n  const allStepsCompleted = () => {\r\n    return completedSteps() === totalSteps() - skippedSteps();\r\n  };\r\n\r\n  const isLastStep = () => {\r\n    return activeStep === totalSteps() - 1;\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const newActiveStep =\r\n      isLastStep() && !allStepsCompleted()\r\n        ? // It's the last step, but not all steps have been completed\r\n          // find the first step that has been completed\r\n          steps.findIndex((step, i) => !completed.has(i))\r\n        : activeStep + 1;\r\n\r\n    setActiveStep(newActiveStep);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleStep = (step) => () => {\r\n    setActiveStep(step);\r\n  };\r\n  \r\n\r\n  let history = useHistory();\r\n  const handleComplete = () => {\r\n    const newCompleted = new Set(completed);\r\n    newCompleted.add(activeStep);\r\n    setCompleted(newCompleted);\r\n    if (completed.size !== totalSteps() - skippedSteps()) {\r\n      handleNext();\r\n    }\r\n    if(completedSteps() === totalSteps() - 1){\r\n      let time=localStorage.getItem('minutes')+':'+localStorage.getItem('seconds');\r\n      let score=localStorage.getItem('score');\r\n      let details=localStorage.getItem('step2');\r\n          const ansjson={\r\n            \"answerDetials\":details,\r\n            \"applicationTest\": localStorage.getItem('seconds'),\r\n            \"atm\": {\r\n              \"applicationId\": localStorage.getItem('seconds'),\r\n              \"appltest\": {\r\n                \"code\": localStorage.getItem('seconds'),\r\n                \"duration\": localStorage.getItem('seconds'),\r\n                \"maxscore\": localStorage.getItem('score')\r\n              },\r\n              \"endTime\": localStorage.getItem('seconds'),\r\n              \"startTime\": localStorage.getItem('seconds'),\r\n              \"testid\": localStorage.getItem('seconds')\r\n            },\r\n            \"pass\": true,\r\n            \"recruiterid\": localStorage.getItem('seconds'),\r\n            \"totalGrades\": localStorage.getItem('seconds')\r\n          }\r\n          console.log(ansjson)\r\n          handleAnswer(ansjson)\r\n          // UserTestService.addUser(ansjson).then((res)=>{\r\n          //   console.log(res.data);\r\n          // })\r\n          console.log(\"success\"+ansjson)\r\n          localStorage.clear();\r\n          handleClickSnackbar();\r\n          history.push('/LandingPage');\r\n        }\r\n\r\n  };\r\n\r\n  const URL = 'http://localhost:8080/Answers/saveanswers';\r\n  const handleAnswer=(data)=>{\r\n    return axios.post(URL,data);\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n    setCompleted(new Set());\r\n    setSkipped(new Set());\r\n  };\r\n\r\n  const isStepSkipped = (step) => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  function isStepComplete(step) {\r\n    return completed.has(step);\r\n  }\r\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: 'top',\r\n    horizontal: 'center',\r\n  });\r\n  const { vertical, horizontal} = state;\r\n  const handleClickSnackbar = () => {\r\n    setOpenSnackbar(true);\r\n  };\r\n  \r\n  const handleCloseSnackbar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n  \r\n    setOpenSnackbar(false);\r\n  };\r\n  return (\r\n      <>\r\n      <Menu/>\r\n      <div className={classes.root}>\r\n      <Snackbar  anchorOrigin={{ vertical, horizontal }} key={vertical + horizontal}\r\n       open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n        <Alert onClose={handleCloseSnackbar} severity=\"success\">\r\n      USER LOGIN SUCCESSFULLY\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n<TimeCounter/>\r\n    <div className={classes.root}>\r\n      <Stepper alternativeLabel nonLinear activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const buttonProps = {};\r\n          if (isStepOptional(index)) {\r\n            buttonProps.optional = <Typography variant=\"caption\"></Typography>;\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepButton\r\n                onClick={handleStep(index)}\r\n                completed={isStepComplete(index)}\r\n                {...buttonProps}\r\n              >\r\n                {label}\r\n              </StepButton>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <div style={{backgroundColor:\"LightGray\"}}>\r\n        {allStepsCompleted() ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </div>\r\n        ) : (\r\n          <div style={{marginTop:\"20px\"}}>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                Next\r\n              </Button>\r\n              {isStepOptional(activeStep) && !completed.has(activeStep) && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleSkip}\r\n                  className={classes.button}\r\n                >\r\n                  Skip\r\n                </Button>\r\n              )}\r\n\r\n              {activeStep !== steps.length &&\r\n                (completed.has(activeStep) ? (\r\n                  <Typography variant=\"caption\" className={classes.completed}>\r\n                    Step {activeStep + 1} already completed\r\n                  </Typography>\r\n                ) : (\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={handleComplete}>\r\n                    {completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'}\r\n                  </Button>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\InterViewProceses\\SecondInterviewProcess.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\InterViewProceses\\FinalRound.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\LoginPage\\Login.js",["363","364","365"],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\FormikValidationForm\\UpdateProfileForm.js",["366","367"],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantLandingPage\\LandingPage.js",["368","369","370","371","372","373"],"import React, { useState, useEffect } from 'react';\r\nimport './LandingPage.css';\r\nimport DesktopViewImg from \"../Images/Careers-Banner.png\";\r\nimport DesktopViewImg1 from \"../Images/career-banner1.jpg\";\r\nimport MobileViewImg from \"../Images/carrer2.jpg\";\r\nimport adduser from \"../Images/adduser.png\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from \"@material-ui/core\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport LandingPageCard from \"./LandingPageCard\"\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport LandingPageMenu from \"../../components/MenuBar/MenuBarLandingPage\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport JobService from \"../../Service/JobService\";\r\nimport Interview from \"../InterViewProceses/LandingPageInterview\"\r\nconst category = [\r\n    {\r\n      value: 'IT',\r\n    },\r\n    {\r\n      value: 'MANAGEMENT',\r\n    },\r\n  ];\r\n\r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\n    root1:{\r\n        flexGrow: 1,\r\n    },\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '40ch',\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\nconst LandingPage=()=>{\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const imageUrl = window.innerWidth >= 650 ? DesktopViewImg : MobileViewImg;\r\n    const [Category, setCategory] = React.useState('');\r\n      const handleChange = (event) => {\r\n        setCategory(event.target.value);\r\n      };\r\n\r\n      const handleRedirect=()=>{\r\n        history.push(\"/Interview\");\r\n      }\r\n      const[data,setData]=useState([]);\r\n      useEffect(() => {\r\n       retrieveUsers();\r\n        },[]);\r\n      \r\n        const retrieveUsers = async () => {\r\n         await JobService.fetchUsers()\r\n            .then(response => {\r\n               setData(response.data);\r\n              console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n        };\r\n\r\n    return (\r\n        <>\r\n        <LandingPageMenu/>\r\n        <div style={{backgroundColor:'lightgray'}}>\r\n        <div className=\"LandingPageImg\" style={{backgroundImage: `url(${imageUrl})` }}>\r\n            <div className=\"LandingPageImg-content\">\r\n                {/* <a style={{fontSize:'40px',color:'#867979'}}>ENTRY LEVEL</a>\r\n                <a style={{fontSize:'40px',color:'#867979'}}>JOB OPPORTUNITIES</a> */}\r\n                <form className={classes.root} noValidate autoComplete=\"off\" style={{marginTop: '30px'}}>\r\n                <TextField id=\"outlined-basic\" label=\"Search\" variant=\"outlined\"/>\r\n                <Button variant=\"contained\" color=\"primary\" style={{width:'140px',height:'55px'}}>\r\n  Sarech\r\n</Button>\r\n</form>\r\n</div>        \r\n        </div>\r\n        <div className='rows' style={{marginTop:\"20px\",backgroundColor:'gray',color:'white'}}>\r\n     <div className='row' >\r\n         <h1>Join our  </h1><h1>Organization!!</h1></div>\r\n     <div className='row' style={{marginLeft:\"20px\"}}>\r\n    <h2>Tell us more about yourself and we'll keep you up-to-date regarding upcoming</h2>\r\n    <h4>events and career opportunities that match your interests.</h4>\r\n    <Button variant=\"contained\" color=\"primary\" style={{width:'180px'}} onClick={handleRedirect}>TAKE TEST</Button>\r\n     </div> \r\n     <div className='row' style={{margin:\"20px\"}}>\r\n     <img src={adduser} alt=\"Girl in a jacket\" style={{height:'100px'}}/>\r\n     </div>\r\n \r\n       </div>\r\n       <Typography variant=\"h4\" style={{textAlign:'start',margin:'20px'}}>\r\n       Job opportunities\r\n      </Typography>\r\n      <div style={{margin:'20px'}}>\r\n      <TextField id=\"outlined-basic\" label=\"Search\" variant=\"outlined\"/>\r\n      <Button variant=\"contained\" color=\"primary\" style={{width:'180px',height:'55px',marginLeft:'20px'}}>\r\n          Search</Button>\r\n \r\n      </div>\r\n      {/* <div style={{margin:'20px'}}>\r\n      <TextField\r\n          id=\"standard-select-currency\"\r\n          select\r\n          label=\"Job Category\"\r\n          value={Category}\r\n          onChange={handleChange}\r\n          helperText=\"Please select Job Category\"\r\n          style={{marginLeft:'20px'}}\r\n        >\r\n          {category.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.value}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n\r\n\r\n        <TextField\r\n          id=\"standard-select-currency\"\r\n          select\r\n          label=\"position name\"\r\n          value={Category}\r\n          onChange={handleChange}\r\n          helperText=\"Please select Job Category\"\r\n          style={{marginLeft:'20px'}}\r\n        >\r\n          {category.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.value}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n     \r\n\r\n        <TextField\r\n          id=\"standard-select-currency\"\r\n          select\r\n          label=\"Experience level\"\r\n          value={Category}\r\n          onChange={handleChange}\r\n          helperText=\"Please select Experience level\"\r\n           style={{marginLeft:'20px'}}\r\n        >\r\n          {category.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.value}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </div>\r\n */}\r\n\r\n<div className={classes.root1}>\r\n      <Grid container spacing={3}>\r\n\r\n    {data.map((elem)=>(\r\n        <Grid item xs>\r\n<LandingPageCard  jobdetails={elem}/>\r\n</Grid>\r\n    ))}     \r\n        \r\n      </Grid>\r\n      </div>\r\n      <Footer/>\r\n      </div>\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default LandingPage;","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantLandingPage\\LandingPageCard.js",["374","375","376","377","378","379","380","381","382","383"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function RecipeReviewCard({jobdetails}) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n      <Typography variant=\"body2\" gutterBottom align='left' style={{margin:'10px'}}>INDIA | {jobdetails.location}</Typography>\r\n      <Typography variant=\"h5\" gutterBottom align='left' style={{margin:'10px',color:'tan'}}>{jobdetails.jobPosition.name}</Typography> \r\n      <Typography variant='subtitle1' gutterBottom align='left' style={{marginTop:'20px'}}>{jobdetails.jobPosition.description}</Typography>\r\n      <Typography variant=\"caption\" display=\"block\" gutterBottom align='left' style={{marginTop:'30px'}}>{jobdetails.organization.orgName}</Typography>\r\n     \r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton color='primary'>\r\n          <ArrowForwardIcon/>\r\n        </IconButton>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\Footer\\Footer.js",["384","385","386","387","388","389","390"],"\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PaymentTwoToneIcon from '@material-ui/icons/PaymentTwoTone';\r\nimport StorefrontRoundedIcon from '@material-ui/icons/StorefrontRounded';\r\nimport PhoneAndroidRoundedIcon from '@material-ui/icons/PhoneAndroidRounded';\r\nimport EmailRoundedIcon from '@material-ui/icons/EmailRounded';\r\nimport ContactSupportRoundedIcon from '@material-ui/icons/ContactSupportRounded';\r\nimport StoreTwoToneIcon from '@material-ui/icons/StoreTwoTone';\r\nimport PermContactCalendarIcon from '@material-ui/icons/PermContactCalendar';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    textAlign: \"center\",\r\n    color: \"#FFFFFF\",\r\n    marginTop:'20px'\r\n  },\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root} style={{ backgroundColor: \"#cb997e\" }}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={4}style={{textAlign:'center'}}>\r\n          {/* <StoreTwoToneIcon/>  */}\r\n          Information for...<th/>\r\n          <br/>\r\n        <span>Developers</span><tr/>\r\n        <span>Business Partners</span><tr/>\r\n        <span>Supporting People</span><tr/>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4}>\r\n       Connect with us<th/>\r\n        <br/>\r\n        <span> Support</span><tr/>\r\n        <span>Branches</span><tr/>\r\n        <span>About Odigo Tech</span><tr/>\r\n        \r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4}>\r\n        {/* <PermContactCalendarIcon/>   */}\r\n        CONTACT INFORMATION<th/>\r\n        <br/>\r\n        {/* <EmailRoundedIcon/>\r\n        <PhoneAndroidRoundedIcon/> \r\n        <StorefrontRoundedIcon/> */}\r\n        <span> madhusudangt97@gmail.com</span><tr/>\r\n        <span>  919986223399</span><tr/>\r\n        <span> 9981******88</span><tr/>\r\n        </Grid>\r\n        <Grid item xs={12}>------------------------------------------------------------------------------</Grid>\r\n        <Grid item xs={12}>@Copy Right Madhu GT 2020</Grid>\r\n      </Grid>\r\n\r\n    </div>  \r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\MenuBar\\MenuBarLandingPage.js",["391","392","393","394","395","396","397","398","399"],"import React, { useState ,useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserProfile from \"../ApplicantProfile/UserProfile\";\r\nimport ApplicantService from \"../../Service/ApplicationService\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleChange = (event) => {\r\n    setAuth(event.target.checked);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  let history = useHistory();\r\n\r\n    const handleProfile = () => {\r\n    history.push(\"/profile\");\r\n  };\r\n\r\n  const handleLogOut=()=>{\r\n    history.push('/');\r\n  }\r\nuseEffect(()=>{\r\nservice();\r\n})\r\nconst[profile,setProfile]=useState([]);\r\nconst service=()=>{\r\n  if(localStorage.getItem('emailid')&&localStorage.getItem('applicationemail')){\r\n    ApplicantService.FindByEmail(localStorage.getItem('applicationemail')).then(res=>{\r\nsetProfile(res);\r\n    })\r\n  }else{\r\n    ApplicantService.FindByEmail(localStorage.getItem('applicationemail')).then(ser=>{\r\n      setProfile(ser);\r\n          })\r\n  }\r\n\r\n}\r\n  return (\r\n    <>\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title} align='left'>\r\n            ODIGO TECH\r\n          </Typography>\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleProfile}>PROFILE</MenuItem>\r\n                <MenuItem onClick={handleLogOut}>LOG OUT</MenuItem>\r\n              </Menu>\r\n            </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\LoginPage\\Registration.js",["400","401","402"],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\JobModel\\JobDetailsPage.js",["403","404","405","406","407","408","409","410"],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\JobService.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantLandingPage\\LandingPageForUnauth.js",["411","412","413","414","415","416"],"import React, { useState, useEffect } from 'react';\r\nimport './LandingPage.css';\r\nimport DesktopViewImg from \"../Images/Careers-Banner.png\";\r\nimport DesktopViewImg1 from \"../Images/career-banner1.jpg\";\r\nimport MobileViewImg from \"../Images/carrer2.jpg\";\r\nimport adduser from \"../Images/adduser.png\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from \"@material-ui/core\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport LandingPageCard from \"./LandingPageCard\"\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport LandingMenu from \"../../components/MenuBar/MenuBarLandingAuth\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport JobService from \"../../Service/JobService\";\r\nimport Interview from \"../InterViewProceses/LandingPageInterview\"\r\nconst category = [\r\n    {\r\n      value: 'IT',\r\n    },\r\n    {\r\n      value: 'MANAGEMENT',\r\n    },\r\n  ];\r\n\r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\n    root1:{\r\n        flexGrow: 1,\r\n    },\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '40ch',\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\nconst LandingPage=()=>{\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const imageUrl = window.innerWidth >= 650 ? DesktopViewImg1 : MobileViewImg;\r\n    const [Category, setCategory] = React.useState('');\r\n      const handleChange = (event) => {\r\n        setCategory(event.target.value);\r\n      };\r\n\r\n      const handleRedirect=()=>{\r\n        history.push(\"/registration\");\r\n      }\r\n      const[data,setData]=useState([]);\r\n      useEffect(() => {\r\n       retrieveUsers();\r\n        },[]);\r\n      \r\n        const retrieveUsers = async () => {\r\n         await JobService.fetchUsers()\r\n            .then(response => {\r\n               setData(response.data);\r\n              console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n        };\r\n\r\n    return (\r\n        <>\r\n        <LandingMenu/>\r\n        <div style={{backgroundColor:'lightgray'}}>\r\n        <div className=\"LandingPageImg\" style={{backgroundImage: `url(${imageUrl})` }}>\r\n            {/* <div className=\"LandingPageImg-content\">\r\n                {/* <a style={{fontSize:'40px',color:'#867979'}}>ENTRY LEVEL</a>\r\n                <a style={{fontSize:'40px',color:'#867979'}}>JOB OPPORTUNITIES</a> */}\r\n                {/* <form className={classes.root} noValidate autoComplete=\"off\" style={{marginTop: '30px'}}>\r\n                <TextField id=\"outlined-basic\" label=\"Search\" variant=\"outlined\"/>\r\n                <Button variant=\"contained\" color=\"primary\" style={{width:'140px',height:'55px'}}>\r\n  Sarech\r\n</Button>\r\n</form>\r\n</div>         */}\r\n        </div>\r\n        <div className='rows' style={{marginTop:\"20px\",backgroundColor:'gray',color:'white'}}>\r\n     <div className='row' >\r\n         <h1>Join our  </h1><h1>Organization!!</h1></div>\r\n     <div className='row' style={{marginLeft:\"20px\"}}>\r\n    <h2>Tell us more about yourself and we'll keep you up-to-date regarding upcoming</h2>\r\n    <h4>events and carrer opportunities that match your interests.</h4>\r\n    <Button variant=\"contained\" color=\"primary\" style={{width:'180px'}} onClick={handleRedirect}>JOIN NOW</Button>\r\n     </div> \r\n     <div className='row' style={{margin:\"20px\"}}>\r\n     <img src={adduser} alt=\"Girl in a jacket\" style={{height:'100px'}}/>\r\n     </div>\r\n \r\n       </div>\r\n       <Typography variant=\"h4\" style={{textAlign:'start',margin:'20px'}}>\r\n       Job opportunities\r\n      </Typography>\r\n      <div style={{margin:'20px'}}>\r\n      <TextField id=\"outlined-basic\" label=\"Search\" variant=\"outlined\"/>\r\n      <Button variant=\"contained\" color=\"primary\" style={{width:'180px',height:'55px',marginLeft:'20px'}}>\r\n          Search</Button>\r\n \r\n      </div>\r\n      <div style={{margin:'20px'}}>\r\n      {/* <TextField\r\n          id=\"standard-select-currency\"\r\n          select\r\n          label=\"Job Category\"\r\n          value={Category}\r\n          onChange={handleChange}\r\n          helperText=\"Please select Job Category\"\r\n          style={{marginLeft:'20px'}}\r\n        >\r\n          {category.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.value}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n\r\n\r\n        <TextField\r\n          id=\"standard-select-currency\"\r\n          select\r\n          label=\"position name\"\r\n          value={Category}\r\n          onChange={handleChange}\r\n          helperText=\"Please select Job Category\"\r\n          style={{marginLeft:'20px'}}\r\n        >\r\n          {category.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.value}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n     \r\n\r\n        <TextField\r\n          id=\"standard-select-currency\"\r\n          select\r\n          label=\"Experience level\"\r\n          value={Category}\r\n          onChange={handleChange}\r\n          helperText=\"Please select Experience level\"\r\n           style={{marginLeft:'20px'}}\r\n        >\r\n          {category.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.value}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField> */}\r\n      </div>\r\n\r\n\r\n<div className={classes.root1}>\r\n      <Grid container spacing={3}>\r\n\r\n    {data.map((elem)=>(\r\n        <Grid item xs>\r\n<LandingPageCard  jobdetails={elem}/>\r\n</Grid>\r\n    ))}     \r\n        \r\n      </Grid>\r\n      </div>\r\n      <Footer/>\r\n      </div>\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default LandingPage;","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\LoginPage\\ForgetPassword.js",["417"],"import { Menu } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport MenuBar from \"../MenuBar/Menu\"\r\nconst ForgetPassword=()=>{\r\n    return(\r\n        <>\r\n        <MenuBar/>\r\n        this is ForgetPassword page need to implement.....!!\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ForgetPassword;","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantProfile\\ApplicantProfile.js",["418","419","420","421","422","423","424","425","426","427","428"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ProfileProgress from \"../ApplicantProfile/ProfileProgress\";\r\nimport { Grid, Paper, Avatar, Typography, Link } from \"@material-ui/core\";\r\nimport ApplicationService from \"../../Service/ApplicationService\";\r\nimport RegService from \"../../Service/RegService\";\r\nimport MenuBar from \"../MenuBar/Menu\";\r\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n    // backgroundColor: 'rgba(0.1, 0.6, 0.1, .04)'\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n}));\r\nconst paperStyle = {\r\n  borderRadius: \"28px\",\r\n  padding: 25,\r\n  height: 60,\r\n  margin: \"10px auto\",\r\n  backgroundColor: \"#f6f6f6\",\r\n};\r\nconst paper1Style = {\r\n  borderRadius: \"20px\",\r\n  padding: 35,\r\n  color: \"green\",\r\n  width: \"140px\",\r\n  height: \"20px\",\r\n  marginTop: \"-100px\",\r\n};\r\nconst style1 = {\r\n  padding: 35,\r\n  color: \"green\",\r\n  width: \"140px\",\r\n  height: \"20px\",\r\n  marginTop: \"-108px\",\r\n  marginRight: \"40px\",\r\n};\r\nconst style2 = {\r\n  padding: 30,\r\n  color: \"green\",\r\n  width: \"140px\",\r\n  height: \"20px\",\r\n  marginTop: \"-55px\",\r\n  marginRight: \"550px\",\r\n};\r\nconst style3 = {\r\n  padding: 30,\r\n  color: \"green\",\r\n  height: \"20px\",\r\n  marginTop: \"-50px\",\r\n  marginLeft: \"150px\",\r\n  marginRight: \"50px\",\r\n};\r\nconst avatarStyle = { backgroundColor: \"#AF0069\" };\r\nexport default function ControlledAccordions(props) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleChange1 = (event) => {\r\n    setAuth(event.target.checked);\r\n  };\r\n\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleOnChange = e => {\r\n    console.log(e.target.files[0]);\r\n    setFile(e.target.files[0]);\r\n  };\r\n  const UPLOAD_ENDPOINT =\r\n    \"http://localhost:8080/file/uploadFile\";\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    let res = await uploadFile(file);\r\n  };\r\n\r\n  const uploadFile = async file => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    return await axios.post(UPLOAD_ENDPOINT, formData).then(res=>{\r\n   console.log('DOCUMENT FORM')\r\n    });\r\n  };\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  useEffect(()=>{\r\n  getDetails();\r\n  },[]);\r\n\r\nconst [data ,setData]=useState([]);\r\nconst[reg,setReg]=useState([]);\r\n  const getDetails=async()=>{\r\n    await ApplicationService.FindByEmail(localStorage.getItem('emailvalue')).then(appdata=>{\r\n     setData(appdata.data);\r\n    })\r\n    await RegService.findByEmail(localStorage.getItem('emailvalue')).then(regdata=>{\r\n      setReg(regdata.data);\r\n    })\r\n  }\r\nconsole.log(data);\r\nconsole.log(reg);\r\n  return (\r\n    <div className={classes.root}>\r\n      <MenuBar />\r\n      <Grid>\r\n        <Paper style={paperStyle} fullWidth>\r\n          <Grid>\r\n          <Avatar className={classes.purple}\r\n          style={{width:'100px',height:'80px'}}\r\n          >GT</Avatar>\r\n          </Grid>\r\n          <Grid align=\"center\">\r\n            {/* {/ <Grid align=\"center\"> /} */}\r\n            <Grid>\r\n              <Typography style={style1}>MADHUSUDAN</Typography>\r\n            </Grid>\r\n            <Grid>\r\n              <Grid\r\n                align=\"left\"\r\n                style={{ marginLeft: \"460px\", marginTop: \"-20px\" }}\r\n              >\r\n                <Typography>1 YEAR</Typography>\r\n                <Typography>BENGALURU</Typography>\r\n              </Grid>\r\n              <Grid\r\n                align=\"right\"\r\n                style={{ marginRight: \"500px\", marginTop: \"-45px\" }}\r\n              >\r\n                <Typography>madhusudangt97@gmail.com</Typography>\r\n                <Typography>9986223399</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid align=\"right\">\r\n            <Grid align=\"right\">\r\n              <Paper style={paper1Style}>\r\n                <Typography align=\"center\">NOTIFICATION OR STATUS</Typography>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n      <ProfileProgress />\r\n      <Accordion\r\n        style={{ backgroundColor: \"#DEE1DD\" }}\r\n        expanded={expanded === \"panel1\"}\r\n        onChange={handleChange(\"panel1\")}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>Attach Resume</Typography>\r\n          <Typography className={classes.secondaryHeading}>\r\n        UPLOAD YOUR RESUME HERE\r\n                 </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>\r\n          <div style={{marginTop:\"20px\"}}>\r\n<form onSubmit={handleSubmit}>\r\n      <Typography>UPLOAD RESUME</Typography>\r\n      <Button\r\n  variant=\"contained\"\r\n  component=\"label\"\r\n>\r\n  Upload File\r\n  <input type=\"file\" onChange={handleOnChange} />\r\n</Button>\r\n     \r\n      <Button color=\"secondary\"\r\n              variant=\"contained\"\r\n              color=\"primary\" type=\"submit\">Upload File</Button>\r\n    </form>\r\n              \r\n            </div>\r\n           \r\n \r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        expanded={expanded === \"panel2\"}\r\n        onChange={handleChange(\"panel2\")}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel2bh-content\"\r\n          id=\"panel2bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>Key Skills</Typography>\r\n          <Typography className={classes.secondaryHeading}>\r\n            You are currently not an owner\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>\r\n            Donec placerat, lectus sed mattis semper, neque lectus feugiat\r\n            lectus, varius pulvinar diam eros in elit. Pellentesque convallis\r\n            laoreet laoreet.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        style={{ backgroundColor: \"#DEE1DD\" }}\r\n        expanded={expanded === \"panel3\"}\r\n        onChange={handleChange(\"panel3\")}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel3bh-content\"\r\n          id=\"panel3bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>Education</Typography>\r\n          <Typography className={classes.secondaryHeading}>\r\n            Filtering has been entirely disabled for whole web server\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>\r\n            Nunc vitae orci ultricies, auctor nunc in, volutpat nisl. Integer\r\n            sit amet egestas eros, vitae egestas augue. Duis vel est augue.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        expanded={expanded === \"panel4\"}\r\n        onChange={handleChange(\"panel4\")}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel4bh-content\"\r\n          id=\"panel4bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>IT Skills</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>\r\n            Nunc vitae orci ultricies, auctor nunc in, volutpat nisl. Integer\r\n            sit amet egestas eros, vitae egestas augue. Duis vel est augue.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        style={{ backgroundColor: \"#DEE1DD\" }}\r\n        expanded={expanded === \"panel5\"}\r\n        onChange={handleChange(\"panel5\")}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel5bh-content\"\r\n          id=\"panel5bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>Projects</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>\r\n            Nunc vitae orci ultricies, auctor nunc in, volutpat nisl. Integer\r\n            sit amet egestas eros, vitae egestas augue. Duis vel est augue.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        expanded={expanded === \"panel6\"}\r\n        onChange={handleChange(\"panel6\")}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel6bh-content\"\r\n          id=\"panel6bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>Certifications</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>\r\n            Nunc vitae orci ultricies, auctor nunc in, volutpat nisl. Integer\r\n            sit amet egestas eros, vitae egestas augue. Duis vel est augue.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        style={{ backgroundColor: \"#DEE1DD\" }}\r\n        expanded={expanded === \"panel7\"}\r\n        onChange={handleChange(\"panel7\")}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel7bh-content\"\r\n          id=\"panel7bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>Carreer Profile</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>\r\n            Nunc vitae orci ultricies, auctor nunc in, volutpat nisl. Integer\r\n            sit amet egestas eros, vitae egestas augue. Duis vel est augue.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantProfile\\ProfileProgress.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\UserLandingPage\\UserDetails.js",["429","430"],"import React, { useEffect, useState } from \"react\";\r\nimport Menu from \"../MenuBar/Menu\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport UserDeatilsForm from \"./UserDeatilsForm\";\r\nimport DocumentForm from \"./DocumentForm\";\r\nimport EducationSkillsForm from \"./EducationSkillsForm\";\r\nimport ApplicationService from \"../../Service/ApplicationService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport RegService from \"../../Service/RegService\";\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  completed: {\r\n    display: 'inline-block',\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['User Details', 'Education Details and Skills', 'Document Details'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <UserDeatilsForm/>;\r\n    case 1:\r\n      return <EducationSkillsForm/>;\r\n    case 2:\r\n      return <DocumentForm/>;\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalNonLinearAlternativeLabelStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [completed, setCompleted] = React.useState(new Set());\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n  const steps = getSteps();\r\n\r\n  const totalSteps = () => {\r\n    return getSteps().length;\r\n  };\r\n\r\n  const isStepOptional = (step) => {\r\n    return step === 1;\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped((prevSkipped) => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  };\r\n\r\n  const skippedSteps = () => {\r\n    return skipped.size;\r\n  };\r\n\r\n  const completedSteps = () => {\r\n    return completed.size;\r\n   \r\n  };\r\n\r\n  const allStepsCompleted = () => {\r\n    return completedSteps() === totalSteps() - skippedSteps();\r\n  };\r\n\r\n  const isLastStep = () => {\r\n    return activeStep === totalSteps() - 1;\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const newActiveStep =\r\n      isLastStep() && !allStepsCompleted()\r\n        ? // It's the last step, but not all steps have been completed\r\n          // find the first step that has been completed\r\n          steps.findIndex((step, i) => !completed.has(i))\r\n        : activeStep + 1;\r\n\r\n    setActiveStep(newActiveStep);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleStep = (step) => () => {\r\n    setActiveStep(step);\r\n  };\r\n  let history = useHistory();\r\n  const[education,setEducation]=useState([]);\r\n  const[userdeatils,setuserdeatils]=useState([]);\r\n  const[userdocument,setDocument]=useState([]);\r\n\r\n \r\nconst calllocalstorge=()=>{\r\n  setEducation(JSON.parse(localStorage.getItem('education')));\r\n    setuserdeatils(JSON.parse(localStorage.getItem('userdetails')));\r\n    setDocument(JSON.parse(localStorage.getItem('document')));\r\n}\r\n   \r\n\r\n  const handleComplete = (async) => {\r\n    // setEducation(JSON.parse(localStorage.getItem('education')));\r\n    // setuserdeatils(JSON.parse(localStorage.getItem('userdetails')));\r\n    // setDocument(JSON.parse(localStorage.getItem('document')));\r\ncalllocalstorge();\r\n\r\n    const newCompleted = new Set(completed);\r\n    newCompleted.add(activeStep);\r\n    setCompleted(newCompleted);\r\n    if (completed.size !== totalSteps() - skippedSteps()) {\r\n      handleNext();\r\n      calllocalstorge();\r\n    }\r\n    if(completedSteps() === totalSteps() - 1){\r\n      calllocalstorge();\r\n      console.log(education+\"...........\"+userdeatils+\"..........\"+userdocument)\r\n      if(education==null||userdeatils==null||userdocument==null){\r\n        calllocalstorge();\r\n        setEducation(JSON.parse(localStorage.getItem('education')));\r\n    setuserdeatils(JSON.parse(localStorage.getItem('userdetails')));\r\n    setDocument(JSON.parse(localStorage.getItem('document')));\r\n\r\n      }\r\n      else{\r\n        const  appljson={\r\n          applicantId:1 ,\r\n          applicantmodel: {\r\n            email:userdeatils.email,\r\n            firstName:userdeatils.firstName,\r\n            lastName:userdeatils.lastName,\r\n            phoneNo:userdeatils.phoneNumber,\r\n            summary:userdeatils.summary\r\n          },\r\n          applicationdocumodel: [\r\n            {\r\n              applicationId: 1,\r\n              documentmodel: {\r\n                document:userdocument.Document,\r\n                lastUpdate:userdocument.LastUpdate,\r\n                name:userdocument.ProjectName,\r\n                url:userdocument.WebSiteLink \r\n              },\r\n              documnetId: 0,\r\n            \r\n            }\r\n          ],\r\n          appliedDate:userdocument.LastUpdate,\r\n          education:education.schoolName,\r\n          emailID:userdeatils.email,\r\n          experience:userdocument.experience,\r\n          id: 1,\r\n          otherInfo:education.schoolName,\r\n          jobId: 1,\r\n          status: \"Waiting\"\r\n        }\r\n \r\n    ApplicationService.addUser(appljson).then(res=>{\r\n      if(res.status===200){\r\n        setsnackcolor(\"success\");\r\n        RegService.findByEmail(localStorage.getItem('emailid')).then(res=>{\r\n          ApplicationService.findRegisteredApplication(res.data.id).then(reg=>{\r\n            console.log(reg.data)\r\n          })\r\n        })\r\n        setResponse(\"USER information SAVED SUCCESFULLY\");\r\n        handleClickSnackbar(); \r\n      }else{\r\n        setResponse(\"ERROR IN SERVER\")\r\n        setsnackcolor(\"error\");\r\n        handleClickSnackbar();\r\n      }\r\n    });\r\n    console.log(\"success\"+appljson) \r\n        localStorage.removeItem('education');\r\n        localStorage.removeItem('userdetails');\r\n        localStorage.removeItem('document');\r\n        handleReset();\r\n      }\r\n         }\r\n \r\n   };\r\n\r\n   \r\n  const handleReset = () => {\r\n    history.push(\"/LandingPage\");\r\n  };\r\n\r\n  const isStepSkipped = (step) => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  function isStepComplete(step) {\r\n    return completed.has(step);\r\n  }\r\n\r\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n  const [response,setResponse]=React.useState([]);\r\n  const [snackcolor,setsnackcolor]=React.useState('');\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: 'top',\r\n    horizontal: 'center',\r\n  });\r\n  const { vertical, horizontal} = state;\r\n  const handleClickSnackbar = () => {\r\n    setOpenSnackbar(true);\r\n  };\r\n  \r\n  const handleCloseSnackbar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n  \r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  return (\r\n      <>\r\n      <div className={classes.root}>\r\n      <Snackbar  anchorOrigin={{ vertical, horizontal }} key={vertical + horizontal}\r\n       open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n        <Alert onClose={handleCloseSnackbar} severity={snackcolor}>\r\n     {response}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n      <Menu/>\r\n    <div className={classes.root}>\r\n      <Stepper alternativeLabel nonLinear activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const buttonProps = {};\r\n          if (isStepOptional(index)) {\r\n            buttonProps.optional = <Typography variant=\"caption\">*</Typography>;\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepButton\r\n                onClick={handleStep(index)}\r\n                completed={isStepComplete(index)}\r\n                {...buttonProps}\r\n              >\r\n                {label}\r\n              </StepButton>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <div style={{backgroundColor:\"LightGray\"}}>\r\n        {allStepsCompleted() ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              YOUR DETAILS ARE COLLECTED THANKS FOR YOUR INFORMATION\r\n            </Typography>\r\n            <Button onClick={handleReset}>GO TO YOUR PROFILE</Button>\r\n          </div>\r\n        ) : (\r\n          <div style={{marginTop:\"20px\"}}>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                Next\r\n              </Button>\r\n              {isStepOptional(activeStep) && !completed.has(activeStep) && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleSkip}\r\n                  className={classes.button}\r\n                >\r\n                  Skip\r\n                </Button>\r\n              )}\r\n\r\n              {activeStep !== steps.length &&\r\n                (completed.has(activeStep) ? (\r\n                  <Typography variant=\"caption\" className={classes.completed}>\r\n                    Step {activeStep + 1} already completed\r\n                  </Typography>\r\n                ) : (\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={handleComplete}>\r\n                    {completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'}\r\n                  </Button>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\ApplicationService.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\TechnicalLandingPage.js",["431"],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\HrLandingPge.js",["432","433"],"\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\nimport HandleApplication from \"../TECHNICALTEAM/HandleApplications\";\r\nimport HandleHrDashboard from \"./HandleHrDashboard\";\r\nimport HandleHrNotification from \"./HandleHrNotification\";\r\nimport HandleRejected from \"../TECHNICALTEAM/HandleRejected\";\r\nimport HandleSelected from \"../TECHNICALTEAM/HandleSelected\";\r\nimport HandleTecnicalTeam from \"./HandleTechnicalTeam\";\r\nimport ReSchuledMeetings from \"./ReSchuledMeetings\";\r\nimport ScheduledMeetings from \"./ScheduledMeetings\";\r\nimport TodaysHrMeetings from \"./TodaysHrMeetings\";\r\nimport CancelScheduleSendIcon from '@material-ui/icons/CancelScheduleSend';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Button from '@material-ui/core/Button';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nfunction getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return <HandleApplication/>;\r\n      case 1:\r\n        return <HandleHrDashboard/>;\r\n      case 2:\r\n        return  <HandleHrNotification/>;\r\n        case 3:\r\n          return <HandleRejected/>;\r\n          case 4:\r\n              return <HandleSelected/>;\r\n              case 5:\r\n                  return <ReSchuledMeetings/>;\r\n                  case 6:\r\n                         return <ScheduledMeetings/>;\r\n                         case 7:\r\n                         return <TodaysHrMeetings/>;\r\n      default:\r\n        return <HandleTecnicalTeam/>;\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  let history = useHistory();\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const [activeStep, setActiveStep] = React.useState(1);\r\n  const handleLogOut=()=>{\r\n    history.push('/');\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        {/* <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            HR\r\n             PAGE\r\n          </Typography>\r\n          <Typography  align=\"left\" noWrap>\r\n           LOG OUT\r\n          </Typography>\r\n        </Toolbar> */}\r\n        <Toolbar>\r\n        <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <AccountCircleIcon/>\r\n          </IconButton>\r\n          <Typography >\r\n           ODIGO TECH\r\n          </Typography>&nbsp;&nbsp;&nbsp;\r\n          <Typography className={classes.title}>\r\n            WELCOME TO HR PAGE \r\n          </Typography>\r\n          <Button style={{color:'white',marginLeft:'900px'}} color=\"inherit\"  onClick={handleLogOut}><LockIcon style={{color:'red'}}/>  LogOut</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['HrDashBoard', 'Applications'].map((text, index) => (\r\n            <ListItem button key={text} >\r\n              <ListItemIcon>{index % 2 === 0 ? <HomeIcon color='primary' onClick={()=>setActiveStep(1)}/> : <FileCopyIcon color='primary' onClick={()=>setActiveStep(0)}/>}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n                 {[ 'Selected Resume', 'Rejected Resume'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <CheckIcon color='primary' onClick={()=>setActiveStep(4)}/> : <CancelIcon color='primary' onClick={()=>setActiveStep(3)}/>}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['Schedulied Mettings', 'Todays Schedules'].map((text, index) => (\r\n            <ListItem button key={text} >\r\n              <ListItemIcon>{index % 2 === 0 ? <ScheduleIcon color='primary' onClick={()=>setActiveStep(6)}/> : <TodayIcon color='primary' onClick={()=>setActiveStep(7)}/>}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n            {['ReSchedulied','Notifications'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <CancelScheduleSendIcon color='primary' onClick={()=>setActiveStep(5)}/> : <NotificationsActiveIcon color='primary' onClick={()=>setActiveStep(2)}/>}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n{/*        \r\n      <HandleApplication/>\r\n      <HandleDashboard/>\r\n      <HandleNotification/>\r\n      <HandleRejected/>\r\n      <HandleSelected/>\r\n      <HandleSchedule/>\r\n      <HandleTodaySch/>\r\n       */}\r\n               <Typography>{getStepContent(activeStep)}</Typography>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleDashboard.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleApplications.js",["434","435","436","437","438","439"],"import React, { useState, useEffect } from 'react';\r\nimport {makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ApplicationService from \"../../Service/ApplicationService\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { useHistory } from \"react-router-dom\";\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n      },\r\n      container: {\r\n        maxHeight: 440,\r\n      },\r\n      modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n}));\r\n\r\nexport default function BasicTable() {\r\nconst classes = useStyles();\r\nconst[data,setData]=useState([]);\r\nuseEffect(() => {\r\n retrieveUsers();\r\n  },[]);\r\n\r\n  const retrieveUsers = async () => {\r\n   await ApplicationService.fetchUsers()\r\n      .then(response => {\r\n         setData(response.data);\r\n        // console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  let history = useHistory();\r\n  const handleAccept=(id)=>{\r\n    ApplicationService.AcceptUser(id);\r\n    history.push(\"/HrPage\")\r\n    retrieveUsers();\r\n    handleClickSnackbar();\r\n  }\r\n\r\n  const handleReject=(id)=>{\r\n    ApplicationService.RejectUser(id);\r\n    retrieveUsers();\r\n    handleClickSnackbar();\r\n  }\r\nconst handleDownload=()=>{\r\n  console.log(\"download resume\")\r\n}\r\n\r\nconst [openSnackbar, setOpenSnackbar] = React.useState(false);\r\nconst [state, setState] = React.useState({\r\n  open: false,\r\n  vertical: 'top',\r\n  horizontal: 'center',\r\n});\r\nconst { vertical, horizontal} = state;\r\nconst handleClickSnackbar = () => {\r\n  setOpenSnackbar(true);\r\n};\r\n\r\nconst handleCloseSnackbar = (event, reason) => {\r\n  if (reason === 'clickaway') {\r\n    return;\r\n  }\r\n\r\n  setOpenSnackbar(false);\r\n};\r\nreturn (\r\n<>\r\n<div className={classes.root}>\r\n      <Snackbar  anchorOrigin={{ vertical, horizontal }} key={vertical + horizontal}\r\n       open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n        <Alert onClose={handleCloseSnackbar} severity=\"success\">\r\n       APPLICATION ACCEPTED SUCCESSFULLY\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n<TableContainer component={Paper}>\r\n<Table stickyHeader aria-label=\"sticky table\">\r\n<TableHead>\r\n<TableRow>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>APPLICANT ID</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>USER NAME</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>EMAIL ID</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>RESUME</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>ACCEPT</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>REJECT</TableCell>\r\n\r\n</TableRow>\r\n</TableHead>\r\n<TableBody>\r\n{data.map((row) => (\r\n  <>\r\n  {row.status==='Waiting' &&\r\n  <TableRow key={row.id}  hover role=\"checkbox\" tabIndex={-1}>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.id}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.applicantmodel.firstName}</TableCell>\r\n<TableCell style={{ minWidth: row.minWidth}}  align=\"center\">{row.applicantmodel.email}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">\r\n  <Button onClick={() => handleDownload(row)} color='primary'><GetAppIcon color='primary'/></Button></TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">\r\n<Button onClick={() => handleAccept(row.id)} color='primary'>ACCEPT</Button>\r\n</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">\r\n<Button onClick={() => handleReject(row.id)} color='secondary'>REJECT</Button>\r\n</TableCell>\r\n</TableRow>\r\n}\r\n</>\r\n\r\n)\r\n\r\n)}\r\n</TableBody>\r\n</Table>\r\n</TableContainer>\r\n</>\r\n);\r\n}","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleRejected.js",["440"],"import React, { useState, useEffect } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport ApplicationService from \"../../Service/ApplicationService\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useHistory } from \"react-router-dom\";\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function CustomizedTables() {\r\n  const classes = useStyles();\r\n  const[data,setData]=useState([]);\r\nuseEffect(() => {\r\n retrieveUsers();\r\n  },[]);\r\n\r\n  const retrieveUsers = async () => {\r\n   await ApplicationService.fetchUsers()\r\n      .then(response => {\r\n         setData(response.data);\r\n        // console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  let history = useHistory();\r\n  const handleAccept=(id)=>{\r\n    ApplicationService.AcceptUser(id);\r\n    history.push(\"/HrPage\")\r\n    retrieveUsers();\r\n    handleClickSnackbar();\r\n  }\r\n\r\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\nconst [state, setState] = React.useState({\r\n  open: false,\r\n  vertical: 'top',\r\n  horizontal: 'center',\r\n});\r\nconst { vertical, horizontal} = state;\r\nconst handleClickSnackbar = () => {\r\n  setOpenSnackbar(true);\r\n};\r\n\r\nconst handleCloseSnackbar = (event, reason) => {\r\n  if (reason === 'clickaway') {\r\n    return;\r\n  }\r\n\r\n  setOpenSnackbar(false);\r\n};\r\n  return (\r\n    <>\r\n    <div className={classes.root}>\r\n      <Snackbar  anchorOrigin={{ vertical, horizontal }} key={vertical + horizontal}\r\n       open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n        <Alert onClose={handleCloseSnackbar} severity=\"success\">\r\n       APPLICATION REVOKED SUCCESSFULLY\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n    <Typography align='center'>REJECTED APPLICATION LIST</Typography>\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>APPLICATION ID</StyledTableCell>\r\n            <StyledTableCell align=\"right\">APPLICANT NAME</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Email ID</StyledTableCell>\r\n            <StyledTableCell align=\"right\">RESUME LINK</StyledTableCell>\r\n            <StyledTableCell align=\"right\">REVOKE</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map((row) => (\r\n             <>\r\n             {row.status==='Reject' &&\r\n            <StyledTableRow key={row.id}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.id}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.applicantmodel.firstName}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.applicantmodel.email}</StyledTableCell>\r\n              {/* <StyledTableCell align=\"right\">{row.RecuiterId}</StyledTableCell> */}\r\n              <StyledTableCell align=\"right\"><GetAppIcon color='primary'/></StyledTableCell>\r\n              <StyledTableCell align=\"right\"><Button  onClick={() => handleAccept(row.id)} variant=\"contained\" color=\"primary\">REVOKE\r\n</Button></StyledTableCell>\r\n            </StyledTableRow>\r\n}\r\n            </>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleNotification.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleTodaySch.js",["441","442","443","444","445","446"],"import React, { useEffect, useState } from 'react';\r\nimport { withStyles,makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport ScheduledMeetings from \"../../Service/ScheduledMeetings\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n}));\r\n\r\n\r\nexport default function ControlledAccordions() {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  const [row,setSceduled]=useState([]);\r\n  useEffect(()=>{\r\n    getMeetings();\r\n  },[])\r\n  const getMeetings = async () => {\r\n    await ScheduledMeetings.fetchUsers()\r\n       .then(response => {\r\n        setSceduled(response.data);\r\n         console.log(response);\r\n       })\r\n       .catch(e => {\r\n         console.log(e);\r\n       });\r\n   };\r\n   const [openUpdate, setOpenUpdate] = React.useState(false);\r\n   const[UpdateData,setUpdateData]=useState([]);\r\n   const handleReschuled=(id,data)=>{\r\n     setUpdateData(data);\r\nconsole.log(id+'...........'+UpdateData)\r\nsetOpenUpdate(true);\r\n   }\r\n\r\n   const handleReschuledClose = () => {\r\n    setOpenUpdate(false);\r\n  };\r\n\r\n  const handleUpdate=(id,data)=>{\r\n    let time=data.MeetingDate+'T'+data.MeetingTime+':'+'00';\r\n    let dateObj = new Date(time);\r\n    const updatejson={\r\n      \"id\":id,\r\n      \"applicantId\": data.ApplicantId,\r\n  \"meetingDescription\": data.MeetingDescription,\r\n  \"meetingName\": data.MeetingName,\r\n  \"platformLink\": data.Platform,\r\n  \"recuiterId\": data.RecuiterId,\r\n  \"scheduledDate\": data.MeetingDate,\r\n  \"scheduledTime\": dateObj,\r\n\r\n  \"meetingStatus\": \"Scheduled\"\r\n    }\r\nconsole.log(updatejson)\r\nScheduledMeetings.editUser(id,updatejson);\r\ngetMeetings();\r\nhandleClickSnackbar();\r\n  }\r\n\r\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: 'top',\r\n    horizontal: 'center',\r\n  });\r\n  const { vertical, horizontal} = state;\r\n  const handleClickSnackbar = () => {\r\n    setOpenSnackbar(true);\r\n  };\r\n  \r\n  const handleCloseSnackbar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n  \r\n    setOpenSnackbar(false);\r\n  };\r\n \r\n\r\n  return (\r\n    <>\r\n    <div className={classes.root}>\r\n      <Snackbar  anchorOrigin={{ vertical, horizontal }} key={vertical + horizontal}\r\n       open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n        <Alert onClose={handleCloseSnackbar} severity=\"success\">\r\n       APPLICANT REJECTED SUCCESSFULLY\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n    <div className={classes.root}>\r\n      <Accordion expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n          <Typography className={classes.heading} color='primary'>INTERVIEWS SCHEDULES</Typography>\r\n          <Typography className={classes.secondaryHeading}color='primary'>THIS IS FOR OVER ALL INTERVIEW SCHEDULES</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        \r\n        <TableContainer component={Paper} style={{marginTop:'20px'}}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>ApplicantID</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING NAME</StyledTableCell>\r\n            <StyledTableCell align=\"right\">RecuiterId</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING DATE</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING TIME</StyledTableCell>\r\n            <StyledTableCell align=\"right\">RESCHULIE MEETINGS</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {row.map((row) => (\r\n            <StyledTableRow key={row.applicantId}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.applicantId}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.meetingName}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.recuiterId}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.scheduledDate}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.scheduledTime}</StyledTableCell>\r\n              <StyledTableCell align=\"right\"><Button variant=\"contained\" color=\"secondary\" onClick={() => handleReschuled(row.id,row)}>RESCHULIED</Button></StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel2bh-content\"\r\n          id=\"panel2bh-header\"\r\n        >\r\n          <Typography className={classes.heading} color='primary'>MEETINGS SCHEDULES INFORMATION</Typography>\r\n          <Typography className={classes.secondaryHeading} color='primary'>\r\n            ANY MEETINGS FROM COMPANY SIDE\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <TableContainer component={Paper} style={{marginTop:'20px'}}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>ApplicantID</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING NAME</StyledTableCell>\r\n            <StyledTableCell align=\"right\">RecuiterId</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING DATE</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING TIME</StyledTableCell>\r\n            <StyledTableCell align=\"right\">RESCHULIE MEETINGS</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {row.map((row) => (\r\n            <StyledTableRow key={row.applicantId}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.applicantId}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.meetingName}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.recuiterId}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.scheduledDate}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.scheduledTime}</StyledTableCell>\r\n              <StyledTableCell align=\"right\"><Button variant=\"contained\" color=\"secondary\" onClick={() => handleReschuled(row.id,row)}>RESCHULIED</Button></StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n            </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel3bh-content\"\r\n          id=\"panel3bh-header\"\r\n        >\r\n          <Typography className={classes.heading} color='primary'>OTHER SCHEDULES</Typography>\r\n          <Typography className={classes.secondaryHeading}color='primary'>\r\n            ANY TYPE OF MEETINGS ASSIGNED TO TECHNICAL TEAM\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          \r\n      \r\n        <TableContainer component={Paper} style={{marginTop:'20px'}}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>ApplicantID</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING NAME</StyledTableCell>\r\n            <StyledTableCell align=\"right\">RecuiterId</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING DATE</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING TIME</StyledTableCell>\r\n            <StyledTableCell align=\"right\">RESCHULIE MEETINGS</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {row.map((row) => (\r\n            <StyledTableRow key={row.applicantId}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.applicantId}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.meetingName}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.recuiterId}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.scheduledDate}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.scheduledTime}</StyledTableCell>\r\n              <StyledTableCell align=\"right\"><Button variant=\"contained\" color=\"secondary\" onClick={() => handleReschuled(row.id,row)}>RESCHULIED</Button></StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleSchedule.js",["447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464"],"import React, { useEffect, useState } from 'react';\r\nimport { withStyles,makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport * as moment from 'moment';\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport ScheduledMeetings from \"../../Service/ScheduledMeetings\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n\r\nlet SignupSchema = yup.object().shape({\r\n    MeetingName: yup.string()\r\n    .min(2, 'Too Short!')\r\n       .max(70, 'Too Long!')\r\n       .required(\"This field is required.\"),\r\n       MeetingDescription: yup.string()\r\n       .min(10, 'Too Short!')\r\n          .max(70, 'Too Long!')\r\n          .required(\"This field is required.\"),\r\n          Platform: yup.string()\r\n          .min(10, 'Too Short!')\r\n             .max(70, 'Too Long!')\r\n             .required(\"direct or online interview is required.\"),\r\n                 MeetingDate: yup.date()\r\n        .min(new Date())\r\n        .required(),\r\n        ApplicantId:yup.number()\r\n        .min(1, 'Too Short!')\r\n           .max(5, 'Too Long!')\r\n           .required(\"required.\"),\r\n           RecuiterId:yup.number()\r\n           .min(1, 'Too Short!')\r\n              .max(5, 'Too Long!')\r\n              .required(\"required.\"),\r\n  });\r\n\r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\n    \"@global\": {\r\n        body: {\r\n          backgroundColor: theme.palette.common.white\r\n        }\r\n      },\r\n      paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n      },\r\n      avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n      },\r\n      form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n      },\r\n      submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n      },    \r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function TransitionsModal() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const saveScheduled=(data)=>{\r\n    let time=data.MeetingDate+'T'+data.MeetingTime+':'+'00';\r\n    let dateObj = new Date(time);\r\n    console.log(dateObj);\r\n    console.log(time)\r\n    const json={\r\n      \"applicantId\": data.ApplicantId,\r\n  \"meetingDescription\": data.MeetingDescription,\r\n  \"meetingName\": data.MeetingName,\r\n  \"platformLink\": data.Platform,\r\n  \"recuiterId\": data.RecuiterId,\r\n  \"scheduledDate\": data.MeetingDate,\r\n  \"scheduledTime\": dateObj,\r\n  \"meetingStatus\": \"Scheduled\"\r\n    }\r\n    ScheduledMeetings.create(json);\r\n    console.log(\"success\")\r\n  }\r\n  const [row,setSceduled]=useState([]);\r\n  useEffect(()=>{\r\n    getMeetings();\r\n  },[])\r\n  const getMeetings = async () => {\r\n    await ScheduledMeetings.fetchUsers()\r\n       .then(response => {\r\n        setSceduled(response.data);\r\n         console.log(response);\r\n       })\r\n       .catch(e => {\r\n         console.log(e);\r\n       });\r\n   };\r\n\r\n   const handleReschuled=(id)=>{\r\nScheduledMeetings.rescheduledMeeting(id);\r\ngetMeetings();\r\nhandleClickSnackbar();\r\n\r\n   }\r\n   const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n   const [state, setState] = React.useState({\r\n     open: false,\r\n     vertical: 'top',\r\n     horizontal: 'center',\r\n   });\r\n   const { vertical, horizontal} = state;\r\n   const handleClickSnackbar = () => {\r\n     setOpenSnackbar(true);\r\n   };\r\n   \r\n   const handleCloseSnackbar = (event, reason) => {\r\n     if (reason === 'clickaway') {\r\n       return;\r\n     }\r\n   \r\n     setOpenSnackbar(false);\r\n   };\r\n  \r\n\r\n  return (\r\n    <>\r\n     <div className={classes.root}>\r\n      <Snackbar  anchorOrigin={{ vertical, horizontal }} key={vertical + horizontal}\r\n       open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n        <Alert onClose={handleCloseSnackbar} severity=\"success\">\r\n       RESCHEDULED THE MEETING SUCCESSFULLY\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n    <div>\r\n      <Button type=\"button\" onClick={handleOpen}  variant=\"contained\"\r\n              color=\"primary\">\r\n        SCHEDULED \r\n      </Button>\r\n       <TableContainer component={Paper} style={{marginTop:'20px'}}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>ApplicantID</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING NAME</StyledTableCell>\r\n            <StyledTableCell align=\"right\">RECRUITER ID</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING DATE</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING TIME</StyledTableCell>\r\n            <StyledTableCell align=\"right\">RESCHEDULED  MEETINGS</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {row.map((row) => (\r\n            <>\r\n            {row.meetingStatus==='Scheduled'&&\r\n            <StyledTableRow key={row.applicantId}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.applicantId}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.meetingName}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.recuiterId}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.scheduledDate}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.scheduledTime}</StyledTableCell>\r\n              <StyledTableCell align=\"right\"><Button variant=\"contained\" color=\"secondary\" onClick={() => handleReschuled(row.id)}>RESCHEDULED </Button></StyledTableCell>\r\n            </StyledTableRow>\r\n             }\r\n             </>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n           \r\n    </div>\r\n  \r\n</>\r\n    \r\n  );\r\n}\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleSelected.js",["465","466"],"import React, { useState, useEffect } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ApplicationService from \"../../Service/ApplicationService\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(ApplicationID, ApplicantName, RecuiterId, Resume,REJECT) {\r\n  return { ApplicationID, ApplicantName, RecuiterId , Resume,REJECT};\r\n}\r\n\r\nconst rows = [\r\n  createData(1, 'MADHUSUDAN', 1,'DOWNLOAD','BUTTON'),\r\n  createData(2, 'SHIV', 1,'DOWNLOAD', 'BUTTON'),\r\n  createData(3, 'SWAGATA',1,'DOWNLOAD', 'BUTTON'),\r\n  createData(4, 'UMESH',1,'DOWNLOAD',  'BUTTON'),\r\n  createData(5, 'VISWA',1,'DOWNLOAD', 'BUTTON'),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function CustomizedTables() {\r\n  const classes = useStyles();\r\n  const[data,setData]=useState([]);\r\nuseEffect(() => {\r\n retrieveUsers();\r\n  },[]);\r\n\r\n  const retrieveUsers = async () => {\r\n   await ApplicationService.fetchUsers()\r\n      .then(response => {\r\n         setData(response.data);\r\n        // console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  const handleReject=(id)=>{\r\n    ApplicationService.RejectUser(id);\r\n    retrieveUsers();\r\n    handleClickSnackbar();\r\n    retrieveUsers();\r\n  }\r\n\r\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n   const [state, setState] = React.useState({\r\n     open: false,\r\n     vertical: 'top',\r\n     horizontal: 'center',\r\n   });\r\n   const { vertical, horizontal} = state;\r\n   const handleClickSnackbar = () => {\r\n     setOpenSnackbar(true);\r\n   };\r\n   \r\n   const handleCloseSnackbar = (event, reason) => {\r\n     if (reason === 'clickaway') {\r\n       return;\r\n     }\r\n   \r\n     setOpenSnackbar(false);\r\n   };\r\n  \r\n\r\n  return (\r\n    <>\r\n         <div className={classes.root}>\r\n      <Snackbar  anchorOrigin={{ vertical, horizontal }} key={vertical + horizontal}\r\n       open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n        <Alert onClose={handleCloseSnackbar} severity=\"success\">\r\n       APPLICANT REJECTED SUCCESSFULLY\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n    <Typography align='center'>SELETED APPLICATION LIST</Typography>\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>ApplicationID</StyledTableCell>\r\n            <StyledTableCell align=\"right\">ApplicantName</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Email ID</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Resume</StyledTableCell>\r\n            <StyledTableCell align=\"right\">REJECT</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map((row) => (\r\n             <>\r\n             {row.status==='Accepted' &&\r\n            <StyledTableRow key={row.id}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.id}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.applicantmodel.firstName}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.applicantmodel.email}</StyledTableCell>\r\n              <StyledTableCell align=\"right\"><GetAppIcon color='primary'/></StyledTableCell>\r\n              <StyledTableCell align=\"right\"><Button onClick={() => handleReject(row.id)}variant=\"contained\" color=\"secondary\">REJECT</Button></StyledTableCell>\r\n            </StyledTableRow>\r\n}\r\n            </>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\RegService.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\HandleTechnicalTeam.js",["467","468","469","470","471","472","473"],"import React, { useEffect, useState } from 'react';\r\nimport { withStyles,makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport HandleTechnicalTeamService from \"../../Service/HandleTechnicalTeam\";\r\nimport Menu from \"../MenuBar/Menu\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n\r\nlet SignupSchema = yup.object().shape({\r\n    username: yup.string()\r\n    .min(2, 'Too Short!')\r\n       .max(70, 'Too Long!')\r\n       .required(\"This field is required.\"),\r\n       position: yup.string()\r\n       .min(4, 'Too Short!')\r\n          .max(70, 'Too Long!')\r\n          .required(\"This field is required.\"),\r\n  });\r\n\r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\n    \"@global\": {\r\n        body: {\r\n          backgroundColor: theme.palette.common.white\r\n        }\r\n      },\r\n      paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n      },\r\n      avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n      },\r\n      form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n      },\r\n      submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n      },    \r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function TransitionsModal() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const saveScheduled=(data)=>{\r\n    const json={\r\n        \"firstName\": data.username,\r\n        \"lastName\": data.position\r\n    }\r\n    HandleTechnicalTeamService.create(json);\r\n    handleClickSnackbar();\r\n    getMeetings();\r\n    console.log(\"success\",json)\r\n  }\r\n  const [row,setSceduled]=useState([]);\r\n  useEffect(()=>{\r\n    getMeetings();\r\n  },[])\r\n  const getMeetings = async () => {\r\n    await HandleTechnicalTeamService.fetchUsers()\r\n       .then(response => {\r\n        setSceduled(response.data);\r\n         console.log(response);\r\n       })\r\n       .catch(e => {\r\n         console.log(e);\r\n       });\r\n   };\r\n\r\n   const [openUpdate, setOpenUpdate] = React.useState(false);\r\n   const[UpdateData,setUpdateData]=useState([]);\r\n   const handleReschuled=(id,data)=>{\r\n     setUpdateData(data);\r\n// console.log(id+'...........'+UpdateData)\r\ngetMeetings();\r\nsetOpenUpdate(true);\r\n   }\r\n\r\n   const handleReschuledClose = () => {\r\n    setOpenUpdate(false);\r\n  };\r\n\r\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: 'top',\r\n    horizontal: 'center',\r\n  });\r\n  const { vertical, horizontal} = state;\r\n  const handleClickSnackbar = () => {\r\n    setOpenSnackbar(true);\r\n  };\r\n  \r\n  const handleCloseSnackbar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n  \r\n    setOpenSnackbar(false);\r\n  };\r\n  return (\r\n      <>\r\n      <Menu/>\r\n      <div className={classes.root}>\r\n      <Snackbar  anchorOrigin={{ vertical, horizontal }} key={vertical + horizontal}\r\n       open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n        <Alert onClose={handleCloseSnackbar} severity=\"success\">\r\n      RECUITER CREATED SUCCESSFULLY\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n    <div>\r\n      <Button type=\"button\" onClick={handleOpen}  variant=\"contained\" style={{marginTop:'20px'}}\r\n              color=\"primary\">\r\n        CREATE RECUITER\r\n      </Button>\r\n       <TableContainer component={Paper} style={{marginTop:'20px'}} >\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>RecuiterID</StyledTableCell>\r\n            <StyledTableCell align=\"right\">USER NAME</StyledTableCell>\r\n            <StyledTableCell align=\"right\">POSITION</StyledTableCell>\r\n            \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {row.map((row) => (\r\n            <StyledTableRow key={row.id}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.id}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.firstName}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.lastName}</StyledTableCell>\r\n              {/* <StyledTableCell align=\"right\">{row.scheduledDate}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.scheduledTime}</StyledTableCell>\r\n              <StyledTableCell align=\"right\"><Button variant=\"contained\" color=\"secondary\" onClick={() => handleReschuled(row.id,row)}>RESCHULIED</Button></StyledTableCell>\r\n            */}\r\n            </StyledTableRow> \r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          SCEHULE MEETING\r\n        </Typography>\r\n        <Formik\r\n          initialValues={{\r\n           username:'',\r\n           position:''\r\n          }}\r\n          validationSchema={SignupSchema}\r\n          onSubmit={values => {\r\n            console.log(values);\r\n            saveScheduled(values);\r\n          }}\r\n        >\r\n          {({ errors, handleChange, touched }) => (\r\n            <Form className={classes.form}>\r\n              <Grid container spacing={2}>\r\n            \r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    error={errors.username && touched.username}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"username\"\r\n                    label=\"username\"\r\n                    name=\"username\"\r\n                    autoComplete=\"username\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    helperText={\r\n                      errors.username && touched.username ? errors.username : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <TextField\r\n                    error={errors.position && touched.position}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"position\"\r\n                    label=\"position\"\r\n                    name=\"position\"\r\n                    autoComplete=\"position\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    helperText={\r\n                      errors.position && touched.position ? errors.position : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                \r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Save\r\n              </Button>&nbsp;&nbsp;&nbsp;\r\n              <Button color=\"secondary\"\r\n              \r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n               onClick={handleClose}>CANCEL</Button>\r\n\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        </div>\r\n    </Container>\r\n        </Fade>\r\n      </Modal>\r\n</div>\r\n\r\n    </>\r\n  );\r\n}\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\HandleHrDashboard.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\ReSchuledMeetings.js",["474","475","476","477","478","479","480","481"],"import React, { useEffect, useState } from 'react';\r\nimport { withStyles,makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport * as moment from 'moment';\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport ScheduledMeetings from \"../../Service/ScheduledMeetings\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n\r\nlet SignupSchema = yup.object().shape({\r\n    MeetingName: yup.string()\r\n    .min(2, 'Too Short!')\r\n       .max(70, 'Too Long!')\r\n       .required(\"This field is required.\"),\r\n       MeetingDescription: yup.string()\r\n       .min(10, 'Too Short!')\r\n          .max(70, 'Too Long!')\r\n          .required(\"This field is required.\"),\r\n          Platform: yup.string()\r\n          .min(10, 'Too Short!')\r\n             .max(70, 'Too Long!')\r\n             .required(\"direct or online interview is required.\"),\r\n                 MeetingDate: yup.date()\r\n        .min(new Date())\r\n        .required(),\r\n        ApplicantId:yup.number()\r\n        .min(1, 'Too Short!')\r\n           .max(5, 'Too Long!')\r\n           .required(\"required.\"),\r\n           RecuiterId:yup.number()\r\n           .min(1, 'Too Short!')\r\n              .max(5, 'Too Long!')\r\n              .required(\"required.\"),\r\n  });\r\n\r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\n    \"@global\": {\r\n        body: {\r\n          backgroundColor: theme.palette.common.white\r\n        }\r\n      },\r\n      paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n      },\r\n      avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n      },\r\n      form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n      },\r\n      submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n      },    \r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function TransitionsModal() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const saveScheduled=(data)=>{\r\n    let time=data.MeetingDate+'T'+data.MeetingTime+':'+'00';\r\n    let dateObj = new Date(time);\r\n    console.log(dateObj);\r\n    console.log(time)\r\n    const json={\r\n      \"applicantId\": data.ApplicantId,\r\n  \"meetingDescription\": data.MeetingDescription,\r\n  \"meetingName\": data.MeetingName,\r\n  \"platformLink\": data.Platform,\r\n  \"recuiterId\": data.RecuiterId,\r\n  \"scheduledDate\": data.MeetingDate,\r\n  \"scheduledTime\": dateObj,\r\n  \"meetingStatus\": \"Scheduled\"\r\n    }\r\n    ScheduledMeetings.create(json);\r\n    console.log(\"success\")\r\n    handleClickSnackbar();\r\n    getMeetings();\r\n  }\r\n  const [row,setSceduled]=useState([]);\r\n  useEffect(()=>{\r\n    getMeetings();\r\n  },[])\r\n  const getMeetings = async () => {\r\n    await ScheduledMeetings.fetchUsers()\r\n       .then(response => {\r\n        setSceduled(response.data);\r\n         console.log(response);\r\n       })\r\n       .catch(e => {\r\n         console.log(e);\r\n       });\r\n   };\r\n\r\n   const [openUpdate, setOpenUpdate] = React.useState(false);\r\n   const[UpdateData,setUpdateData]=useState([]);\r\n   const handleReschuled=(id,data)=>{\r\n     setUpdateData(data);\r\nconsole.log(id+'...........'+UpdateData)\r\nsetOpenUpdate(true);\r\n   }\r\n\r\n   const handleReschuledClose = () => {\r\n    setOpenUpdate(false);\r\n  };\r\n\r\n  const handleUpdate=(id,data)=>{\r\n    let time=data.MeetingDate+'T'+data.MeetingTime+':'+'00';\r\n    let dateObj = new Date(time);\r\n    const updatejson={\r\n      \"id\":id,\r\n      \"applicantId\": data.ApplicantId,\r\n  \"meetingDescription\": data.MeetingDescription,\r\n  \"meetingName\": data.MeetingName,\r\n  \"platformLink\": data.Platform,\r\n  \"recuiterId\": data.RecuiterId,\r\n  \"scheduledDate\": data.MeetingDate,\r\n  \"scheduledTime\": dateObj,\r\n  \"meetingStatus\": \"Scheduled\"\r\n    }\r\nconsole.log(updatejson)\r\nScheduledMeetings.editUser(id,updatejson);\r\ngetMeetings();\r\nhandleClickSnackbar();\r\n  }\r\n\r\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: 'top',\r\n    horizontal: 'center',\r\n  });\r\n  const { vertical, horizontal} = state;\r\n  const handleClickSnackbar = () => {\r\n    setOpenSnackbar(true);\r\n  };\r\n  \r\n  const handleCloseSnackbar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n  \r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div className={classes.root}>\r\n      <Snackbar  anchorOrigin={{ vertical, horizontal }} key={vertical + horizontal}\r\n       open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n        <Alert onClose={handleCloseSnackbar} severity=\"success\">\r\n     MEETING SCHEDULED SUCCESSFULLY\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n    <div>\r\n      <Button type=\"button\" onClick={handleOpen}  variant=\"contained\"\r\n              color=\"primary\">\r\n        SCHEULED\r\n      </Button>\r\n       <TableContainer component={Paper} style={{marginTop:'20px'}}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>ApplicantID</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING NAME</StyledTableCell>\r\n            <StyledTableCell align=\"right\">RecuiterId</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING DATE</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING TIME</StyledTableCell>\r\n            <StyledTableCell align=\"right\">RESCHULIE MEETINGS</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {row.map((row) => (\r\n             <>\r\n             {row.meetingStatus==='ReScheduled' &&\r\n            <StyledTableRow key={row.applicantId}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.applicantId}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.meetingName}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.recuiterId}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.scheduledDate}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.scheduledTime}</StyledTableCell>\r\n              <StyledTableCell align=\"right\"><Button variant=\"contained\" color=\"secondary\" onClick={() => handleReschuled(row.id,row)}>SCHULIED AGAIN</Button></StyledTableCell>\r\n            </StyledTableRow>\r\n             }\r\n             </>\r\n          ))}\r\n          \r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          SCEHULE MEETING\r\n        </Typography>\r\n        <Formik\r\n          initialValues={{\r\n            MeetingName:'',\r\n            MeetingDescription:'',\r\n            Platform:'',\r\n            MeetingDate:new Date(),\r\n            MeetingTime:'',\r\n            ApplicantId:'',\r\n            RecuiterId:''\r\n          }}\r\n          validationSchema={SignupSchema}\r\n          onSubmit={values => {\r\n            console.log(values);\r\n            saveScheduled(values);\r\n          }}\r\n        >\r\n          {({ errors, handleChange, touched }) => (\r\n            <Form className={classes.form}>\r\n              <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    error={errors.ApplicantId && touched.ApplicantId}\r\n                    autoComplete=\"ApplicantId\"\r\n                    name=\"ApplicantId\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"ApplicantId\"\r\n                    label=\"ApplicantId\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.ApplicantId && touched.ApplicantId\r\n                        ? errors.ApplicantId\r\n                        : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    error={errors.RecuiterId && touched.RecuiterId}\r\n                    autoComplete=\"RecuiterId\"\r\n                    name=\"RecuiterId\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"RecuiterId\"\r\n                    label=\"RecuiterId\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.RecuiterId && touched.RecuiterId\r\n                        ? errors.RecuiterId\r\n                        : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    error={errors.MeetingName && touched.MeetingName}\r\n                    autoComplete=\"MeetingName\"\r\n                    name=\"MeetingName\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"MeetingName\"\r\n                    label=\"MeetingName\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.MeetingName && touched.MeetingName\r\n                        ? errors.MeetingName\r\n                        : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    error={errors.MeetingDescription && touched.MeetingDescription}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"MeetingDescription\"\r\n                    label=\"MeetingDescription\"\r\n                    name=\"MeetingDescription\"\r\n                    autoComplete=\"lname\"\r\n                    helperText={\r\n                      errors.MeetingDescription && touched.MeetingDescription\r\n                        ? errors.MeetingDescription\r\n                        : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    error={errors.Platform && touched.Platform}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"Platform\"\r\n                    label=\"Platform\"\r\n                    name=\"Platform\"\r\n                    autoComplete=\"Platform\"\r\n                    helperText={\r\n                      errors.Platform && touched.Platform ? errors.Platform : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    error={errors.MeetingDate && touched.MeetingDate}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"MeetingDate\"\r\n                    label=\"MeetingDate\"\r\n                    name=\"MeetingDate\"\r\n                    type=\"date\"\r\n                    autoComplete=\"MeetingDate\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    helperText={\r\n                      errors.MeetingDate && touched.MeetingDate ? errors.MeetingDate : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <TextField\r\n                    error={errors.MeetingTime && touched.MeetingTime}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"MeetingTime\"\r\n                    label=\"MeetingTime\"\r\n                    name=\"MeetingTime\"\r\n                    type=\"time\"\r\n                    defaultValue=\"10:30\"\r\n                    autoComplete=\"MeetingTime\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    helperText={\r\n                      errors.MeetingTime && touched.MeetingTime ? errors.MeetingTime : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                \r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Save\r\n              </Button>\r\n              <Button color=\"secondary\"\r\n              \r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n               onClick={handleClose}>CANCEL</Button>\r\n\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        </div>\r\n    </Container>\r\n        </Fade>\r\n      </Modal>\r\n    {/* ------------------- */}\r\n\r\n    <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={openUpdate}\r\n        onClose={handleReschuledClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={openUpdate}>\r\n          <div className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n          SCEHULE MEETING\r\n        </Typography>\r\n        <Formik\r\n          initialValues={{\r\n            MeetingName:'',\r\n            MeetingDescription:'',\r\n            Platform:'',\r\n            MeetingDate:new Date(),\r\n            MeetingTime:'',\r\n            ApplicantId:'',\r\n            RecuiterId:''\r\n          }}\r\n          validationSchema={SignupSchema}\r\n          onSubmit={values => {\r\n            // console.log(\"update\"+values);\r\n           handleUpdate(UpdateData.id,values);\r\n          }}\r\n        >\r\n          {({ errors, handleChange, touched }) => (\r\n            <Form className={classes.form}>\r\n              <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    error={errors.ApplicantId && touched.ApplicantId}\r\n                    autoComplete=\"ApplicantId\"\r\n                    name=\"ApplicantId\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    defaultValue={UpdateData.applicantId}\r\n                    id=\"ApplicantId\"\r\n                    label=\"ApplicantId\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.ApplicantId && touched.ApplicantId\r\n                        ? errors.ApplicantId\r\n                        : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    error={errors.RecuiterId && touched.RecuiterId}\r\n                    autoComplete=\"RecuiterId\"\r\n                    name=\"RecuiterId\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={UpdateData.recuiterId}\r\n                    onChange={handleChange}\r\n                    id=\"RecuiterId\"\r\n                    label=\"RecuiterId\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.RecuiterId && touched.RecuiterId\r\n                        ? errors.RecuiterId\r\n                        : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    error={errors.MeetingName && touched.MeetingName}\r\n                    autoComplete=\"MeetingName\"\r\n                    name=\"MeetingName\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    defaultValue={UpdateData.meetingName}\r\n                    id=\"MeetingName\"\r\n                    label=\"MeetingName\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.MeetingName && touched.MeetingName\r\n                        ? errors.MeetingName\r\n                        : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    error={errors.MeetingDescription && touched.MeetingDescription}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    defaultValue={UpdateData.meetingDescription}\r\n                    id=\"MeetingDescription\"\r\n                    label=\"MeetingDescription\"\r\n                    name=\"MeetingDescription\"\r\n                    autoComplete=\"lname\"\r\n                    helperText={\r\n                      errors.MeetingDescription && touched.MeetingDescription\r\n                        ? errors.MeetingDescription\r\n                        : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    error={errors.Platform && touched.Platform}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    defaultValue={UpdateData.platformLink}\r\n                    id=\"Platform\"\r\n                    label=\"Platform\"\r\n                    name=\"Platform\"\r\n                    autoComplete=\"Platform\"\r\n                    helperText={\r\n                      errors.Platform && touched.Platform ? errors.Platform : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    error={errors.MeetingDate && touched.MeetingDate}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    defaultValue={UpdateData.scheduledDate}\r\n                    id=\"MeetingDate\"\r\n                    label=\"MeetingDate\"\r\n                    name=\"MeetingDate\"\r\n                    type=\"date\"\r\n                    autoComplete=\"MeetingDate\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    helperText={\r\n                      errors.MeetingDate && touched.MeetingDate ? errors.MeetingDate : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <TextField\r\n                    error={errors.MeetingTime && touched.MeetingTime}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    defaultValue={UpdateData.scheduledTime}\r\n                    id=\"MeetingTime\"\r\n                    label=\"MeetingTime\"\r\n                    name=\"MeetingTime\"\r\n                    type=\"time\"\r\n                    defaultValue=\"10:30\"\r\n                    autoComplete=\"MeetingTime\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    helperText={\r\n                      errors.MeetingTime && touched.MeetingTime ? errors.MeetingTime : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                \r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Update\r\n              </Button>&nbsp;&nbsp;&nbsp;\r\n              <Button color=\"secondary\"\r\n              \r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n               onClick={handleReschuledClose}>CANCEL</Button>\r\n\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n            </div>\r\n        </Fade>\r\n      </Modal>\r\n\r\n    </div>\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\HandleHrNotification.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\ScheduledMeetings.js",["482","483","484","485","486","487","488","489"],"import React, { useEffect, useState } from 'react';\r\nimport { withStyles,makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport * as moment from 'moment';\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport ScheduledMeetings from \"../../Service/ScheduledMeetings\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n\r\nlet SignupSchema = yup.object().shape({\r\n    MeetingName: yup.string()\r\n    .min(2, 'Too Short!')\r\n       .max(70, 'Too Long!')\r\n       .required(\"This field is required.\"),\r\n       MeetingDescription: yup.string()\r\n       .min(10, 'Too Short!')\r\n          .max(70, 'Too Long!')\r\n          .required(\"This field is required.\"),\r\n          Platform: yup.string()\r\n          .min(10, 'Too Short!')\r\n             .max(70, 'Too Long!')\r\n             .required(\"direct or online interview is required.\"),\r\n                 MeetingDate: yup.date()\r\n        .min(new Date())\r\n        .required(),\r\n        ApplicantId:yup.number()\r\n        .min(1, 'Too Short!')\r\n           .max(5, 'Too Long!')\r\n           .required(\"required.\"),\r\n           RecuiterId:yup.number()\r\n           .min(1, 'Too Short!')\r\n              .max(5, 'Too Long!')\r\n              .required(\"required.\"),\r\n  });\r\n\r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\n    \"@global\": {\r\n        body: {\r\n          backgroundColor: theme.palette.common.white\r\n        }\r\n      },\r\n      paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n      },\r\n      avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n      },\r\n      form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n      },\r\n      submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n      },    \r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function TransitionsModal() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const saveScheduled=(data)=>{\r\n    let time=data.MeetingDate+'T'+data.MeetingTime+':'+'00';\r\n    let dateObj = new Date(time);\r\n    console.log(dateObj);\r\n    console.log(time)\r\n    const json={\r\n      \"applicantId\": data.ApplicantId,\r\n  \"meetingDescription\": data.MeetingDescription,\r\n  \"meetingName\": data.MeetingName,\r\n  \"platformLink\": data.Platform,\r\n  \"recuiterId\": data.RecuiterId,\r\n  \"scheduledDate\": data.MeetingDate,\r\n  \"scheduledTime\": dateObj,\r\n  \"schedulestatus\": \"Scheduled\"\r\n    }\r\n    ScheduledMeetings.create(json);\r\n    handleClickSnackbar();\r\n    getMeetings();\r\n    console.log(\"success\")\r\n  }\r\n  const [row,setSceduled]=useState([]);\r\n  useEffect(()=>{\r\n    getMeetings();\r\n  },[])\r\n  const getMeetings = async () => {\r\n    await ScheduledMeetings.fetchUsers()\r\n       .then(response => {\r\n        setSceduled(response.data);\r\n         console.log(response);\r\n       })\r\n       .catch(e => {\r\n         console.log(e);\r\n       });\r\n   };\r\n\r\n   const [openUpdate, setOpenUpdate] = React.useState(false);\r\n   const[UpdateData,setUpdateData]=useState([]);\r\n   const handleReschuled=(id,data)=>{\r\n     setUpdateData(data);\r\nconsole.log(id+'...........'+UpdateData)\r\nsetOpenUpdate(true);\r\n   }\r\n\r\n   const handleReschuledClose = () => {\r\n    setOpenUpdate(false);\r\n  };\r\n\r\n  const handleUpdate=(id,data)=>{\r\n    let time=data.MeetingDate+'T'+data.MeetingTime+':'+'00';\r\n    let dateObj = new Date(time);\r\n    const updatejson={\r\n      \"id\":id,\r\n      \"applicantId\": data.ApplicantId,\r\n  \"meetingDescription\": data.MeetingDescription,\r\n  \"meetingName\": data.MeetingName,\r\n  \"platformLink\": data.Platform,\r\n  \"recuiterId\": data.RecuiterId,\r\n  \"scheduledDate\": data.MeetingDate,\r\n  \"scheduledTime\": dateObj,\r\n\r\n  \"meetingStatus\": \"Scheduled\"\r\n    }\r\nconsole.log(updatejson)\r\nScheduledMeetings.editUser(id,updatejson);\r\ngetMeetings();\r\nhandleClickSnackbar();\r\n  }\r\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: 'top',\r\n    horizontal: 'center',\r\n  });\r\n  const { vertical, horizontal} = state;\r\n  const handleClickSnackbar = () => {\r\n    setOpenSnackbar(true);\r\n  };\r\n  \r\n  const handleCloseSnackbar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n  \r\n    setOpenSnackbar(false);\r\n  };\r\n  return (\r\n    <>\r\n    <div className={classes.root}>\r\n      <Snackbar  anchorOrigin={{ vertical, horizontal }} key={vertical + horizontal}\r\n       open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n        <Alert onClose={handleCloseSnackbar} severity=\"success\">\r\n      MEETING SCHEDULED SUCCESSFULLY\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n    <div>\r\n      <Button type=\"button\" onClick={handleOpen}  variant=\"contained\"\r\n              color=\"primary\">\r\n        SCHEULED\r\n      </Button>\r\n       <TableContainer component={Paper} style={{marginTop:'20px'}}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>ApplicantID</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING NAME</StyledTableCell>\r\n            <StyledTableCell align=\"right\">RecuiterId</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING DATE</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING TIME</StyledTableCell>\r\n            <StyledTableCell align=\"right\">RESCHULIE MEETINGS</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {row.map((row) => (\r\n              <>\r\n              {row.meetingStatus==='Scheduled'&&\r\n            <StyledTableRow key={row.applicantId}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.applicantId}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.meetingName}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.recuiterId}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.scheduledDate}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.scheduledTime}</StyledTableCell>\r\n              <StyledTableCell align=\"right\"><Button variant=\"contained\" color=\"secondary\" onClick={() => handleReschuled(row.id,row)}>RESCHULIED</Button></StyledTableCell>\r\n            </StyledTableRow>\r\n          }\r\n             </>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          SCEHULE MEETING\r\n        </Typography>\r\n        <Formik\r\n          initialValues={{\r\n            MeetingName:'',\r\n            MeetingDescription:'',\r\n            Platform:'',\r\n            MeetingDate:new Date(),\r\n            MeetingTime:'',\r\n            ApplicantId:'',\r\n            RecuiterId:''\r\n          }}\r\n          validationSchema={SignupSchema}\r\n          onSubmit={values => {\r\n            console.log(values);\r\n            saveScheduled(values);\r\n          }}\r\n        >\r\n          {({ errors, handleChange, touched }) => (\r\n            <Form className={classes.form}>\r\n              <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    error={errors.ApplicantId && touched.ApplicantId}\r\n                    autoComplete=\"ApplicantId\"\r\n                    name=\"ApplicantId\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"ApplicantId\"\r\n                    label=\"APPLICANT ID\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.ApplicantId && touched.ApplicantId\r\n                        ? errors.ApplicantId\r\n                        : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    error={errors.RecuiterId && touched.RecuiterId}\r\n                    autoComplete=\"RecuiterId\"\r\n                    name=\"RecuiterId\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"RecuiterId\"\r\n                    label=\"RECRUITER ID\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.RecuiterId && touched.RecuiterId\r\n                        ? errors.RecuiterId\r\n                        : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    error={errors.MeetingName && touched.MeetingName}\r\n                    autoComplete=\"MeetingName\"\r\n                    name=\"MeetingName\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"MeetingName\"\r\n                    label=\"MEETING NAME\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.MeetingName && touched.MeetingName\r\n                        ? errors.MeetingName\r\n                        : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    error={errors.MeetingDescription && touched.MeetingDescription}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"MeetingDescription\"\r\n                    label=\"MEETING DESCRIPTION\"\r\n                    name=\"MeetingDescription\"\r\n                    autoComplete=\"lname\"\r\n                    helperText={\r\n                      errors.MeetingDescription && touched.MeetingDescription\r\n                        ? errors.MeetingDescription\r\n                        : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    error={errors.Platform && touched.Platform}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"Platform\"\r\n                    label=\"PLATFORM\"\r\n                    name=\"Platform\"\r\n                    autoComplete=\"Platform\"\r\n                    helperText={\r\n                      errors.Platform && touched.Platform ? errors.Platform : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    error={errors.MeetingDate && touched.MeetingDate}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"MeetingDate\"\r\n                    label=\"MeetingDate\"\r\n                    name=\"MEETING DATE\"\r\n                    type=\"date\"\r\n                    autoComplete=\"MeetingDate\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    helperText={\r\n                      errors.MeetingDate && touched.MeetingDate ? errors.MeetingDate : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <TextField\r\n                    error={errors.MeetingTime && touched.MeetingTime}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"MeetingTime\"\r\n                    label=\"MeetingTime\"\r\n                    name=\"MEETING TIME\"\r\n                    type=\"time\"\r\n                    defaultValue=\"10:30\"\r\n                    autoComplete=\"MeetingTime\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    helperText={\r\n                      errors.MeetingTime && touched.MeetingTime ? errors.MeetingTime : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                \r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Save\r\n              </Button>&nbsp;&nbsp;&nbsp;\r\n              <Button color=\"secondary\"\r\n              \r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n               onClick={handleClose}>CANCEL</Button>\r\n\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        </div>\r\n    </Container>\r\n        </Fade>\r\n      </Modal>\r\n    {/* ------------------- */}\r\n\r\n    <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={openUpdate}\r\n        onClose={handleReschuledClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={openUpdate}>\r\n          <div className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n          SCHEDULED MEETING\r\n        </Typography>\r\n        <Formik\r\n          initialValues={{\r\n            MeetingName:'',\r\n            MeetingDescription:'',\r\n            Platform:'',\r\n            MeetingDate:new Date(),\r\n            MeetingTime:'',\r\n            ApplicantId:'',\r\n            RecuiterId:''\r\n          }}\r\n          validationSchema={SignupSchema}\r\n          onSubmit={values => {\r\n            // console.log(\"update\"+values);\r\n           handleUpdate(UpdateData.id,values);\r\n          }}\r\n        >\r\n          {({ errors, handleChange, touched }) => (\r\n            <Form className={classes.form}>\r\n              <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    error={errors.ApplicantId && touched.ApplicantId}\r\n                    autoComplete=\"ApplicantId\"\r\n                    name=\"ApplicantId\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    defaultValue={UpdateData.applicantId}\r\n                    id=\"ApplicantId\"\r\n                    label=\"APPLICANT ID\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.ApplicantId && touched.ApplicantId\r\n                        ? errors.ApplicantId\r\n                        : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    error={errors.RecuiterId && touched.RecuiterId}\r\n                    autoComplete=\"RecuiterId\"\r\n                    name=\"RecuiterId\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={UpdateData.recuiterId}\r\n                    onChange={handleChange}\r\n                    id=\"RecuiterId\"\r\n                    label=\"RECRUITER ID\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.RecuiterId && touched.RecuiterId\r\n                        ? errors.RecuiterId\r\n                        : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    error={errors.MeetingName && touched.MeetingName}\r\n                    autoComplete=\"MeetingName\"\r\n                    name=\"MeetingName\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    defaultValue={UpdateData.meetingName}\r\n                    id=\"MeetingName\"\r\n                    label=\"MEETING NAME\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.MeetingName && touched.MeetingName\r\n                        ? errors.MeetingName\r\n                        : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    error={errors.MeetingDescription && touched.MeetingDescription}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    defaultValue={UpdateData.meetingDescription}\r\n                    id=\"MeetingDescription\"\r\n                    label=\"MEETING DESCRIPTION\"\r\n                    name=\"MeetingDescription\"\r\n                    autoComplete=\"lname\"\r\n                    helperText={\r\n                      errors.MeetingDescription && touched.MeetingDescription\r\n                        ? errors.MeetingDescription\r\n                        : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    error={errors.Platform && touched.Platform}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    defaultValue={UpdateData.platformLink}\r\n                    id=\"Platform\"\r\n                    label=\"PLATFORM\"\r\n                    name=\"Platform\"\r\n                    autoComplete=\"Platform\"\r\n                    helperText={\r\n                      errors.Platform && touched.Platform ? errors.Platform : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    error={errors.MeetingDate && touched.MeetingDate}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    defaultValue={UpdateData.scheduledDate}\r\n                    id=\"MeetingDate\"\r\n                    label=\"MEETING DATE\"\r\n                    name=\"MeetingDate\"\r\n                    type=\"date\"\r\n                    autoComplete=\"MeetingDate\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    helperText={\r\n                      errors.MeetingDate && touched.MeetingDate ? errors.MeetingDate : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <TextField\r\n                    error={errors.MeetingTime && touched.MeetingTime}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    defaultValue={UpdateData.scheduledTime}\r\n                    id=\"MeetingTime\"\r\n                    label=\"MEETING TIME\"\r\n                    name=\"MeetingTime\"\r\n                    type=\"time\"\r\n                    defaultValue=\"10:30\"\r\n                    autoComplete=\"MeetingTime\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    helperText={\r\n                      errors.MeetingTime && touched.MeetingTime ? errors.MeetingTime : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                \r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Update\r\n              </Button>&nbsp;&nbsp;&nbsp;\r\n              <Button color=\"secondary\"\r\n              \r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n               onClick={handleReschuledClose}>CANCEL</Button>\r\n\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n            </div>\r\n        </Fade>\r\n      </Modal>\r\n\r\n    </div>\r\n    \r\n\r\n    </>\r\n  );\r\n}\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\TodaysHrMeetings.js",["490","491","492","493","494"],"import React, { useEffect, useState } from 'react';\r\nimport { withStyles,makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport ScheduledMeetings from \"../../Service/ScheduledMeetings\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n}));\r\n\r\n\r\nexport default function ControlledAccordions() {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  const [row,setSceduled]=useState([]);\r\n  useEffect(()=>{\r\n    getMeetings();\r\n  },[])\r\n  const getMeetings = async () => {\r\n    await ScheduledMeetings.fetchUsers()\r\n       .then(response => {\r\n        setSceduled(response.data);\r\n         console.log(response);\r\n       })\r\n       .catch(e => {\r\n         console.log(e);\r\n       });\r\n   };\r\n   const [openUpdate, setOpenUpdate] = React.useState(false);\r\n   const[UpdateData,setUpdateData]=useState([]);\r\n   const handleReschuled=(id,data)=>{\r\n     setUpdateData(data);\r\nconsole.log(id+'...........'+UpdateData)\r\nsetOpenUpdate(true);\r\n   }\r\n\r\n   const handleReschuledClose = (id,data) => {\r\n     ScheduledMeetings.rescheduledMeeting(id);\r\n     handleClickSnackbar();\r\n    setOpenUpdate(false);\r\n  };\r\n\r\n  const handleUpdate=(id,data)=>{\r\n    let time=data.MeetingDate+'T'+data.MeetingTime+':'+'00';\r\n    let dateObj = new Date(time);\r\n    const updatejson={\r\n      \"id\":id,\r\n      \"applicantId\": data.ApplicantId,\r\n  \"meetingDescription\": data.MeetingDescription,\r\n  \"meetingName\": data.MeetingName,\r\n  \"platformLink\": data.Platform,\r\n  \"recuiterId\": data.RecuiterId,\r\n  \"scheduledDate\": data.MeetingDate,\r\n  \"scheduledTime\": dateObj,\r\n\r\n  \"meetingStatus\": \"Scheduled\"\r\n    }\r\nconsole.log(updatejson)\r\nScheduledMeetings.editUser(id,updatejson);\r\nhandleClickSnackbar();\r\ngetMeetings();\r\n  }\r\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: 'top',\r\n    horizontal: 'center',\r\n  });\r\n  const { vertical, horizontal} = state;\r\n  const handleClickSnackbar = () => {\r\n    setOpenSnackbar(true);\r\n  };\r\n  \r\n  const handleCloseSnackbar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n  \r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div className={classes.root}>\r\n      <Snackbar  anchorOrigin={{ vertical, horizontal }} key={vertical + horizontal}\r\n       open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n        <Alert onClose={handleCloseSnackbar} severity=\"success\">\r\n      MEETING SCHEDULED SUCCESSFULLY\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n    <div className={classes.root}>\r\n      <Accordion expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n          <Typography className={classes.heading} color='primary'>INTERVIEWS SCHEDULES</Typography>\r\n          <Typography className={classes.secondaryHeading}color='primary'>THIS IS FOR OVER ALL INTERVIEW SCHEDULES</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        \r\n        <TableContainer component={Paper} style={{marginTop:'20px'}}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>ApplicantID</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING NAME</StyledTableCell>\r\n            <StyledTableCell align=\"right\">RecuiterId</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING DATE</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING TIME</StyledTableCell>\r\n            <StyledTableCell align=\"right\">RESCHULIE MEETINGS</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {row.map((row) => (\r\n            <StyledTableRow key={row.applicantId}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.applicantId}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.meetingName}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.recuiterId}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.scheduledDate}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.scheduledTime}</StyledTableCell>\r\n              <StyledTableCell align=\"right\"><Button variant=\"contained\" color=\"secondary\" onClick={() => handleReschuled(row.id,row)}>RESCHULIED</Button></StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel2bh-content\"\r\n          id=\"panel2bh-header\"\r\n        >\r\n          <Typography className={classes.heading} color='primary'>MEETINGS SCHEDULES INFORMATION</Typography>\r\n          <Typography className={classes.secondaryHeading} color='primary'>\r\n            ANY MEETINGS FROM COMPANY SIDE\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <TableContainer component={Paper} style={{marginTop:'20px'}}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>ApplicantID</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING NAME</StyledTableCell>\r\n            <StyledTableCell align=\"right\">RecuiterId</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING DATE</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING TIME</StyledTableCell>\r\n            <StyledTableCell align=\"right\">RESCHULIE MEETINGS</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {row.map((row) => (\r\n            <StyledTableRow key={row.applicantId}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.applicantId}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.meetingName}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.recuiterId}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.scheduledDate}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.scheduledTime}</StyledTableCell>\r\n              <StyledTableCell align=\"right\"><Button variant=\"contained\" color=\"secondary\" onClick={() => handleReschuled(row.id,row)}>RESCHULIED</Button></StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n            </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel3bh-content\"\r\n          id=\"panel3bh-header\"\r\n        >\r\n          <Typography className={classes.heading} color='primary'>OTHER SCHEDULES</Typography>\r\n          <Typography className={classes.secondaryHeading}color='primary'>\r\n            ANY TYPE OF MEETINGS ASSIGNED TO TECHNICAL TEAM\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          \r\n      \r\n        <TableContainer component={Paper} style={{marginTop:'20px'}}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>ApplicantID</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING NAME</StyledTableCell>\r\n            <StyledTableCell align=\"right\">RecuiterId</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING DATE</StyledTableCell>\r\n            <StyledTableCell align=\"right\">MEETING TIME</StyledTableCell>\r\n            <StyledTableCell align=\"right\">RESCHULIE MEETINGS</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {row.map((row) => (\r\n            <StyledTableRow key={row.applicantId}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.applicantId}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.meetingName}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.recuiterId}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.scheduledDate}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.scheduledTime}</StyledTableCell>\r\n              <StyledTableCell align=\"right\"><Button variant=\"contained\" color=\"secondary\" onClick={() => handleReschuled(row.id,row)}>RESCHULIED</Button></StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\InterViewProceses\\Questions.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\InterViewProceses\\TimeCount.js",["495","496","497","498","499","500","501"],"import React, { useEffect } from 'react';\r\nimport { useTimer } from 'react-timer-hook';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LandingPage from \"../ApplicantLandingPage/LandingPage\"\r\nfunction MyTimer({ expiryTimestamp }) {\r\n  const {\r\n    seconds,\r\n    minutes,\r\n    hours,\r\n    days,\r\n    isRunning,\r\n    start,\r\n    pause,\r\n    resume,\r\n    restart,\r\n  } = useTimer({ expiryTimestamp, onExpire: () => console.warn('onExpire called') });\r\n  let history = useHistory();\r\nconst handleCount=()=>{\r\n  console.log(minutes+':'+seconds);\r\n  history.push(\"/LandingPage\");\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <div style={{textAlign: 'center'}}>\r\n      <h1>COMPLETE WITH IN 30 MIN</h1>\r\n      <div style={{fontSize: '30px'}}>\r\n        <span>{days}</span>:<span>{hours}</span>:<span>{minutes}</span>:<span>{seconds}</span>\r\n        {localStorage.setItem(\"minutes\",minutes),\r\n  localStorage.setItem(\"seconds\",seconds)}\r\n      </div>\r\n      <p>{isRunning ? 'Running' : 'Not running'}</p>\r\n      {/* <button onClick={start}>Start</button>\r\n      <button onClick={pause}>Pause</button> */}\r\n      <Button onClick={resume} onClick={handleCount} color={'primary'}>COMPLETE TEST</Button>\r\n      {/* <button onClick={() => {\r\n        // Restarts to 5 minutes timer\r\n        const time = new Date();\r\n        time.setSeconds(time.getSeconds() + 300);\r\n        restart(time)\r\n      }}>Restart</button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function TimeCounter() {\r\n  const time = new Date();\r\n  time.setSeconds(time.getSeconds() + 1800); // 30 minutes timer i seted\r\n  return (\r\n    <div>\r\n      <MyTimer expiryTimestamp={time} />\r\n    </div>\r\n  );\r\n}","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\UserTestService.js",[],["502","503"],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\ScheduledMeetings.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\HandleTechnicalTeam.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\MenuBar\\MenuBarLandingAuth.js",["504","505","506","507","508","509"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ApplicantProfile from \"../ApplicantProfile/ApplicantProfile\"\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleChange = (event) => {\r\n    setAuth(event.target.checked);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  let history = useHistory();\r\n\r\n    const handleProfile = () => {\r\n    history.push(\"/Login\");\r\n  };\r\n\r\n  const handleLogOut=()=>{\r\n    history.push('/registration');\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title} align='left'>\r\n            ODIGO TECH\r\n          </Typography>\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleProfile}>SIGN IN</MenuItem>\r\n                <MenuItem onClick={handleLogOut}>SIGN UP</MenuItem>\r\n              </Menu>\r\n            </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantProfile\\UserProfile.js",["510","511","512","513"],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantProfile\\accordian.js",["514","515"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionActions from '@material-ui/core/AccordionActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '33.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function DetailedAccordion() {\r\n  const classes = useStyles();\r\n\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleOnChange = e => {\r\n    console.log(e.target.files[0]);\r\n    setFile(e.target.files[0]);\r\n  };\r\n  const UPLOAD_ENDPOINT =\r\n    \"http://localhost:8080/file/uploadFile\";\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    let res = await uploadFile(file);\r\n  };\r\n\r\n  const uploadFile = async file => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    return await axios.post(UPLOAD_ENDPOINT, formData).then(res=>{\r\n   console.log('DOCUMENT FORM')\r\n    });\r\n  };\r\n\r\nconst handleClose=()=>{\r\n    console.log(\"close\")\r\n}\r\nconst handleSave=()=>{\r\n    console.log(\"save\");\r\n}\r\n\r\nconst chip=[\r\n    {skill:'JAVA'},\r\n{skill:'ANGULAR'},\r\n{skill:'REACT'}\r\n]\r\n\r\nconst handleDelete = (e) => {\r\n    console.info('You clicked the delete icon.'+e.skill);\r\n  };\r\n\r\n  return (\r\n      <>\r\n    <div className={classes.root}>\r\n      <Accordion defaultExpanded>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1c-content\"\r\n          id=\"panel1c-header\"\r\n        >\r\n          <div className={classes.column}>\r\n            <Typography className={classes.heading}>RESUME</Typography>\r\n          </div>\r\n          <div className={classes.column}>\r\n            <Typography className={classes.secondaryHeading}>UPLOAD YOUR UPDATED RESUME</Typography>\r\n          </div>\r\n        </AccordionSummary>\r\n        <AccordionDetails className={classes.details}>\r\n          <div className={classes.column} />\r\n          <div className={classes.column}>\r\n            <Typography>\r\n          <div style={{marginTop:\"20px\"}}>\r\n<form onSubmit={handleSubmit}>\r\n      <Button\r\n  variant=\"contained\"\r\n  component=\"label\"\r\n>\r\n  Upload File\r\n  <input type=\"file\" onChange={handleOnChange} />\r\n</Button>\r\n     \r\n      <Button color=\"secondary\"\r\n              variant=\"contained\"\r\n              color=\"primary\" type=\"submit\">Upload File</Button>\r\n    </form>\r\n              \r\n            </div>\r\n           \r\n \r\n          </Typography>\r\n          </div>\r\n          <div className={clsx(classes.column, classes.helper)}>\r\n            <Typography variant=\"caption\">\r\n           CREATE YOUR RESUME HERE\r\n              <br />\r\n              <a href=\"#secondary-heading-and-columns\" className={classes.link}>\r\n                CLICK HERE\r\n              </a>\r\n            </Typography>\r\n          </div>\r\n        </AccordionDetails>\r\n        <Divider />\r\n        <AccordionActions>\r\n          <Button size=\"small\" onClick={handleClose}>Cancel</Button>\r\n          <Button size=\"small\" color=\"primary\" onClick={handleSave}>\r\n            Save\r\n          </Button>\r\n        </AccordionActions>\r\n      </Accordion>\r\n    </div>\r\n {/* ------------ */}\r\n <Accordion defaultExpanded style={{marginTop:'20px'}}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1c-content\"\r\n          id=\"panel1c-header\"\r\n        >\r\n          <div className={classes.column}>\r\n            <Typography className={classes.heading}>Resume Headline</Typography>\r\n          </div>\r\n        </AccordionSummary>\r\n        <AccordionDetails className={classes.details}>\r\n          <div className={classes.column} />\r\n          <div className={classes.column}>\r\n          A highly motivated and results-oriented individual seeking a position and self-learning, looking for a full-stack developer position\r\n          </div>\r\n        \r\n        </AccordionDetails>\r\n        <Divider />\r\n        <AccordionActions>\r\n          <Button size=\"small\">Cancel</Button>\r\n          <Button size=\"small\" color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </AccordionActions>\r\n      </Accordion>\r\n    {/* ----------- */}\r\n    <Accordion defaultExpanded style={{marginTop:'20px'}}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1c-content\"\r\n          id=\"panel1c-header\"\r\n        >\r\n          <div className={classes.column}>\r\n            <Typography className={classes.heading}>SKILLS</Typography>\r\n          </div>\r\n          <div className={classes.column}>\r\n            <Typography className={classes.secondaryHeading}>Key Skills ABOUT TECHNOLGYIES</Typography>\r\n          </div>\r\n        </AccordionSummary>\r\n        <AccordionDetails className={classes.details}>\r\n          <div className={classes.column} />\r\n          <div className={classes.column}>\r\n              {chip.map((data)=>(\r\n                  <Chip label={data.skill} onDelete={handleDelete} color=\"primary\" variant=\"outlined\" />\r\n              ))}\r\n            \r\n          </div>\r\n          <div className={clsx(classes.column, classes.helper)}>\r\n            <Typography variant=\"caption\">\r\n              Select your destination of choice\r\n              <br />\r\n              <a href=\"#secondary-heading-and-columns\" className={classes.link}>\r\n                Learn more\r\n              </a>\r\n            </Typography>\r\n          </div>\r\n        </AccordionDetails>\r\n        <Divider />\r\n        <AccordionActions>\r\n          <Button size=\"small\">Cancel</Button>\r\n          <Button size=\"small\" color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </AccordionActions>\r\n      </Accordion>\r\n    {/* -------- */}\r\n    <Accordion defaultExpanded style={{marginTop:'20px'}}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1c-content\"\r\n          id=\"panel1c-header\"\r\n        >\r\n          <div className={classes.column}>\r\n            <Typography className={classes.heading}>PROJECT</Typography>\r\n          </div>\r\n          <div className={classes.column}>\r\n            <Typography className={classes.secondaryHeading}>PROJECT INFORMATION</Typography>\r\n          </div>\r\n        </AccordionSummary>\r\n        <AccordionDetails className={classes.details}>\r\n          <div className={classes.column} />\r\n          <div className={classes.column}>\r\n            <p>PROJECT NAME </p>\r\n            <p>project description</p>\r\n          </div>\r\n        </AccordionDetails>\r\n        <Divider />\r\n        <AccordionActions>\r\n          <Button size=\"small\">Cancel</Button>\r\n          <Button size=\"small\" color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </AccordionActions>\r\n      </Accordion>\r\n       {/* -------- */}\r\n    <Accordion defaultExpanded style={{marginTop:'20px'}}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1c-content\"\r\n          id=\"panel1c-header\"\r\n        >\r\n          <div className={classes.column}>\r\n            <Typography className={classes.heading}>Profile Summary</Typography>\r\n          </div>\r\n          <div className={classes.column}>\r\n            <Typography className={classes.secondaryHeading}>PROJECT INFORMATION</Typography>\r\n          </div>\r\n        </AccordionSummary>\r\n        <AccordionDetails className={classes.details}>\r\n          <div className={classes.column} />\r\n          <div className={classes.column}>\r\n            <p>Your Profile Summary should mention the highlights of your career and education, what your professional interests are, and what kind \r\n                of a career you are looking for. Write a meaningful summary of more than 50 characters.</p>\r\n          </div>\r\n        </AccordionDetails>\r\n        <Divider />\r\n        <AccordionActions>\r\n          <Button size=\"small\">Cancel</Button>\r\n          <Button size=\"small\" color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </AccordionActions>\r\n      </Accordion>\r\n        {/* -------- */}\r\n    <Accordion defaultExpanded style={{marginTop:'20px'}}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1c-content\"\r\n          id=\"panel1c-header\"\r\n        >\r\n          <div className={classes.column}>\r\n            <Typography className={classes.heading}>Personal Details</Typography>\r\n          </div>\r\n        </AccordionSummary>\r\n        <AccordionDetails className={classes.details}>\r\n          <div className={classes.column} />\r\n          <div className={classes.column}>\r\n          <div style={{float:'left'}}>\r\n                  <p>NAME</p>\r\n                  <p>DATA OF BIRTH</p>\r\n                  <p>GENDER</p>\r\n                  <p>ADDRESS</p>\r\n                  <p>STATE</p>\r\n                  <p>COUNTRY</p>\r\n                  \r\n                  </div>\r\n              <div style={{float:'right'}}>\r\n                  <p>MADHU</p>\r\n                  <p>04-08-1997</p>\r\n                  <p>MALE</p>\r\n                  <p>HASSAN CITY ,573201</p>\r\n                  <p>KARNATAKA</p>\r\n                  <p>INDIA</p>\r\n              </div>\r\n          </div>\r\n        </AccordionDetails>\r\n        <Divider />\r\n        <AccordionActions>\r\n          <Button size=\"small\">Cancel</Button>\r\n          <Button size=\"small\" color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </AccordionActions>\r\n      </Accordion>\r\n  </>\r\n  );\r\n}\r\n",{"ruleId":"516","replacedBy":"517"},{"ruleId":"518","replacedBy":"519"},{"ruleId":"520","severity":1,"message":"521","line":15,"column":8,"nodeType":"522","messageId":"523","endLine":15,"endColumn":19},{"ruleId":"520","severity":1,"message":"524","line":26,"column":8,"nodeType":"522","messageId":"523","endLine":26,"endColumn":25},{"ruleId":"520","severity":1,"message":"525","line":62,"column":15,"nodeType":"522","messageId":"523","endLine":62,"endColumn":23},{"ruleId":"526","severity":1,"message":"527","line":140,"column":18,"nodeType":"528","messageId":"529","endLine":140,"endColumn":20},{"ruleId":"520","severity":1,"message":"530","line":2,"column":8,"nodeType":"522","messageId":"523","endLine":2,"endColumn":19},{"ruleId":"520","severity":1,"message":"531","line":3,"column":8,"nodeType":"522","messageId":"523","endLine":3,"endColumn":13},{"ruleId":"520","severity":1,"message":"532","line":5,"column":8,"nodeType":"522","messageId":"523","endLine":5,"endColumn":13},{"ruleId":"520","severity":1,"message":"533","line":6,"column":8,"nodeType":"522","messageId":"523","endLine":6,"endColumn":16},{"ruleId":"520","severity":1,"message":"534","line":8,"column":8,"nodeType":"522","messageId":"523","endLine":8,"endColumn":18},{"ruleId":"520","severity":1,"message":"535","line":9,"column":8,"nodeType":"522","messageId":"523","endLine":9,"endColumn":20},{"ruleId":"520","severity":1,"message":"536","line":20,"column":8,"nodeType":"522","messageId":"523","endLine":20,"endColumn":20},{"ruleId":"520","severity":1,"message":"537","line":63,"column":9,"nodeType":"522","messageId":"523","endLine":63,"endColumn":16},{"ruleId":"520","severity":1,"message":"538","line":37,"column":17,"nodeType":"522","messageId":"523","endLine":37,"endColumn":26},{"ruleId":"520","severity":1,"message":"539","line":38,"column":11,"nodeType":"522","messageId":"523","endLine":38,"endColumn":16},{"ruleId":"520","severity":1,"message":"540","line":39,"column":18,"nodeType":"522","messageId":"523","endLine":39,"endColumn":30},{"ruleId":"520","severity":1,"message":"541","line":40,"column":18,"nodeType":"522","messageId":"523","endLine":40,"endColumn":30},{"ruleId":"520","severity":1,"message":"525","line":41,"column":15,"nodeType":"522","messageId":"523","endLine":41,"endColumn":23},{"ruleId":"520","severity":1,"message":"542","line":11,"column":8,"nodeType":"522","messageId":"523","endLine":11,"endColumn":15},{"ruleId":"520","severity":1,"message":"543","line":12,"column":8,"nodeType":"522","messageId":"523","endLine":12,"endColumn":18},{"ruleId":"520","severity":1,"message":"544","line":13,"column":8,"nodeType":"522","messageId":"523","endLine":13,"endColumn":16},{"ruleId":"520","severity":1,"message":"521","line":17,"column":8,"nodeType":"522","messageId":"523","endLine":17,"endColumn":19},{"ruleId":"520","severity":1,"message":"545","line":20,"column":8,"nodeType":"522","messageId":"523","endLine":20,"endColumn":20},{"ruleId":"520","severity":1,"message":"546","line":46,"column":8,"nodeType":"522","messageId":"523","endLine":46,"endColumn":15},{"ruleId":"520","severity":1,"message":"547","line":47,"column":7,"nodeType":"522","messageId":"523","endLine":47,"endColumn":17},{"ruleId":"520","severity":1,"message":"548","line":56,"column":7,"nodeType":"522","messageId":"523","endLine":56,"endColumn":19},{"ruleId":"549","severity":1,"message":"550","line":33,"column":1,"nodeType":"551","endLine":40,"endColumn":3},{"ruleId":"520","severity":1,"message":"552","line":38,"column":17,"nodeType":"522","messageId":"523","endLine":38,"endColumn":26},{"ruleId":"520","severity":1,"message":"540","line":39,"column":18,"nodeType":"522","messageId":"523","endLine":39,"endColumn":30},{"ruleId":"520","severity":1,"message":"541","line":40,"column":18,"nodeType":"522","messageId":"523","endLine":40,"endColumn":30},{"ruleId":"520","severity":1,"message":"525","line":41,"column":15,"nodeType":"522","messageId":"523","endLine":41,"endColumn":23},{"ruleId":"520","severity":1,"message":"553","line":1,"column":17,"nodeType":"522","messageId":"523","endLine":1,"endColumn":25},{"ruleId":"520","severity":1,"message":"554","line":1,"column":27,"nodeType":"522","messageId":"523","endLine":1,"endColumn":36},{"ruleId":"520","severity":1,"message":"555","line":2,"column":9,"nodeType":"522","messageId":"523","endLine":2,"endColumn":13},{"ruleId":"520","severity":1,"message":"556","line":3,"column":8,"nodeType":"522","messageId":"523","endLine":3,"endColumn":18},{"ruleId":"520","severity":1,"message":"557","line":8,"column":8,"nodeType":"522","messageId":"523","endLine":8,"endColumn":17},{"ruleId":"520","severity":1,"message":"558","line":11,"column":8,"nodeType":"522","messageId":"523","endLine":11,"endColumn":19},{"ruleId":"520","severity":1,"message":"559","line":12,"column":8,"nodeType":"522","messageId":"523","endLine":12,"endColumn":13},{"ruleId":"520","severity":1,"message":"554","line":1,"column":27,"nodeType":"522","messageId":"523","endLine":1,"endColumn":36},{"ruleId":"520","severity":1,"message":"560","line":1,"column":37,"nodeType":"522","messageId":"523","endLine":1,"endColumn":47},{"ruleId":"520","severity":1,"message":"561","line":57,"column":9,"nodeType":"522","messageId":"523","endLine":57,"endColumn":12},{"ruleId":"520","severity":1,"message":"525","line":72,"column":17,"nodeType":"522","messageId":"523","endLine":72,"endColumn":25},{"ruleId":"520","severity":1,"message":"562","line":95,"column":10,"nodeType":"522","messageId":"523","endLine":95,"endColumn":17},{"ruleId":"520","severity":1,"message":"563","line":97,"column":9,"nodeType":"522","messageId":"523","endLine":97,"endColumn":26},{"ruleId":"520","severity":1,"message":"564","line":101,"column":12,"nodeType":"522","messageId":"523","endLine":101,"endColumn":24},{"ruleId":"520","severity":1,"message":"565","line":121,"column":22,"nodeType":"522","messageId":"523","endLine":121,"endColumn":33},{"ruleId":"566","severity":1,"message":"567","line":148,"column":15,"nodeType":"568","endLine":148,"endColumn":30},{"ruleId":"566","severity":1,"message":"567","line":156,"column":33,"nodeType":"568","endLine":156,"endColumn":46},{"ruleId":"566","severity":1,"message":"567","line":308,"column":33,"nodeType":"568","endLine":308,"endColumn":46},{"ruleId":"569","severity":1,"message":"570","line":41,"column":18,"nodeType":"571","messageId":"572","endLine":41,"endColumn":55},{"ruleId":"569","severity":1,"message":"570","line":42,"column":19,"nodeType":"571","messageId":"572","endLine":42,"endColumn":60},{"ruleId":"569","severity":1,"message":"570","line":50,"column":19,"nodeType":"571","messageId":"572","endLine":50,"endColumn":60},{"ruleId":"569","severity":1,"message":"570","line":57,"column":19,"nodeType":"571","messageId":"572","endLine":57,"endColumn":60},{"ruleId":"520","severity":1,"message":"562","line":84,"column":12,"nodeType":"522","messageId":"523","endLine":84,"endColumn":19},{"ruleId":"520","severity":1,"message":"563","line":86,"column":11,"nodeType":"522","messageId":"523","endLine":86,"endColumn":28},{"ruleId":"520","severity":1,"message":"525","line":102,"column":17,"nodeType":"522","messageId":"523","endLine":102,"endColumn":25},{"ruleId":"520","severity":1,"message":"554","line":1,"column":27,"nodeType":"522","messageId":"523","endLine":1,"endColumn":36},{"ruleId":"520","severity":1,"message":"573","line":4,"column":24,"nodeType":"522","messageId":"523","endLine":4,"endColumn":29},{"ruleId":"520","severity":1,"message":"574","line":4,"column":31,"nodeType":"522","messageId":"523","endLine":4,"endColumn":43},{"ruleId":"575","severity":1,"message":"576","line":55,"column":28,"nodeType":"577","messageId":"578","endLine":55,"endColumn":29,"fix":"579"},{"ruleId":"575","severity":1,"message":"576","line":77,"column":28,"nodeType":"577","messageId":"578","endLine":77,"endColumn":29,"fix":"580"},{"ruleId":"520","severity":1,"message":"581","line":98,"column":8,"nodeType":"522","messageId":"523","endLine":98,"endColumn":25},{"ruleId":"520","severity":1,"message":"582","line":98,"column":26,"nodeType":"522","messageId":"523","endLine":98,"endColumn":46},{"ruleId":"520","severity":1,"message":"562","line":99,"column":12,"nodeType":"522","messageId":"523","endLine":99,"endColumn":19},{"ruleId":"520","severity":1,"message":"563","line":101,"column":11,"nodeType":"522","messageId":"523","endLine":101,"endColumn":28},{"ruleId":"520","severity":1,"message":"583","line":105,"column":21,"nodeType":"522","messageId":"523","endLine":105,"endColumn":33},{"ruleId":"520","severity":1,"message":"525","line":113,"column":17,"nodeType":"522","messageId":"523","endLine":113,"endColumn":25},{"ruleId":"566","severity":1,"message":"567","line":267,"column":15,"nodeType":"568","endLine":267,"endColumn":30},{"ruleId":"520","severity":1,"message":"584","line":132,"column":11,"nodeType":"522","messageId":"523","endLine":132,"endColumn":15},{"ruleId":"520","severity":1,"message":"585","line":133,"column":11,"nodeType":"522","messageId":"523","endLine":133,"endColumn":16},{"ruleId":"520","severity":1,"message":"525","line":185,"column":17,"nodeType":"522","messageId":"523","endLine":185,"endColumn":25},{"ruleId":"520","severity":1,"message":"554","line":1,"column":17,"nodeType":"522","messageId":"523","endLine":1,"endColumn":26},{"ruleId":"520","severity":1,"message":"586","line":47,"column":11,"nodeType":"522","messageId":"523","endLine":47,"endColumn":18},{"ruleId":"520","severity":1,"message":"525","line":100,"column":17,"nodeType":"522","messageId":"523","endLine":100,"endColumn":25},{"ruleId":"520","severity":1,"message":"525","line":76,"column":17,"nodeType":"522","messageId":"523","endLine":76,"endColumn":25},{"ruleId":"566","severity":1,"message":"567","line":248,"column":17,"nodeType":"568","endLine":248,"endColumn":32},{"ruleId":"520","severity":1,"message":"587","line":4,"column":8,"nodeType":"522","messageId":"523","endLine":4,"endColumn":23},{"ruleId":"520","severity":1,"message":"588","line":12,"column":8,"nodeType":"522","messageId":"523","endLine":12,"endColumn":16},{"ruleId":"520","severity":1,"message":"589","line":18,"column":8,"nodeType":"522","messageId":"523","endLine":18,"endColumn":17},{"ruleId":"520","severity":1,"message":"590","line":19,"column":7,"nodeType":"522","messageId":"523","endLine":19,"endColumn":15},{"ruleId":"520","severity":1,"message":"591","line":49,"column":12,"nodeType":"522","messageId":"523","endLine":49,"endColumn":20},{"ruleId":"520","severity":1,"message":"592","line":50,"column":13,"nodeType":"522","messageId":"523","endLine":50,"endColumn":25},{"ruleId":"520","severity":1,"message":"593","line":3,"column":8,"nodeType":"522","messageId":"523","endLine":3,"endColumn":12},{"ruleId":"520","severity":1,"message":"594","line":5,"column":8,"nodeType":"522","messageId":"523","endLine":5,"endColumn":18},{"ruleId":"520","severity":1,"message":"595","line":6,"column":8,"nodeType":"522","messageId":"523","endLine":6,"endColumn":17},{"ruleId":"520","severity":1,"message":"596","line":9,"column":8,"nodeType":"522","messageId":"523","endLine":9,"endColumn":16},{"ruleId":"520","severity":1,"message":"597","line":10,"column":8,"nodeType":"522","messageId":"523","endLine":10,"endColumn":14},{"ruleId":"520","severity":1,"message":"598","line":14,"column":8,"nodeType":"522","messageId":"523","endLine":14,"endColumn":20},{"ruleId":"520","severity":1,"message":"599","line":15,"column":8,"nodeType":"522","messageId":"523","endLine":15,"endColumn":17},{"ruleId":"520","severity":1,"message":"600","line":16,"column":8,"nodeType":"522","messageId":"523","endLine":16,"endColumn":22},{"ruleId":"520","severity":1,"message":"601","line":17,"column":8,"nodeType":"522","messageId":"523","endLine":17,"endColumn":20},{"ruleId":"520","severity":1,"message":"602","line":46,"column":9,"nodeType":"522","messageId":"523","endLine":46,"endColumn":26},{"ruleId":"520","severity":1,"message":"603","line":5,"column":8,"nodeType":"522","messageId":"523","endLine":5,"endColumn":26},{"ruleId":"520","severity":1,"message":"604","line":6,"column":8,"nodeType":"522","messageId":"523","endLine":6,"endColumn":29},{"ruleId":"520","severity":1,"message":"605","line":7,"column":8,"nodeType":"522","messageId":"523","endLine":7,"endColumn":31},{"ruleId":"520","severity":1,"message":"606","line":8,"column":8,"nodeType":"522","messageId":"523","endLine":8,"endColumn":24},{"ruleId":"520","severity":1,"message":"607","line":9,"column":8,"nodeType":"522","messageId":"523","endLine":9,"endColumn":33},{"ruleId":"520","severity":1,"message":"608","line":10,"column":8,"nodeType":"522","messageId":"523","endLine":10,"endColumn":24},{"ruleId":"520","severity":1,"message":"609","line":11,"column":8,"nodeType":"522","messageId":"523","endLine":11,"endColumn":31},{"ruleId":"520","severity":1,"message":"553","line":1,"column":17,"nodeType":"522","messageId":"523","endLine":1,"endColumn":25},{"ruleId":"520","severity":1,"message":"554","line":1,"column":27,"nodeType":"522","messageId":"523","endLine":1,"endColumn":36},{"ruleId":"520","severity":1,"message":"610","line":9,"column":8,"nodeType":"522","messageId":"523","endLine":9,"endColumn":14},{"ruleId":"520","severity":1,"message":"611","line":10,"column":8,"nodeType":"522","messageId":"523","endLine":10,"endColumn":24},{"ruleId":"520","severity":1,"message":"612","line":11,"column":8,"nodeType":"522","messageId":"523","endLine":11,"endColumn":17},{"ruleId":"520","severity":1,"message":"613","line":15,"column":8,"nodeType":"522","messageId":"523","endLine":15,"endColumn":19},{"ruleId":"520","severity":1,"message":"614","line":16,"column":8,"nodeType":"522","messageId":"523","endLine":16,"endColumn":24},{"ruleId":"520","severity":1,"message":"615","line":31,"column":10,"nodeType":"522","messageId":"523","endLine":31,"endColumn":14},{"ruleId":"520","severity":1,"message":"592","line":35,"column":9,"nodeType":"522","messageId":"523","endLine":35,"endColumn":21},{"ruleId":"520","severity":1,"message":"553","line":1,"column":17,"nodeType":"522","messageId":"523","endLine":1,"endColumn":25},{"ruleId":"520","severity":1,"message":"616","line":21,"column":10,"nodeType":"522","messageId":"523","endLine":21,"endColumn":20},{"ruleId":"520","severity":1,"message":"525","line":106,"column":17,"nodeType":"522","messageId":"523","endLine":106,"endColumn":25},{"ruleId":"520","severity":1,"message":"553","line":2,"column":17,"nodeType":"522","messageId":"523","endLine":2,"endColumn":25},{"ruleId":"520","severity":1,"message":"617","line":16,"column":10,"nodeType":"522","messageId":"523","endLine":16,"endColumn":14},{"ruleId":"520","severity":1,"message":"618","line":17,"column":13,"nodeType":"522","messageId":"523","endLine":17,"endColumn":19},{"ruleId":"520","severity":1,"message":"525","line":106,"column":17,"nodeType":"522","messageId":"523","endLine":106,"endColumn":25},{"ruleId":"520","severity":1,"message":"619","line":113,"column":10,"nodeType":"522","messageId":"523","endLine":113,"endColumn":14},{"ruleId":"520","severity":1,"message":"620","line":113,"column":16,"nodeType":"522","messageId":"523","endLine":113,"endColumn":23},{"ruleId":"566","severity":1,"message":"567","line":355,"column":21,"nodeType":"568","endLine":355,"endColumn":48},{"ruleId":"566","severity":1,"message":"567","line":524,"column":15,"nodeType":"568","endLine":524,"endColumn":30},{"ruleId":"520","severity":1,"message":"621","line":3,"column":8,"nodeType":"522","messageId":"523","endLine":3,"endColumn":22},{"ruleId":"520","severity":1,"message":"588","line":12,"column":8,"nodeType":"522","messageId":"523","endLine":12,"endColumn":16},{"ruleId":"520","severity":1,"message":"589","line":18,"column":8,"nodeType":"522","messageId":"523","endLine":18,"endColumn":17},{"ruleId":"520","severity":1,"message":"590","line":19,"column":7,"nodeType":"522","messageId":"523","endLine":19,"endColumn":15},{"ruleId":"520","severity":1,"message":"591","line":49,"column":12,"nodeType":"522","messageId":"523","endLine":49,"endColumn":20},{"ruleId":"520","severity":1,"message":"592","line":50,"column":13,"nodeType":"522","messageId":"523","endLine":50,"endColumn":25},{"ruleId":"520","severity":1,"message":"622","line":1,"column":10,"nodeType":"522","messageId":"523","endLine":1,"endColumn":14},{"ruleId":"520","severity":1,"message":"623","line":8,"column":43,"nodeType":"522","messageId":"523","endLine":8,"endColumn":47},{"ruleId":"520","severity":1,"message":"624","line":67,"column":7,"nodeType":"522","messageId":"523","endLine":67,"endColumn":13},{"ruleId":"520","severity":1,"message":"625","line":75,"column":7,"nodeType":"522","messageId":"523","endLine":75,"endColumn":13},{"ruleId":"520","severity":1,"message":"626","line":83,"column":7,"nodeType":"522","messageId":"523","endLine":83,"endColumn":18},{"ruleId":"520","severity":1,"message":"615","line":91,"column":10,"nodeType":"522","messageId":"523","endLine":91,"endColumn":14},{"ruleId":"520","severity":1,"message":"619","line":93,"column":9,"nodeType":"522","messageId":"523","endLine":93,"endColumn":13},{"ruleId":"520","severity":1,"message":"627","line":95,"column":9,"nodeType":"522","messageId":"523","endLine":95,"endColumn":22},{"ruleId":"520","severity":1,"message":"561","line":110,"column":9,"nodeType":"522","messageId":"523","endLine":110,"endColumn":12},{"ruleId":"520","severity":1,"message":"628","line":121,"column":9,"nodeType":"522","messageId":"523","endLine":121,"endColumn":19},{"ruleId":"520","severity":1,"message":"629","line":125,"column":9,"nodeType":"522","messageId":"523","endLine":125,"endColumn":20},{"ruleId":"566","severity":1,"message":"567","line":217,"column":15,"nodeType":"568","endLine":217,"endColumn":30},{"ruleId":"520","severity":1,"message":"554","line":1,"column":17,"nodeType":"522","messageId":"523","endLine":1,"endColumn":26},{"ruleId":"520","severity":1,"message":"525","line":233,"column":17,"nodeType":"522","messageId":"523","endLine":233,"endColumn":25},{"ruleId":"520","severity":1,"message":"630","line":19,"column":8,"nodeType":"522","messageId":"523","endLine":19,"endColumn":17},{"ruleId":"520","severity":1,"message":"630","line":19,"column":8,"nodeType":"522","messageId":"523","endLine":19,"endColumn":17},{"ruleId":"520","severity":1,"message":"631","line":20,"column":8,"nodeType":"522","messageId":"523","endLine":20,"endColumn":16},{"ruleId":"520","severity":1,"message":"544","line":11,"column":8,"nodeType":"522","messageId":"523","endLine":11,"endColumn":16},{"ruleId":"520","severity":1,"message":"632","line":12,"column":8,"nodeType":"522","messageId":"523","endLine":12,"endColumn":13},{"ruleId":"520","severity":1,"message":"633","line":13,"column":8,"nodeType":"522","messageId":"523","endLine":13,"endColumn":16},{"ruleId":"520","severity":1,"message":"634","line":14,"column":8,"nodeType":"522","messageId":"523","endLine":14,"endColumn":12},{"ruleId":"520","severity":1,"message":"635","line":15,"column":8,"nodeType":"522","messageId":"523","endLine":15,"endColumn":18},{"ruleId":"520","severity":1,"message":"525","line":82,"column":15,"nodeType":"522","messageId":"523","endLine":82,"endColumn":23},{"ruleId":"520","severity":1,"message":"525","line":74,"column":15,"nodeType":"522","messageId":"523","endLine":74,"endColumn":23},{"ruleId":"520","severity":1,"message":"543","line":16,"column":8,"nodeType":"522","messageId":"523","endLine":16,"endColumn":18},{"ruleId":"520","severity":1,"message":"636","line":83,"column":11,"nodeType":"522","messageId":"523","endLine":83,"endColumn":21},{"ruleId":"520","severity":1,"message":"637","line":91,"column":10,"nodeType":"522","messageId":"523","endLine":91,"endColumn":30},{"ruleId":"520","severity":1,"message":"638","line":95,"column":9,"nodeType":"522","messageId":"523","endLine":95,"endColumn":21},{"ruleId":"639","severity":1,"message":"640","line":96,"column":55,"nodeType":"528","messageId":"641","endLine":96,"endColumn":56},{"ruleId":"520","severity":1,"message":"525","line":117,"column":17,"nodeType":"522","messageId":"523","endLine":117,"endColumn":25},{"ruleId":"520","severity":1,"message":"632","line":3,"column":8,"nodeType":"522","messageId":"523","endLine":3,"endColumn":13},{"ruleId":"520","severity":1,"message":"633","line":4,"column":8,"nodeType":"522","messageId":"523","endLine":4,"endColumn":16},{"ruleId":"520","severity":1,"message":"634","line":5,"column":8,"nodeType":"522","messageId":"523","endLine":5,"endColumn":12},{"ruleId":"520","severity":1,"message":"618","line":6,"column":13,"nodeType":"522","messageId":"523","endLine":6,"endColumn":19},{"ruleId":"520","severity":1,"message":"642","line":7,"column":10,"nodeType":"522","messageId":"523","endLine":7,"endColumn":16},{"ruleId":"520","severity":1,"message":"643","line":7,"column":18,"nodeType":"522","messageId":"523","endLine":7,"endColumn":22},{"ruleId":"520","severity":1,"message":"557","line":9,"column":8,"nodeType":"522","messageId":"523","endLine":9,"endColumn":17},{"ruleId":"520","severity":1,"message":"644","line":10,"column":8,"nodeType":"522","messageId":"523","endLine":10,"endColumn":12},{"ruleId":"520","severity":1,"message":"645","line":11,"column":8,"nodeType":"522","messageId":"523","endLine":11,"endColumn":18},{"ruleId":"520","severity":1,"message":"646","line":13,"column":8,"nodeType":"522","messageId":"523","endLine":13,"endColumn":17},{"ruleId":"520","severity":1,"message":"647","line":14,"column":8,"nodeType":"522","messageId":"523","endLine":14,"endColumn":19},{"ruleId":"520","severity":1,"message":"648","line":47,"column":5,"nodeType":"522","messageId":"523","endLine":47,"endColumn":17},{"ruleId":"649","severity":1,"message":"650","line":102,"column":3,"nodeType":"651","messageId":"529","endLine":102,"endColumn":8},{"ruleId":"520","severity":1,"message":"619","line":112,"column":10,"nodeType":"522","messageId":"523","endLine":112,"endColumn":14},{"ruleId":"520","severity":1,"message":"629","line":118,"column":9,"nodeType":"522","messageId":"523","endLine":118,"endColumn":20},{"ruleId":"520","severity":1,"message":"652","line":122,"column":9,"nodeType":"522","messageId":"523","endLine":122,"endColumn":22},{"ruleId":"639","severity":1,"message":"640","line":123,"column":55,"nodeType":"528","messageId":"641","endLine":123,"endColumn":56},{"ruleId":"520","severity":1,"message":"525","line":162,"column":18,"nodeType":"522","messageId":"523","endLine":162,"endColumn":26},{"ruleId":"520","severity":1,"message":"653","line":42,"column":7,"nodeType":"522","messageId":"523","endLine":42,"endColumn":11},{"ruleId":"520","severity":1,"message":"525","line":81,"column":18,"nodeType":"522","messageId":"523","endLine":81,"endColumn":26},{"ruleId":"649","severity":1,"message":"650","line":88,"column":3,"nodeType":"651","messageId":"529","endLine":88,"endColumn":8},{"ruleId":"520","severity":1,"message":"636","line":133,"column":11,"nodeType":"522","messageId":"523","endLine":133,"endColumn":21},{"ruleId":"520","severity":1,"message":"654","line":134,"column":10,"nodeType":"522","messageId":"523","endLine":134,"endColumn":20},{"ruleId":"520","severity":1,"message":"655","line":135,"column":10,"nodeType":"522","messageId":"523","endLine":135,"endColumn":25},{"ruleId":"520","severity":1,"message":"637","line":142,"column":10,"nodeType":"522","messageId":"523","endLine":142,"endColumn":30},{"ruleId":"520","severity":1,"message":"525","line":147,"column":17,"nodeType":"522","messageId":"523","endLine":147,"endColumn":25},{"ruleId":"566","severity":1,"message":"567","line":292,"column":15,"nodeType":"568","endLine":292,"endColumn":30},{"ruleId":"520","severity":1,"message":"618","line":6,"column":13,"nodeType":"522","messageId":"523","endLine":6,"endColumn":19},{"ruleId":"649","severity":1,"message":"650","line":103,"column":3,"nodeType":"651","messageId":"529","endLine":103,"endColumn":8},{"ruleId":"639","severity":1,"message":"640","line":124,"column":55,"nodeType":"528","messageId":"641","endLine":124,"endColumn":56},{"ruleId":"639","severity":1,"message":"640","line":171,"column":55,"nodeType":"528","messageId":"641","endLine":171,"endColumn":56},{"ruleId":"520","severity":1,"message":"525","line":191,"column":17,"nodeType":"522","messageId":"523","endLine":191,"endColumn":25},{"ruleId":"566","severity":1,"message":"567","line":435,"column":15,"nodeType":"568","endLine":435,"endColumn":30},{"ruleId":"566","severity":1,"message":"567","line":606,"column":21,"nodeType":"568","endLine":606,"endColumn":41},{"ruleId":"566","severity":1,"message":"567","line":630,"column":15,"nodeType":"568","endLine":630,"endColumn":30},{"ruleId":"520","severity":1,"message":"618","line":6,"column":13,"nodeType":"522","messageId":"523","endLine":6,"endColumn":19},{"ruleId":"649","severity":1,"message":"650","line":103,"column":3,"nodeType":"651","messageId":"529","endLine":103,"endColumn":8},{"ruleId":"639","severity":1,"message":"640","line":124,"column":55,"nodeType":"528","messageId":"641","endLine":124,"endColumn":56},{"ruleId":"639","severity":1,"message":"640","line":171,"column":55,"nodeType":"528","messageId":"641","endLine":171,"endColumn":56},{"ruleId":"520","severity":1,"message":"525","line":191,"column":17,"nodeType":"522","messageId":"523","endLine":191,"endColumn":25},{"ruleId":"566","severity":1,"message":"567","line":433,"column":15,"nodeType":"568","endLine":433,"endColumn":30},{"ruleId":"566","severity":1,"message":"567","line":604,"column":21,"nodeType":"568","endLine":604,"endColumn":41},{"ruleId":"566","severity":1,"message":"567","line":628,"column":15,"nodeType":"568","endLine":628,"endColumn":30},{"ruleId":"520","severity":1,"message":"636","line":82,"column":11,"nodeType":"522","messageId":"523","endLine":82,"endColumn":21},{"ruleId":"520","severity":1,"message":"637","line":90,"column":10,"nodeType":"522","messageId":"523","endLine":90,"endColumn":30},{"ruleId":"520","severity":1,"message":"638","line":96,"column":9,"nodeType":"522","messageId":"523","endLine":96,"endColumn":21},{"ruleId":"639","severity":1,"message":"640","line":97,"column":55,"nodeType":"528","messageId":"641","endLine":97,"endColumn":56},{"ruleId":"520","severity":1,"message":"525","line":117,"column":17,"nodeType":"522","messageId":"523","endLine":117,"endColumn":25},{"ruleId":"520","severity":1,"message":"554","line":1,"column":17,"nodeType":"522","messageId":"523","endLine":1,"endColumn":26},{"ruleId":"520","severity":1,"message":"656","line":5,"column":8,"nodeType":"522","messageId":"523","endLine":5,"endColumn":19},{"ruleId":"520","severity":1,"message":"657","line":13,"column":5,"nodeType":"522","messageId":"523","endLine":13,"endColumn":10},{"ruleId":"520","severity":1,"message":"658","line":14,"column":5,"nodeType":"522","messageId":"523","endLine":14,"endColumn":10},{"ruleId":"520","severity":1,"message":"659","line":16,"column":5,"nodeType":"522","messageId":"523","endLine":16,"endColumn":12},{"ruleId":"660","severity":1,"message":"661","line":31,"column":49,"nodeType":"662","messageId":"663","endLine":31,"endColumn":50},{"ruleId":"566","severity":1,"message":"567","line":37,"column":32,"nodeType":"568","endLine":37,"endColumn":53},{"ruleId":"516","replacedBy":"664"},{"ruleId":"518","replacedBy":"665"},{"ruleId":"520","severity":1,"message":"610","line":9,"column":8,"nodeType":"522","messageId":"523","endLine":9,"endColumn":14},{"ruleId":"520","severity":1,"message":"611","line":10,"column":8,"nodeType":"522","messageId":"523","endLine":10,"endColumn":24},{"ruleId":"520","severity":1,"message":"612","line":11,"column":8,"nodeType":"522","messageId":"523","endLine":11,"endColumn":17},{"ruleId":"520","severity":1,"message":"666","line":15,"column":8,"nodeType":"522","messageId":"523","endLine":15,"endColumn":24},{"ruleId":"520","severity":1,"message":"615","line":30,"column":10,"nodeType":"522","messageId":"523","endLine":30,"endColumn":14},{"ruleId":"520","severity":1,"message":"592","line":34,"column":9,"nodeType":"522","messageId":"523","endLine":34,"endColumn":21},{"ruleId":"520","severity":1,"message":"667","line":3,"column":8,"nodeType":"522","messageId":"523","endLine":3,"endColumn":13},{"ruleId":"520","severity":1,"message":"668","line":6,"column":10,"nodeType":"522","messageId":"523","endLine":6,"endColumn":20},{"ruleId":"669","severity":1,"message":"670","line":61,"column":5,"nodeType":"522","endLine":61,"endColumn":14,"suggestions":"671"},{"ruleId":"520","severity":1,"message":"672","line":68,"column":13,"nodeType":"522","messageId":"523","endLine":68,"endColumn":23},{"ruleId":"520","severity":1,"message":"561","line":64,"column":9,"nodeType":"522","messageId":"523","endLine":64,"endColumn":12},{"ruleId":"566","severity":1,"message":"567","line":125,"column":15,"nodeType":"568","endLine":125,"endColumn":30},"no-native-reassign",["673"],"no-negated-in-lhs",["674"],"no-unused-vars","'InputFields' is defined but never used.","Identifier","unusedVar","'DialogContentText' is defined but never used.","'setState' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CenteredTab' is defined but never used.","'Icons' is defined but never used.","'PopUp' is defined but never used.","'RECTable' is defined but never used.","'ActiveUser' is defined but never used.","'InActiveUser' is defined but never used.","'UserSettings' is defined but never used.","'history' is assigned a value but never used.","'setstatus' is assigned a value but never used.","'setId' is assigned a value but never used.","'setcreatedAt' is assigned a value but never used.","'setupdatedAt' is assigned a value but never used.","'AddIcon' is defined but never used.","'GetAppIcon' is defined but never used.","'EditIcon' is defined but never used.","'SearchAndAdd' is defined but never used.","'getData' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'setStatus' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'fade' is defined but never used.","'CreateUser' is defined but never used.","'TextField' is defined but never used.","'DataService' is defined but never used.","'Table' is defined but never used.","'useReducer' is defined but never used.","'res' is assigned a value but never used.","'checked' is assigned a value but never used.","'handleChangeCheck' is assigned a value but never used.","'handleChange' is defined but never used.","'setDocument' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'Field' is defined but never used.","'ErrorMessage' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"675","text":"676"},{"range":"677","text":"676"},"'educationDeatails' is assigned a value but never used.","'seteducationDeatails' is assigned a value but never used.","'setEducation' is assigned a value but never used.","'time' is assigned a value but never used.","'score' is assigned a value but never used.","'regjson' is assigned a value but never used.","'DesktopViewImg1' is defined but never used.","'MenuItem' is defined but never used.","'Interview' is defined but never used.","'category' is assigned a value but never used.","'Category' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'clsx' is defined but never used.","'CardHeader' is defined but never used.","'CardMedia' is defined but never used.","'Collapse' is defined but never used.","'Avatar' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'handleExpandClick' is assigned a value but never used.","'PaymentTwoToneIcon' is defined but never used.","'StorefrontRoundedIcon' is defined but never used.","'PhoneAndroidRoundedIcon' is defined but never used.","'EmailRoundedIcon' is defined but never used.","'ContactSupportRoundedIcon' is defined but never used.","'StoreTwoToneIcon' is defined but never used.","'PermContactCalendarIcon' is defined but never used.","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'UserProfile' is defined but never used.","'ApplicantService' is defined but never used.","'auth' is assigned a value but never used.","'withStyles' is defined but never used.","'date' is defined but never used.","'moment' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'DesktopViewImg' is defined but never used.","'Menu' is defined but never used.","'Link' is defined but never used.","'style2' is assigned a value but never used.","'style3' is assigned a value but never used.","'avatarStyle' is assigned a value but never used.","'handleChange1' is assigned a value but never used.","'handleMenu' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'Modal' is defined but never used.","'Backdrop' is defined but never used.","'Fade' is defined but never used.","'DeleteIcon' is defined but never used.","'openUpdate' is assigned a value but never used.","'handleReschuledClose' is assigned a value but never used.","'handleUpdate' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'Formik' is defined but never used.","'Form' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'Container' is defined but never used.","'CssBaseline' is defined but never used.","'SignupSchema' is assigned a value but never used.","no-dupe-keys","Duplicate key 'paper'.","ObjectExpression","'saveScheduled' is assigned a value but never used.","'rows' is assigned a value but never used.","'UpdateData' is assigned a value but never used.","'handleReschuled' is assigned a value but never used.","'LandingPage' is defined but never used.","'start' is assigned a value but never used.","'pause' is assigned a value but never used.","'restart' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["673"],["674"],"'ApplicantProfile' is defined but never used.","'Paper' is defined but never used.","'deepOrange' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setTimeLeft'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [timeLeft] as a second argument to the useEffect Hook.",["678"],"'intervalId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[1995,2006],"\r\n        .",[2701,2712],{"desc":"679","fix":"680"},"Add dependencies array: [timeLeft]",{"range":"681","text":"682"},[2415,2415],", [timeLeft]"]