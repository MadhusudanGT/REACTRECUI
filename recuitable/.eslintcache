[{"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\index.js":"1","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\App.js":"2","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\reportWebVitals.js":"3","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\CenteredTabs\\ActiveUsers.js":"4","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\Icons\\Icons.js":"5","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\MenuBar\\Menu.js":"6","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\PopUpBox\\PopUp.js":"7","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\RECTable\\Table.js":"8","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\DashBoard\\SettingsUserPage\\UserSettings.js":"9","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\CenteredTabs\\User.js":"10","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\CenteredTabs\\inActiveUser.js":"11","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\InputFieldsUser\\AddUser.js":"12","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\RECTable\\Table1.js":"13","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\service.js":"14","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\ConnectionAxios.js":"15","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\RECTable\\AddUserTable.js":"16","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\RECTable\\SearchAndAdd.js":"17","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\UserLandingPage\\UserInterviewForm.js":"18","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\UserLandingPage\\DocumentForm.js":"19","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\UserLandingPage\\UserDeatilsForm.js":"20","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\UserLandingPage\\EducationSkillsForm.js":"21","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\FormikValidationForm\\RegistrationForm.js":"22","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\InterViewProceses\\LandingPageInterview.js":"23","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\InterViewProceses\\SecondInterviewProcess.js":"24","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\InterViewProceses\\FirstInterviewProcess.js":"25","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\InterViewProceses\\FinalRound.js":"26","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\LoginPage\\Login.js":"27","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\FormikValidationForm\\UpdateProfileForm.js":"28","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantLandingPage\\LandingPage.js":"29","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantLandingPage\\LandingPageCard.js":"30","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\Footer\\Footer.js":"31","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\MenuBar\\MenuBarLandingPage.js":"32","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\LoginPage\\Registration.js":"33","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\JobModel\\JobDetailsPage.js":"34","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\JobService.js":"35","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantLandingPage\\LandingPageForUnauth.js":"36","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\LoginPage\\ForgetPassword.js":"37","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantProfile\\ApplicantProfile.js":"38","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantProfile\\ProfileProgress.js":"39","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\UserLandingPage\\UserDetails.js":"40","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\ApplicationService.js":"41","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\TechnicalLandingPage.js":"42","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\HrLandingPge.js":"43","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleDashboard.js":"44","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleApplications.js":"45","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleRejected.js":"46","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleNotification.js":"47","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleTodaySch.js":"48","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleSchedule.js":"49","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleSelected.js":"50","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\RegService.js":"51","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\HandleTechnicalTeam.js":"52","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\HandleHrDashboard.js":"53","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\ReSchuledMeetings.js":"54","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\HandleHrNotification.js":"55","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\ScheduledMeetings.js":"56","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\TodaysHrMeetings.js":"57"},{"size":500,"mtime":1611989976383,"results":"58","hashOfConfig":"59"},{"size":2351,"mtime":1612609113010,"results":"60","hashOfConfig":"59"},{"size":362,"mtime":499162500000,"results":"61","hashOfConfig":"59"},{"size":186,"mtime":1610014073984,"results":"62","hashOfConfig":"59"},{"size":146,"mtime":1610004479768,"results":"63","hashOfConfig":"59"},{"size":1472,"mtime":1612609455785,"results":"64","hashOfConfig":"59"},{"size":1435,"mtime":1610018632519,"results":"65","hashOfConfig":"59"},{"size":7888,"mtime":1611584488415,"results":"66","hashOfConfig":"59"},{"size":650,"mtime":1610012173011,"results":"67","hashOfConfig":"59"},{"size":3071,"mtime":1610798803506,"results":"68","hashOfConfig":"59"},{"size":193,"mtime":1610030316279,"results":"69","hashOfConfig":"59"},{"size":4100,"mtime":1611387798788,"results":"70","hashOfConfig":"59"},{"size":4614,"mtime":1611551125958,"results":"71","hashOfConfig":"59"},{"size":715,"mtime":1610722989393,"results":"72","hashOfConfig":"59"},{"size":165,"mtime":1610272056535,"results":"73","hashOfConfig":"59"},{"size":4489,"mtime":1611303868515,"results":"74","hashOfConfig":"59"},{"size":1998,"mtime":1611466613264,"results":"75","hashOfConfig":"59"},{"size":167,"mtime":1611306404956,"results":"76","hashOfConfig":"59"},{"size":10319,"mtime":1612510098408,"results":"77","hashOfConfig":"59"},{"size":13108,"mtime":1612509572973,"results":"78","hashOfConfig":"59"},{"size":17826,"mtime":1612509582310,"results":"79","hashOfConfig":"59"},{"size":8191,"mtime":1611928127965,"results":"80","hashOfConfig":"59"},{"size":6509,"mtime":1611398443301,"results":"81","hashOfConfig":"59"},{"size":133,"mtime":1611397999752,"results":"82","hashOfConfig":"59"},{"size":130,"mtime":1611398025639,"results":"83","hashOfConfig":"59"},{"size":134,"mtime":1611397969777,"results":"84","hashOfConfig":"59"},{"size":3588,"mtime":1612543355890,"results":"85","hashOfConfig":"59"},{"size":8008,"mtime":1611550916259,"results":"86","hashOfConfig":"59"},{"size":6088,"mtime":1612609380933,"results":"87","hashOfConfig":"59"},{"size":2426,"mtime":1611743197852,"results":"88","hashOfConfig":"59"},{"size":2131,"mtime":1611749410113,"results":"89","hashOfConfig":"59"},{"size":3006,"mtime":1612609444006,"results":"90","hashOfConfig":"59"},{"size":4657,"mtime":1612543154607,"results":"91","hashOfConfig":"59"},{"size":17328,"mtime":1612507473928,"results":"92","hashOfConfig":"59"},{"size":636,"mtime":1611916955771,"results":"93","hashOfConfig":"59"},{"size":4639,"mtime":1611931277856,"results":"94","hashOfConfig":"59"},{"size":300,"mtime":1611940683882,"results":"95","hashOfConfig":"59"},{"size":6961,"mtime":1612608966874,"results":"96","hashOfConfig":"59"},{"size":1483,"mtime":1611990239340,"results":"97","hashOfConfig":"59"},{"size":8529,"mtime":1612425226071,"results":"98","hashOfConfig":"59"},{"size":689,"mtime":1612202853171,"results":"99","hashOfConfig":"59"},{"size":7573,"mtime":1612438735553,"results":"100","hashOfConfig":"59"},{"size":8008,"mtime":1612592562727,"results":"101","hashOfConfig":"59"},{"size":165,"mtime":1612432658557,"results":"102","hashOfConfig":"59"},{"size":12083,"mtime":1612461122583,"results":"103","hashOfConfig":"59"},{"size":2924,"mtime":1612460466305,"results":"104","hashOfConfig":"59"},{"size":174,"mtime":1612432546823,"results":"105","hashOfConfig":"59"},{"size":8101,"mtime":1612593332513,"results":"106","hashOfConfig":"59"},{"size":8097,"mtime":1612593400284,"results":"107","hashOfConfig":"59"},{"size":2987,"mtime":1612460672598,"results":"108","hashOfConfig":"59"},{"size":647,"mtime":1612542172598,"results":"109","hashOfConfig":"59"},{"size":177,"mtime":1612591442845,"results":"110","hashOfConfig":"59"},{"size":171,"mtime":1612591386196,"results":"111","hashOfConfig":"59"},{"size":171,"mtime":1612591471901,"results":"112","hashOfConfig":"59"},{"size":180,"mtime":1612591413406,"results":"113","hashOfConfig":"59"},{"size":7890,"mtime":1612606559752,"results":"114","hashOfConfig":"59"},{"size":8097,"mtime":1612593436888,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"1alpmih",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"118"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"118"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"118"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"118"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"118"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"118"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"118"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"118"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"118"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"118"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":2,"source":"169","usedDeprecatedRules":"118"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"118"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"118"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"118"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"118"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"118"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"118"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"118"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"118"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"118"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"118"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"118"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\index.js",[],["253","254"],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\App.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\reportWebVitals.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\CenteredTabs\\ActiveUsers.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\Icons\\Icons.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\MenuBar\\Menu.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\PopUpBox\\PopUp.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\RECTable\\Table.js",["255","256","257","258"],"import React, { useState, useEffect } from 'react';\r\nimport {makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport InputFields from '../InputFieldsUser/AddUser';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport DataService from \"../../Service/service\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport SearchAndAdd from \"./SearchAndAdd\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport UpdateProfileForm from \"../FormikValidationForm/UpdateProfileForm\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n      },\r\n      container: {\r\n        maxHeight: 440,\r\n      },\r\n      modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n}));\r\n\r\nexport default function BasicTable() {\r\nconst classes = useStyles();\r\nconst [open, setOpen] = React.useState(false);\r\nconst [getUser,setUserData]=useState([]);\r\nconst [getData,setData]=useState('');\r\nconst[getfName,setfName]=useState('');\r\nconst [openDilogBox, setOpenDilogBox] = React.useState(false);\r\nconst [state, setState] = React.useState({\r\n  open: false,\r\n  vertical: 'top',\r\n  horizontal: 'center',\r\n});\r\n\r\nconst { vertical, horizontal} = state;\r\nconst [getUserName,setUserName]=useState('');\r\nconst [getUserId,setUserId]=useState('');\r\nconst handleDeleteBoxOpen = (e) => {\r\n  setOpenDilogBox(true);\r\n  setUserName(e.firstName);\r\n  setUserId(e.id);\r\n};\r\n\r\nconst handleDeleteBoxClose = () => {\r\n  setOpenDilogBox(false);\r\n if(getUserName===getfName){\r\n  handleDelete(getUserId);\r\n }else{\r\n   alert(\"please check the user name\")\r\n }\r\n};\r\nconst handleClose = () => {\r\nsetOpen(false);\r\n};\r\n\r\nconst handleDelete=(id)=>{\r\n  deleteUser(id);\r\n  retrieveUsers();\r\n    console.log(\"user deleted with id:=\",id);\r\n}\r\n\r\nconst [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n\r\nconst handleClickSnackbar = () => {\r\n  setOpenSnackbar(true);\r\n};\r\n\r\nconst handleCloseSnackbar = (event, reason) => {\r\n  if (reason === 'clickaway') {\r\n    return;\r\n  }\r\n\r\n  setOpenSnackbar(false);\r\n};\r\n\r\nconst handleEdit=(e)=>{\r\nconsole.log(\"edit\",e);\r\nsetData(e);\r\nsetOpen(true);\r\n}\r\n\r\nconst deleteUser =(id)=>{\r\n DataService.remove(id);\r\n retrieveUsers();\r\n console.log(getUser)\r\n handleClickSnackbar();\r\n}\r\n\r\nuseEffect(() => {\r\n retrieveUsers();\r\n  },[]);\r\n\r\n  const retrieveUsers = async () => {\r\n   await DataService.getAll()\r\n      .then(response => {\r\n         setUserData(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  const [getSearch,setSearch]=useState([]);\r\n  const search=(searchTerm)=>{\r\n    if(searchTerm==''){\r\nretrieveUsers();\r\n    }\r\n    else{\r\n      DataService.search(searchTerm).then(responce=>{\r\n        setSearch(responce.data);\r\n        setUserData(responce.data);\r\n        console.log(getSearch)\r\n       \r\n    });\r\n    }\r\n    }\r\nreturn (\r\n<>\r\n<TextField label=\"Search...\" variant=\"outlined\"\r\n        onChange={e=> search(e.target.value)} />\r\n        {/* <Button color=\"primary\" onClick={handlesearch}>SERACH</Button> */}\r\n<div className={classes.root}>\r\n      <Snackbar  anchorOrigin={{ vertical, horizontal }} key={vertical + horizontal}\r\n       open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n        <Alert onClose={handleCloseSnackbar} severity=\"success\">\r\n         User status become inActive now!\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n<TableContainer component={Paper}>\r\n<SearchAndAdd/>\r\n<Table stickyHeader aria-label=\"sticky table\">\r\n<TableHead>\r\n<TableRow>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>ID</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>FIRST NAME</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>LAST NAME</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>STATUS</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>DOB</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>JOIN DATE</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>EMAIL</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>ACTION</TableCell>\r\n\r\n</TableRow>\r\n</TableHead>\r\n<TableBody>\r\n{getUser.map((row) => (\r\n  <>\r\n  {row.status==='Active' &&\r\n  <TableRow key={row.id}  hover role=\"checkbox\" tabIndex={-1}>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.id}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.firstName}</TableCell>\r\n<TableCell style={{ minWidth: row.minWidth}}  align=\"center\">{row.lastName}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.status}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.dob}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.createdAt}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.email}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">\r\n<Button onClick={() => handleEdit(row)}><EditIcon style={{color:'blue'}} /></Button>\r\n<Button onClick={() => handleDeleteBoxOpen(row)}><DeleteIcon style={{color:'Orange'}} /></Button>\r\n</TableCell>\r\n</TableRow>\r\n}\r\n</>\r\n\r\n)\r\n\r\n)}\r\n\r\n</TableBody>\r\n\r\n</Table>\r\n</TableContainer>\r\n\r\n<div>\r\n<Modal\r\naria-labelledby=\"transition-modal-title\"\r\naria-describedby=\"transition-modal-description\"\r\nclassName={classes.modal}\r\nopen={open}\r\nonClose={handleClose}\r\ncloseAfterTransition\r\nBackdropComponent={Backdrop}\r\nBackdropProps={{\r\ntimeout: 500,\r\n}}\r\n>\r\n<Fade in={open}>\r\n<div className={classes.paper}>\r\n<UpdateProfileForm data={getData}/>\r\n</div>\r\n</Fade>\r\n\r\n</Modal>\r\n</div>\r\n\r\n<Dialog open={openDilogBox} onClose={handleDeleteBoxClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">YOU LIKE TO DELETE THIS USER</DialogTitle>\r\n        {getUserName}\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"USER NAME\"\r\n            type=\"email\"\r\n            fullWidth\r\n            onChange={e => setfName(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteBoxClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteBoxClose} color=\"primary\">\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n</>\r\n);\r\n}","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\DashBoard\\SettingsUserPage\\UserSettings.js",["259","260","261","262","263","264"],"import React from 'react';\r\nimport CenteredTab from \"../../components/CenteredTabs/ActiveUsers\";\r\nimport Icons from \"../../components/Icons/Icons\";\r\nimport MenuBar from \"../../components/MenuBar/Menu\";\r\nimport PopUp from \"../../components/PopUpBox/PopUp\";\r\nimport RECTable from \"../../components/RECTable/Table\";\r\nimport User from \"../../components/CenteredTabs/User\";\r\nimport ActiveUser from\"../../components/CenteredTabs/ActiveUsers\";\r\nimport InActiveUser from\"../../components/CenteredTabs/inActiveUser\";\r\nconst UserSettings=()=>{\r\n    return(\r\n        <>\r\n        <MenuBar/>\r\n        <User/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserSettings;","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\CenteredTabs\\User.js",["265","266"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ActiveUser from \"./ActiveUsers\";\r\nimport InActiveUser from \"./inActiveUser\";\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Link from '@material-ui/core/Link';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport MenuBar from \"../MenuBar/Menu\";\r\nimport UserSettings from \"../../DashBoard/SettingsUserPage/UserSettings\";\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function User() {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  // function handleClick() {\r\n  //   history.push(\"/User\");\r\n  //   console.info('You clicked a breadcrumb.');\r\n  // }\r\n\r\n  // function handleClick1(event){\r\n  //   history.push('/Menu')\r\n  // }\r\n\r\n  return (\r\n    <div className={classes.root} style={{backgroundColor:'LightGray'}}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n      <Breadcrumbs aria-label=\"breadcrumb\">\r\n      <Link color=\"inherit\" href=\"/Menu\">\r\n        Menu\r\n      </Link>\r\n      <Link color=\"inherit\" href=\"/\">\r\n        Users\r\n      </Link>\r\n    </Breadcrumbs>\r\n        <Tabs\r\n          value={value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n        >\r\n          <Tab label=\"MANAGE ACTIVE USER\" {...a11yProps(0)} />\r\n          <Tab label=\"INACTIVE USER\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <ActiveUser/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <InActiveUser/>\r\n      </TabPanel>\r\n      <Router>\r\n    <Switch>\r\n        <Route exact path=\"/Menu\" component={MenuBar} />\r\n    </Switch>\r\n</Router>\r\n    </div>\r\n   \r\n  );\r\n}\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\CenteredTabs\\inActiveUser.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\InputFieldsUser\\AddUser.js",["267","268","269","270","271"],"import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DataService from \"../../Service/service\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ValidationTextFields({data}) {\r\n  const classes = useStyles();\r\n  const [fName, setfName] = useState(data.firstName);\r\n  const [lName, setlName] = useState(data.lastName);\r\n  const [dob, setdob] = useState(data.dob);\r\n  const [email, setEmail] = useState(data.email);\r\n  const [adhar,setAdhar] =useState(data.adhar);\r\n  const [status,setstatus]=useState(data.status);\r\nconst [id,setId]=useState(data.id);\r\nconst [createdAt,setcreatedAt]=useState(data.createdAt);\r\nconst [updatedAt,setupdatedAt]=useState(data.updatedAt);\r\nconst [state, setState] = React.useState({\r\n  open: false,\r\n  vertical: 'top',\r\n  horizontal: 'center',\r\n});\r\nconst { vertical, horizontal} = state;\r\n  const submitValue = () => {\r\n    const frmdetails = {\r\n       'id':id,\r\n        'firstName' : fName,\r\n        'lastName' : lName,\r\n        'dob' : dob,\r\n        'email' : email,\r\n        'adhar':adhar,\r\n        'status':status,\r\n        'createdAt':createdAt,\r\n        'updatedAt':updatedAt\r\n    }\r\n    console.log(frmdetails);\r\n    updateUser(id,frmdetails);\r\n}\r\n\r\nconst updateUser=(id,data)=>{\r\n  console.log(id+\"/////\"+JSON.stringify(data))\r\n  DataService.update(id,JSON.stringify(data));\r\n  handleClick()\r\n}\r\n\r\nconst Close = () => {\r\n  window.location=\"/\"\r\n}\r\n\r\nconst [open, setOpen] = React.useState(false);\r\n\r\nconst handleClick = () => {\r\n  setOpen(true);\r\n};\r\n\r\nconst handleClose = (event, reason) => {\r\n  if (reason === 'clickaway') {\r\n    return;\r\n  }\r\n\r\n  setOpen(false);\r\n};\r\n  return (\r\n    <>\r\n     <div className={classes.root}>\r\n      <Snackbar open={open} anchorOrigin={{ vertical, horizontal }} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          user information updated successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <div>\r\n      <TextField\r\n          label=\"FirstName\"\r\n          id=\"outlined-size-small\"\r\n          defaultValue={data.firstName}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          onChange={e => setfName(e.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"lastName\"\r\n          id=\"outlined-size-small\"\r\n          defaultValue={data.lastName}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          onChange={e => setlName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n      <TextField\r\n          label=\"DOB\"\r\n          id=\"outlined-size-small\"\r\n          defaultValue={data.dob}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          onChange={e => setdob(e.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"Email Id\"\r\n          id=\"outlined-size-small\"\r\n          defaultValue={data.email}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n      <TextField\r\n          label=\"adhar\"\r\n          id=\"outlined-size-small\"\r\n          defaultValue={data.adhar}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          onChange={e => setAdhar(e.target.value)}\r\n        />\r\n      </div>\r\n<Button color=\"primary\" onClick={submitValue}>SAVE</Button>\r\n<Button color=\"secondary\" onClick={Close}>CANCEL</Button>\r\n    </form>\r\n    </>\r\n  );\r\n}\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\RECTable\\Table1.js",["272","273","274","275","276","277","278","279"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport InputFields from '../InputFieldsUser/AddUser';\r\nimport TimelapseIcon from '@material-ui/icons/Timelapse';\r\nimport DataService from \"../../Service/service\";\r\nimport SearchAndAdd from \"./SearchAndAdd\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n      },\r\n      container: {\r\n        maxHeight: 440,\r\n      },\r\n      modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n\r\n}));\r\n\r\nexport default function BasicTable() {\r\nconst classes = useStyles();\r\nconst [open, setOpen] = React.useState(false);\r\nconst [getUser,setUserData]=useState([]);\r\nconst [getData,setData]=useState('');\r\nconst handleOpen = () => {\r\nsetOpen(true);\r\n};\r\n\r\n\r\nconst handleClose = () => {\r\nsetOpen(false);\r\n};\r\n\r\nconst handleDelete=(id)=>{\r\n  deleteUser(id);\r\n    console.log(\"user deleted with id:=\",id);\r\n    \r\n}\r\n\r\nconst handleEdit=(e)=>{\r\nconsole.log(\"edit\",e);\r\nsetData(e);\r\nsetOpen(true);\r\n}\r\n\r\nconst deleteUser =(id)=>{\r\n DataService.remove(id);\r\n console.log(getUser)\r\n}\r\n\r\n\r\nuseEffect(() => {\r\n retrieveUsers();\r\n  },[]);\r\n\r\n  const retrieveUsers = async () => {\r\n   await DataService.getAll()\r\n      .then(response => {\r\n         setUserData(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\nreturn (\r\n<>\r\n<TableContainer component={Paper}>\r\n<Table stickyHeader aria-label=\"sticky table\">\r\n<TableHead>\r\n<TableRow>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>ID</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>FIRST NAME</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>LAST NAME</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>STATUS</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>DOB</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>JOIN DATE</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>EMAIL</TableCell>\r\n<TableCell align=\"center\" style={{fontWeight: \"bold\",color: \"blue\"}}>ACTION</TableCell>\r\n\r\n</TableRow>\r\n</TableHead>\r\n<TableBody>\r\n{getUser.map((row) => (\r\n  <>\r\n  {row.status==='inActive'&&\r\n<TableRow key={row.id}  hover role=\"checkbox\" tabIndex={-1}>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.id}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.firstName}</TableCell>\r\n<TableCell style={{ minWidth: row.minWidth}}  align=\"center\">{row.lastName}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.status}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.dob}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.createdAt}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">{row.email}</TableCell>\r\n<TableCell  style={{ minWidth: row.minWidth}} align=\"center\">\r\n<Button onClick={() => handleEdit(row)}><TimelapseIcon style={{color:'blue'}} /></Button>\r\n</TableCell>\r\n</TableRow>\r\n}\r\n</>\r\n))}\r\n</TableBody>\r\n\r\n</Table>\r\n</TableContainer>\r\n\r\n<div>\r\n<Modal\r\naria-labelledby=\"transition-modal-title\"\r\naria-describedby=\"transition-modal-description\"\r\nclassName={classes.modal}\r\nopen={open}\r\nonClose={handleClose}\r\ncloseAfterTransition\r\nBackdropComponent={Backdrop}\r\nBackdropProps={{\r\ntimeout: 500,\r\n}}\r\n>\r\n<Fade in={open}>\r\n<div className={classes.paper}>\r\nTime Tracker for inActive user\r\n</div>\r\n</Fade>\r\n</Modal>\r\n</div>\r\n\r\n</>\r\n);\r\n}","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\service.js",["280"],"import http from \"./ConnectionAxios\";\r\n\r\n// async function  getAll(){\r\n//    return await http.get(\"/users\");\r\n// };\r\n\r\nconst getAll = async () => {\r\n\r\n  return await http.get(\"/users\");\r\n}\r\n\r\nconst get = async(id) => {\r\n  return await http.get(`/tutorials/${id}`);\r\n};\r\n\r\nconst create = async(data) => {\r\n  return await http.post(\"/create\", data);\r\n};\r\n\r\nconst update = async(id, data) => {\r\n  return await  http.put(`/update/${id}`, data);\r\n};\r\n\r\nconst remove = async(id) => {\r\n  return await http.delete(`/users/${id}`);\r\n};\r\n\r\n\r\nconst search = async(keyword) => {\r\n  return await http.get(`/search?keyword=${keyword}`);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  get,\r\n  create,\r\n  update,\r\n  remove,\r\n  search\r\n};\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\ConnectionAxios.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\RECTable\\AddUserTable.js",["281","282","283","284"],"import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DataService from \"../../Service/service\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CreateUser() {\r\n  const classes = useStyles();\r\n  const [fName, setfName] = useState('');\r\n  const [lName, setlName] = useState('');\r\n  const [dob, setdob] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [adhar,setAdhar] =useState('');\r\n  const [status,setStatus]=useState('Active');\r\nconst [createdAt,setcreatedAt]=useState(new Date());\r\nconst [updatedAt,setupdatedAt]=useState(new Date());\r\nconst [state, setState] = React.useState({\r\n  open: false,\r\n  vertical: 'top',\r\n  horizontal: 'center',\r\n});\r\n\r\nconst { vertical, horizontal} = state;\r\n  const submitValue = () => {\r\n    const frmdetails = {\r\n        'firstName' : fName,\r\n        'lastName' : lName,\r\n        'dob' : dob,\r\n        'email' : email,\r\n        'adhar':adhar,\r\n        'status':status,\r\n        'createdAt':createdAt,\r\n        'updatedAt':updatedAt\r\n    }\r\n    console.log(frmdetails);\r\n    createUser(frmdetails);\r\n    setOpen(false);\r\n}\r\n\r\nconst createUser=(data)=>{\r\n    console.log(data);\r\nDataService.create(data);\r\nhandleClick();\r\n}\r\n\r\nconst Close = () => {\r\n  window.location=\"/\"\r\n}\r\n\r\nconst [open, setOpen] = React.useState(false);\r\n\r\nconst handleClick = () => {\r\n  setOpen(true);\r\n};\r\n\r\nconst handleClose = (event, reason) => {\r\n  if (reason === 'clickaway') {\r\n    return;\r\n  }\r\n\r\n  setOpen(false);\r\n};\r\n\r\n  return (\r\n    <>\r\n     <div className={classes.root}>\r\n      <Snackbar open={open} anchorOrigin={{ vertical, horizontal }} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          new user created successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <div>\r\n      <TextField\r\n          label=\"FirstName\"\r\n          id=\"outlined-size-small\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          onChange={e => setfName(e.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"lastName\"\r\n          id=\"outlined-size-small\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          onChange={e => setlName(e.target.value)}\r\n        />\r\n           <TextField\r\n          label=\"Address\"\r\n          id=\"outlined-size-small\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          // onChange={e => setlName(e.target.value)}\r\n        />\r\n        \r\n      </div>\r\n      <div>\r\n      <TextField\r\n        id=\"date\"\r\n        label=\"DOB\"\r\n        type=\"date\"\r\n        className={classes.textField}\r\n        onChange={e => setdob(e.target.value)}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n        <TextField\r\n          label=\"Email Id\"\r\n          id=\"outlined-size-small\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n           <TextField\r\n          label=\"City\"\r\n          id=\"outlined-size-small\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          // onChange={e => setlName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n      <TextField\r\n          label=\"Adhar number\"\r\n          id=\"outlined-size-small\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          onChange={e => setAdhar(e.target.value)}\r\n        />\r\n           <TextField\r\n          label=\"Phone No\"\r\n          id=\"outlined-size-small\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          // onChange={e => setlName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div style={{float:'right'}}>\r\n<Button color=\"primary\" onClick={submitValue}>SAVE</Button>\r\n<Button color=\"secondary\" onClick={Close}>CANCEL</Button>\r\n</div>\r\n    </form>\r\n    \r\n    </>\r\n  );\r\n}\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\RECTable\\SearchAndAdd.js",["285","286","287","288","289","290","291"],"import React, { useState, useEffect } from 'react';\r\nimport {fade, makeStyles } from '@material-ui/core/styles';\r\nimport CreateUser from \"./AddUserTable\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport DataService from \"../../Service/service\";\r\nimport Table from \"./Table\";\r\nimport RegistrationForm from \"../FormikValidationForm/RegistrationForm\";\r\nconst useStyles = makeStyles((theme) => ({\r\n      modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n}));\r\n\r\nconst SearchAndAdd=()=>{\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n      const handleOpen = () => {\r\n        setOpen(true);\r\n        };\r\n\r\n        const handleClose= () => {\r\n            setOpen(false);\r\n            };\r\n\r\n\r\n    return(\r\n        <>\r\n        <div style={{float:'left',margin:'20px'}}>\r\nREGISTERED USER\r\n</div>\r\n<div style={{float:'right',margin:'20px'}}>\r\n<Button color=\"primary\"><GetAppIcon/></Button>\r\n<Button color=\"primary\" onClick={handleOpen}>\r\n<AddIcon/>\r\nADD USER</Button>\r\n</div>\r\n\r\n<div>\r\n<Modal\r\naria-labelledby=\"transition-modal-title\"\r\naria-describedby=\"transition-modal-description\"\r\nclassName={classes.modal}\r\nopen={open}\r\nonClose={handleClose}\r\ncloseAfterTransition\r\nBackdropComponent={Backdrop}\r\nBackdropProps={{\r\ntimeout: 500,\r\n}}\r\n>\r\n<Fade in={open}>\r\n<div className={classes.paper}>\r\n<RegistrationForm/>\r\n</div>\r\n</Fade>\r\n\r\n</Modal>\r\n</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchAndAdd;","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\UserLandingPage\\UserInterviewForm.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\UserLandingPage\\DocumentForm.js",["292","293","294","295","296","297","298","299","300","301","302","303","304","305","306"],"import React, { useState ,useEffect,useReducer} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport axios from \"axios\";\r\nimport Card from '@material-ui/core/Card';\r\nimport * as yup from \"yup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport EducationDetails from \"./EducationSkillsForm\";\r\nimport UserDeatils from \"./UserDeatilsForm\";\r\nimport { Formik, Form, Field, ErrorMessage  } from \"formik\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nlet Schema = yup.object().shape({\r\n  ProjectName: yup.string()\r\n  .min(2, 'Too Short!')\r\n     .max(70, 'Too Long!'),\r\n  ProjectDescription: yup.string()\r\n  .min(20, 'Too Short!')\r\n     .max(200, 'Too Long!'),\r\n     WebSiteLink: yup.string()\r\n     .min(5, 'Too Short!')\r\n        .max(200, 'Too Long!'),\r\n        Document: yup.string()\r\n        .min(20, 'Too Short!')\r\n           .max(200, 'Too Long!')\r\n           .required(\"Documetn inforamtion is required.\"),\r\n           experience: yup.number()\r\n           .min(0, 'Too Short!')\r\n              .max(5, 'Too Long!')\r\n              .required(\"experience is required.\"),\r\n              termsAndCondition: yup.string().oneOf(\r\n                [\"true\"],\r\n                \"BEFORE GOING TO NEXT STEP SAVE THE DATA\"\r\n              ),\r\n})\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        minWidth: 275,\r\n      },\r\n    },\r\n  }));\r\n\r\nconst  UserDeatilsForm=()=>{\r\n    const classes = useStyles();\r\n    const [file, setFile] = useState(null);\r\n\r\n\r\n\r\n  const UPLOAD_ENDPOINT =\r\n    \"http://localhost:8080/file/uploadFile\";\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    //if await is removed, console log will be called before the uploadFile() is executed completely.\r\n    //since the await is added, this will pause here then console log will be called\r\n    let res = await uploadFile(file);\r\n \r\n  };\r\n\r\n  const uploadFile = async file => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    return await axios.post(UPLOAD_ENDPOINT, formData).then(res=>{\r\n      console.log(res);\r\n    });\r\n  };\r\n\r\n  const handleOnChange = e => {\r\n    console.log(e.target.files[0]);\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const [fields, setFields] = useState([{ value: null }]);\r\n  const [checked, setChecked] = React.useState(true);\r\n\r\n  const handleChangeCheck = (event) => {\r\n    setChecked(event.target.checked);\r\n  };\r\n\r\n  function handleChange(i, event) {\r\n    const values = [...fields];\r\n    values[i].value = event.target.value;\r\n    setFields(values);\r\n  }\r\n\r\n  function handleAdd() {\r\n    const values = [...fields];\r\n    values.push({ value: null });\r\n    setFields(values);\r\n  }\r\n\r\n  function handleRemove(i) {\r\n    const values = [...fields];\r\n    values.splice(i, 1);\r\n\r\n    setFields(values);\r\n  }\r\n\r\n\r\n  const[userdocument,setDocument]=useState(()=>{\r\n    let storge=JSON.parse(localStorage.getItem('document'));\r\n    return storge?storge:[];\r\n  });\r\n    return(\r\n<>\r\n<div style={{marginTop:\"20px\"}}>\r\n<form onSubmit={handleSubmit}>\r\n      <Typography>UPLOAD RESUME</Typography>\r\n      <Button\r\n  variant=\"contained\"\r\n  component=\"label\"\r\n>\r\n  Upload File\r\n  <input type=\"file\" onChange={handleOnChange} />\r\n</Button>\r\n     \r\n      <Button color=\"secondary\"\r\n              variant=\"contained\"\r\n              color=\"primary\" type=\"submit\">Upload File</Button>\r\n    </form>\r\n              \r\n            </div>\r\n            <Typography align='left' style={{margin:'20px',fontSize:'20px',color:'black'}}>ADD FIELDS</Typography>\r\n            <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\" type=\"button\" onClick={() => handleAdd()}>\r\n        +\r\n      </Button>\r\n            {fields.map((field, idx) => {\r\n        return (\r\n          <div key={`${field}-${idx}`}>\r\n        <Formik\r\n          initialValues={{\r\n         ProjectName:'',\r\n         ProjectDescription:'',\r\n         WebSiteLink:'',\r\n         Document:'',\r\n         LastUpdate:new Date(),\r\n         experience:'',\r\n         termsAndCondition: false,\r\n          }}\r\n          validationSchema={Schema}\r\n          onSubmit={values => {\r\n            console.log(values)\r\n       \r\n            localStorage.setItem('document',JSON.stringify({...values}));\r\n            \r\n          }}\r\n        >\r\n          {({ errors, handleChange, touched }) => (\r\n            <Form className={classes.form}>\r\n                <Card className={classes.root} style={{margin:'20px'}}>\r\n                <CardContent>\r\n              <Grid container spacing={2}>  \r\n              <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.experience && touched.experience}\r\n                    autoComplete=\"experience\"\r\n                    name=\"experience\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdocument.experience}\r\n                    onChange={handleChange}\r\n                    id=\"experience\"\r\n                    label=\"experience\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.experience && touched.experience\r\n                        ? errors.experience\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n \r\n        <Grid item xs={12} sm={6}>\r\n        <TextField\r\n                    error={errors.ProjectName && touched.ProjectName}\r\n                    autoComplete=\"ProjectName\"\r\n                    name=\"ProjectName\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdocument.ProjectName}\r\n                    onChange={handleChange}\r\n                    id=\"ProjectName\"\r\n                    label=\"ProjectName\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.ProjectName && touched.ProjectName\r\n                        ? errors.ProjectName\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n             <Grid container spacing={3} style={{marginTop:'20px'}}>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n                    error={errors.ProjectDescription && touched.ProjectDescription}\r\n                    autoComplete=\"ProjectDescription\"\r\n                    name=\"ProjectDescription\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdocument.ProjectDescription}\r\n                    onChange={handleChange}\r\n                    id=\"ProjectDescription\"\r\n                    label=\"ProjectDescription\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.ProjectDescription && touched.ProjectDescription\r\n                        ? errors.ProjectDescription\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.WebSiteLink && touched.WebSiteLink}\r\n                    autoComplete=\"WebSiteLink\"\r\n                    name=\"WebSiteLink\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdocument.WebSiteLink}\r\n                    onChange={handleChange}\r\n                    id=\"WebSiteLink\"\r\n                    label=\"URL\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.WebSiteLink && touched.WebSiteLink\r\n                        ? errors.WebSiteLink\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.Document && touched.Document}\r\n                    autoComplete=\"Document\"\r\n                    name=\"Document\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdocument.Document}\r\n                    onChange={handleChange}\r\n                    id=\"Document\"\r\n                    label=\"Document INFORAMTION\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.Document && touched.Document\r\n                        ? errors.Document\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n      </Grid>\r\n              \r\n                </Grid>\r\n                </CardContent>\r\n                </Card>\r\n                {/* ------- */}\r\n        \r\n              {/* <Button\r\n                type=\"submit\"\r\n            \r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Save\r\n              </Button> */}\r\n            \r\n       <FormControlLabel\r\n                control={<Field as={Checkbox} name=\"termsAndCondition\" \r\n                type=\"submit\"\r\n                className={classes.submit}\r\n                checked={checked}\r\n                />}\r\n                label=\" Verfiy the form and click this \"\r\n                helperText={<ErrorMessage name=\"termsAndCondition\" />}\r\n                \r\n              />\r\n              <FormHelperText>\r\n                <ErrorMessage name=\"termsAndCondition\" />\r\n              </FormHelperText>\r\n            </Form>\r\n            \r\n          )}\r\n        </Formik>\r\n      \r\n        <Button\r\n                type=\"submit\"\r\n            \r\n                variant=\"contained\"\r\n                color=\"primary\" type=\"button\" onClick={() => handleRemove(idx)}>\r\n              X\r\n            </Button>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n</>\r\n    )\r\n}\r\nexport default UserDeatilsForm;","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\UserLandingPage\\UserDeatilsForm.js",["307","308","309","310","311","312","313","314","315","316","317","318","319","320"],"import React, { useState ,useEffect,useReducer} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\r\nimport Card from '@material-ui/core/Card';\r\nimport * as yup from \"yup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Formik, Form, Field, ErrorMessage  } from \"formik\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\nconst addressRegex = /^[a-zA-Z0-9][a-zA-Z0-9 .,-]*$/;\r\n\r\nlet Schema = yup.object().shape({\r\n  firstName: yup.string()\r\n  .min(2, 'Too Short!')\r\n     .max(70, 'Too Long!')\r\n     .required(\"This field is required.\"),\r\n  lastName: yup.string()\r\n  .min(1, 'Too Short!')\r\n     .max(20, 'Too Long!')\r\n     .required(\"This field is required.\"),\r\n  email: yup\r\n    .string()\r\n    .email()\r\n    .required(\"This field is required.\"),\r\n    // dob:yup.string().test(\r\n    //     \"dob\",\r\n    //     \"Age must be above 18\",\r\n    //     value => {\r\n    //       return moment().diff(moment(value),'years') >= 18;\r\n    //     }\r\n    //   ),\r\n      phoneNumber: yup.string().matches(phoneRegExp, 'Phone number is not valid'),\r\n      summary: yup.string()\r\n      .min(10, 'Too Short!')\r\n         .max(250, 'Too Long!')\r\n         .required(\"Please tell about yourself\"),\r\n\r\n         street1: yup.string()\r\n         .min(2, \"Must be at least ${min} characters.\")\r\n         .max(60, \"Must be no more than ${max} characters.\")\r\n         .matches(\r\n           addressRegex,\r\n           \"May only contain hyphens, periods, commas or alphanumeric characters.\"\r\n         )\r\n         .required(\"Required.\"),\r\n       street2: yup.string()\r\n         .nullable()\r\n         .max(60, \"Must be no more than ${max} characters.\")\r\n         .matches(addressRegex, {\r\n           excludeEmptyString: true,\r\n           message:\r\n             \"May only contain hyphens, periods, commas or alphanumeric characters.\"\r\n         }),\r\n       city: yup.string()\r\n         .max(20, \"Must be no more than ${max} characters.\")\r\n         .matches(\r\n           addressRegex,\r\n           \"May only contain hyphens, periods, commas or alphanumeric characters.\"\r\n         )\r\n         .required(\"Required.\"),\r\n       state: yup.string().required(\"Required.\"),\r\n       zipCode: yup.number()\r\n         .min(501, \"Invalid zip code.\")\r\n         .max(999501, \"Invalid zip code.\")\r\n         .required(\"Required.\"),\r\n         termsAndCondition: yup.string().oneOf(\r\n          [\"true\"],\r\n          \"BEFORE GOING TO NEXT STEP SAVE THE DATA\"\r\n        ),   \r\n\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        minWidth: 275,\r\n      },\r\n    },\r\n  }));\r\n\r\nconst  UserDeatilsForm=()=>{\r\n    const classes = useStyles();\r\n\r\n\r\n    const [checked, setChecked] = React.useState(true);\r\n\r\n    const handleChangeCheck = (event) => {\r\n      setChecked(event.target.checked);\r\n    };\r\n\r\n\r\n\r\n    const[userdeatils,setuserdeatils]=useState(()=>{\r\n      let storge=JSON.parse(localStorage.getItem('userdetails'));\r\n      return storge?storge:[];\r\n    });\r\n\r\n    return(\r\n<>\r\n<Typography align='left' style={{margin:'20px',fontSize:'20px',color:'black'}}>Basic Details</Typography>\r\n        <Formik\r\n          initialValues={{\r\n          firstName:userdeatils.firstName,\r\n          lastName:'',\r\n          email:'',\r\n          phoneNumber:'',\r\n          summary:'',\r\n          dataofappl:new Date(),\r\n          street1:'',\r\n          street2:'',\r\n          city:'',\r\n          state:'',\r\n          zipCode:'',\r\n          termsAndCondition: false,\r\n          }}\r\n          validationSchema={Schema}\r\n          onSubmit={values => {\r\n            console.log(values)\r\n            setuserdeatils({...values});\r\n            localStorage.setItem('userdetails',JSON.stringify({...values}))\r\n          }}\r\n        >\r\n          {({ errors, handleChange, touched }) => (\r\n            <Form className={classes.form}>\r\n                <Card className={classes.root} style={{margin:'20px'}}>\r\n                <CardContent>\r\n              <Grid container spacing={2}>   \r\n                <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    error={errors.firstName && touched.firstName}\r\n                    autoComplete=\"firstName\"\r\n                    name=\"firstName\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdeatils.firstName}\r\n                    onChange={handleChange}\r\n                    id=\"firstName\"\r\n                    label=\"firstName\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.firstName && touched.firstName\r\n                        ? errors.firstName\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n        <TextField\r\n                    error={errors.lastName && touched.lastName}\r\n                    autoComplete=\"lastName\"\r\n                    name=\"lastName\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdeatils.lastName}\r\n                    onChange={handleChange}\r\n                    id=\"lastName\"\r\n                    label=\"lastName\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.lastName && touched.lastName\r\n                        ? errors.lastName\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n             <Grid container spacing={3} style={{marginTop:'20px'}}>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n                    error={errors.email && touched.email}\r\n                    autoComplete=\"email\"\r\n                    name=\"email\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdeatils.email}\r\n                    onChange={handleChange}\r\n                    id=\"email\"\r\n                    label=\"email\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.email && touched.email\r\n                        ? errors.email\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.phoneNumber && touched.phoneNumber}\r\n                    autoComplete=\"phoneNumber\"\r\n                    name=\"phoneNumber\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdeatils.phoneNumber}\r\n                    onChange={handleChange}\r\n                    id=\"phoneNumber\"\r\n                    label=\"phoneNumber\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.phoneNumber && touched.phoneNumber\r\n                        ? errors.phoneNumber\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.summary && touched.summary}\r\n                    autoComplete=\"summary\"\r\n                    name=\"summary\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdeatils.summary}\r\n                    onChange={handleChange}\r\n                    id=\"summary\"\r\n                    label=\"summary\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.summary && touched.summary\r\n                        ? errors.summary\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n      </Grid>\r\n              \r\n                </Grid>\r\n                </CardContent>\r\n                </Card>\r\n                <Typography align='left' style={{margin:'20px',fontSize:'20px',color:'black'}}>\r\n                  Address Details</Typography>\r\n                  <Card className={classes.root} style={{margin:'20px'}}>\r\n                <CardContent>\r\n              <Grid container spacing={2}>   \r\n                <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    error={errors.street1 && touched.street1}\r\n                    autoComplete=\"street1\"\r\n                    name=\"street1\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdeatils.street1}\r\n                    onChange={handleChange}\r\n                    id=\"street1\"\r\n                    label=\"street1\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.street1 && touched.street1\r\n                        ? errors.street1\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n        <TextField\r\n                    error={errors.street2 && touched.street2}\r\n                    autoComplete=\"street2\"\r\n                    name=\"street2\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdeatils.street2}\r\n                    onChange={handleChange}\r\n                    id=\"street2\"\r\n                    label=\"street2\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.street2 && touched.street2\r\n                        ? errors.street2\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n             <Grid container spacing={3} style={{marginTop:'20px'}}>\r\n        <Grid item xs={12} sm={4}>\r\n      \r\n          <TextField\r\n                    error={errors.city && touched.city}\r\n                    autoComplete=\"city\"\r\n                    name=\"city\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdeatils.city}\r\n                    onChange={handleChange}\r\n                    id=\"city\"\r\n                    label=\"city\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.city && touched.city\r\n                        ? errors.city\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.state && touched.state}\r\n                    autoComplete=\"state\"\r\n                    name=\"state\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={userdeatils.state}\r\n                    onChange={handleChange}\r\n                    id=\"state\"\r\n                    label=\"state\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.state && touched.state\r\n                        ? errors.state\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.zipCode && touched.zipCode}\r\n                    autoComplete=\"zipCode\"\r\n                    name=\"zipCode\"\r\n                    variant=\"outlined\"\r\n                    defaultValue={userdeatils.zipCode}\r\n                    onChange={handleChange}\r\n                    id=\"zipCode\"\r\n                    label=\"Pin Code\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.zipCode && touched.zipCode\r\n                        ? errors.zipCode\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n      </Grid>\r\n              \r\n                </Grid>\r\n                </CardContent>\r\n                </Card>\r\n                {/* ------- */}\r\n        \r\n        \r\n       <FormControlLabel\r\n                control={<Field as={Checkbox} name=\"termsAndCondition\" \r\n                type=\"submit\"\r\n                className={classes.submit}\r\n                />}\r\n                label=\" Verfiy the form and click this \"\r\n                helperText={<ErrorMessage name=\"termsAndCondition\" />}\r\n                \r\n              />\r\n              <FormHelperText>\r\n                <ErrorMessage name=\"termsAndCondition\" />\r\n              </FormHelperText>\r\n             \r\n\r\n            </Form>\r\n            \r\n          )}\r\n        </Formik>\r\n\r\n\r\n</>\r\n    )\r\n}\r\nexport default UserDeatilsForm;","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\UserLandingPage\\EducationSkillsForm.js",["321","322","323","324","325","326","327","328","329","330","331","332","333","334"],"import React, { useState ,useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\r\nimport Card from '@material-ui/core/Card';\r\nimport { Formik, Form, Field, ErrorMessage  } from \"formik\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as yup from \"yup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nlet Schema = yup.object().shape({\r\n  schoolName: yup.string()\r\n  .min(4, 'Too Short!')\r\n     .max(70, 'Too Long!')\r\n     .required(\"This field is required.\"),\r\n  schoolBoard: yup.string()\r\n  .min(5, 'Too Short!')\r\n     .max(70, 'Too Long!')\r\n     .required(\"This field is required.\"),\r\n     completedYear: yup.number()\r\n     .min(2000, 'Too Short!')\r\n     .max(2020, 'Too Long!')\r\n        .required(\"This field is required.\"),    \r\n        percentage:yup.number()\r\n        .min(55, 'Too Short!')\r\n        .max(100, 'Too Long!')\r\n        .required(\"This field is required.\"),\r\n        place:yup.string()\r\n        .min(2, 'Too Short!')\r\n        .max(20, 'Too Long!')\r\n        .required(\"This field is required.\"),\r\n\r\n        collageName: yup.string()\r\n  .min(4, 'Too Short!')\r\n     .max(70, 'Too Long!')\r\n     .required(\"This field is required.\"),\r\n  collageBoard: yup.string()\r\n  .min(5, 'Too Short!')\r\n     .max(70, 'Too Long!')\r\n     .required(\"This field is required.\"),\r\n     completedYear1: yup.number()\r\n     .min(2000, 'Too Short!')\r\n        .max(2020, 'Too Long!')\r\n        .required(\"This field is required.\"),    \r\n        percentage1:yup.number()\r\n        .min(55, 'Too Short!')\r\n        .max(100, 'Too Long!')\r\n        .required(\"This field is required.\"),\r\n        place1:yup.string().\r\n        min(2, 'Too Short!')\r\n        .max(20, 'Too Long!')\r\n        .required(\"This field is required.\"),\r\n\r\n        \r\n        collageName1: yup.string()\r\n  .min(4, 'Too Short!')\r\n     .max(70, 'Too Long!')\r\n     .required(\"This field is required.\"),\r\n  collageBoard1: yup.string()\r\n  .min(5, 'Too Short!')\r\n     .max(70, 'Too Long!')\r\n     .required(\"This field is required.\"),\r\n     completedYear2: yup.number()\r\n     .min(2000, 'Too Short!')\r\n        .max(2020, 'Too Long!')\r\n        .required(\"This field is required.\"),    \r\n        percentage2:yup.number()\r\n        .min(55, 'Too Short!')\r\n        .max(100, 'Too Long!')\r\n        .required(\"This field is required.\"),\r\n        place2:yup.string().\r\n        min(2, 'Too Short!')\r\n        .max(20, 'Too Long!')\r\n        .required(\"This field is required.\"),\r\n        termsAndCondition: yup.string().oneOf(\r\n          [\"true\"],\r\n          \"BEFORE GOING TO NEXT STEP SAVE THE DATA\"\r\n        ),\r\n        \r\n\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        minWidth: 275,\r\n      },\r\n    },\r\n  }));\r\n\r\nconst  UserDeatilsForm=({educdata})=>{\r\n    const classes = useStyles();\r\n   \r\nconst [educationDeatails,seteducationDeatails]=useState([]);\r\n    const [checked, setChecked] = React.useState(true);\r\n\r\n    const handleChangeCheck = (event) => {\r\n      setChecked(event.target.checked);\r\n    };\r\n   \r\n    const[education,setEducation]=useState(()=>{\r\n      let storge=JSON.parse(localStorage.getItem('education'));\r\n      return storge?storge:[];\r\n    });\r\n    return(\r\n      <>\r\n<Typography align='left' style={{margin:'20px',fontSize:'20px',color:'black'}}>SECONDARY EDUCATION DEATILS (10th)</Typography>\r\n        <Formik\r\n          initialValues={{\r\n          schoolName:'',\r\n          schoolBoard:'',\r\n          completedYear:'',\r\n          percentage:'',\r\n          place:'',\r\n\r\n          collageName:'',\r\n          collageBoard:'',\r\n          completedYear1:'',\r\n          percentage1:'',\r\n          place1:'',\r\n\r\n          collageName1:'',\r\n          collageBoard1:'',\r\n          completedYear2:'',\r\n          percentage2:'',\r\n          place2:'',\r\n          termsAndCondition: false,\r\n          }}\r\n          validationSchema={Schema}\r\n          onSubmit={values => {\r\n            console.log(values)\r\n            localStorage.setItem('education',JSON.stringify({...values}))\r\n          }}\r\n        >\r\n          {({ errors, handleChange, touched }) => (\r\n            <Form className={classes.form}>\r\n                <Card className={classes.root} style={{margin:'20px'}}>\r\n                <CardContent>\r\n              <Grid container spacing={2}>   \r\n                <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    error={errors.schoolName && touched.schoolName}\r\n                    autoComplete=\"schoolName\"\r\n                    name=\"schoolName\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.schoolName}\r\n                    onChange={handleChange}\r\n                    id=\"schoolName\"\r\n                    label=\"schoolName\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.schoolName && touched.schoolName\r\n                        ? errors.schoolName\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n        <TextField\r\n                    error={errors.schoolBoard && touched.schoolBoard}\r\n                    autoComplete=\"schoolBoard\"\r\n                    name=\"schoolBoard\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.schoolBoard}\r\n                    onChange={handleChange}\r\n                    id=\"schoolBoard\"\r\n                    label=\"schoolBoard\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.schoolBoard && touched.schoolBoard\r\n                        ? errors.schoolBoard\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n             <Grid container spacing={3} style={{marginTop:'20px'}}>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n                    error={errors.completedYear && touched.completedYear}\r\n                    autoComplete=\"completedYear\"\r\n                    name=\"completedYear\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.completedYear}\r\n                    onChange={handleChange}\r\n                    id=\"completedYear\"\r\n                    label=\"completedYear\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.completedYear && touched.completedYear\r\n                        ? errors.completedYear\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.percentage && touched.percentage}\r\n                    autoComplete=\"percentage\"\r\n                    name=\"percentage\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.percentage}\r\n                    onChange={handleChange}\r\n                    id=\"percentage\"\r\n                    label=\"percentage(%)\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.percentage && touched.percentage\r\n                        ? errors.percentage\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.place && touched.place}\r\n                    autoComplete=\"place\"\r\n                    name=\"place\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.place}\r\n                    onChange={handleChange}\r\n                    id=\"place\"\r\n                    label=\"place\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.place && touched.place\r\n                        ? errors.place\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n      </Grid>\r\n              \r\n                </Grid>\r\n                </CardContent>\r\n                </Card>\r\n                <Typography align='left' style={{margin:'20px',fontSize:'20px',color:'black'}}>\r\n                HIGHER SECONDARY EDUCATION DEATILS (12th)</Typography>\r\n                  <Card className={classes.root} style={{margin:'20px'}}>\r\n                <CardContent>\r\n                <Grid container spacing={2}>   \r\n                <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    error={errors.collageName && touched.collageName}\r\n                    autoComplete=\"collageName\"\r\n                    name=\"collageName\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.collageName}\r\n                    onChange={handleChange}\r\n                    id=\"collageName\"\r\n                    label=\"collageName\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.collageName && touched.collageName\r\n                        ? errors.collageName\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n        <TextField\r\n                    error={errors.collageBoard && touched.collageBoard}\r\n                    autoComplete=\"collageBoard\"\r\n                    name=\"collageBoard\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.collageBoard}\r\n                    onChange={handleChange}\r\n                    id=\"collageBoard\"\r\n                    label=\"collageBoard\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.collageBoard && touched.collageBoard\r\n                        ? errors.collageBoard\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n             <Grid container spacing={3} style={{marginTop:'20px'}}>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n                    error={errors.completedYear1 && touched.completedYear1}\r\n                    autoComplete=\"completedYear1\"\r\n                    name=\"completedYear1\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.completedYear1}\r\n                    onChange={handleChange}\r\n                    id=\"completedYear1\"\r\n                    label=\"completedYear\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.completedYear1 && touched.completedYear1\r\n                        ? errors.completedYear1\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.percentage1 && touched.percentage1}\r\n                    autoComplete=\"percentage1\"\r\n                    name=\"percentage1\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.percentage1}\r\n                    onChange={handleChange}\r\n                    id=\"percentage1\"\r\n                    label=\"percentage(%)\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.percentage1 && touched.percentage1\r\n                        ? errors.percentage1\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.place1 && touched.place1}\r\n                    autoComplete=\"place1\"\r\n                    name=\"place1\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.place1}\r\n                    onChange={handleChange}\r\n                    id=\"place1\"\r\n                    label=\"place\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.place1 && touched.place1\r\n                        ? errors.place1\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n      </Grid>\r\n      </Grid>\r\n                </CardContent>\r\n                </Card>\r\n                {/* ------- */}\r\n                <Typography align='left' style={{margin:'20px',fontSize:'20px',color:'black'}}>\r\n                GRADUCATION DEATILS</Typography>\r\n                  <Card className={classes.root} style={{margin:'20px'}}>\r\n                <CardContent>\r\n                <Grid container spacing={2}>   \r\n                <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    error={errors.collageName1 && touched.collageName1}\r\n                    autoComplete=\"collageName1\"\r\n                    name=\"collageName1\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.collageName1}\r\n                    onChange={handleChange}\r\n                    id=\"collageName1\"\r\n                    label=\"collageName\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.collageName1 && touched.collageName1\r\n                        ? errors.collageName1\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n        <TextField\r\n                    error={errors.collageBoard1 && touched.collageBoard1}\r\n                    autoComplete=\"collageBoard1\"\r\n                    name=\"collageBoard1\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.collageBoard1}\r\n                    onChange={handleChange}\r\n                    id=\"collageBoard1\"\r\n                    label=\"collageBoard\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.collageBoard1 && touched.collageBoard1\r\n                        ? errors.collageBoard1\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n             <Grid container spacing={3} style={{marginTop:'20px'}}>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n                    error={errors.completedYear2 && touched.completedYear2}\r\n                    autoComplete=\"completedYear2\"\r\n                    name=\"completedYear2\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.completedYear2}\r\n                    onChange={handleChange}\r\n                    id=\"completedYear2\"\r\n                    label=\"completedYear\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.completedYear2 && touched.completedYear2\r\n                        ? errors.completedYear2\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.percentage2 && touched.percentage2}\r\n                    autoComplete=\"percentage2\"\r\n                    name=\"percentage2\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.percentage2}\r\n                    onChange={handleChange}\r\n                    id=\"percentage2\"\r\n                    label=\"percentage(%)\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.percentage2 && touched.percentage2\r\n                        ? errors.percentage2\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.place2 && touched.place2}\r\n                    autoComplete=\"place2\"\r\n                    name=\"place2\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    defaultValue={education.place2}\r\n                    onChange={handleChange}\r\n                    id=\"place2\"\r\n                    label=\"place\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.place2 && touched.place2\r\n                        ? errors.place2\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n      </Grid>\r\n      </Grid>\r\n                              </CardContent>\r\n                </Card>\r\n                \r\n    \r\n       <FormControlLabel\r\n                control={<Field as={Checkbox} name=\"termsAndCondition\" \r\n                type=\"submit\"\r\n                className={classes.submit}\r\n             \r\n             />}\r\n                label=\" Verfiy the form and click this \"\r\n                helperText={<ErrorMessage name=\"termsAndCondition\" />}\r\n                \r\n              />\r\n              <FormHelperText>\r\n                <ErrorMessage name=\"termsAndCondition\" />\r\n              </FormHelperText>\r\n\r\n            </Form>\r\n            \r\n          )}\r\n        </Formik>\r\n\r\n\r\n</>\r\n    )\r\n}\r\nexport default UserDeatilsForm;","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\FormikValidationForm\\RegistrationForm.js",["335"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport * as moment from 'moment';\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport DataService from \"../../Service/service\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet SignupSchema = yup.object().shape({\r\n  firstName: yup.string()\r\n  .min(2, 'Too Short!')\r\n     .max(70, 'Too Long!')\r\n     .required(\"This field is required.\"),\r\n  lastName: yup.string()\r\n  .min(1, 'Too Short!')\r\n     .max(20, 'Too Long!')\r\n     .required(\"This field is required.\"),\r\n  email: yup\r\n    .string()\r\n    .email()\r\n    .required(\"This field is required.\"),\r\n  adhar: yup\r\n    .string()\r\n    .min(12, \"Adhar Number is too short.\")\r\n    .max(12, \"Adhar Number is too long.\")\r\n    .required(\"This field is required.\"),\r\n    dob:yup.string().test(\r\n        \"dob\",\r\n        \"Age must be above 18\",\r\n        value => {\r\n          return moment().diff(moment(value),'years') >= 18;\r\n        }\r\n      )\r\n      \r\n\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\n const RegistrationForm= () => {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: 'top',\r\n    horizontal: 'center',\r\n  });\r\n  \r\n  const { vertical, horizontal} = state;\r\n  const [open, setOpen] = React.useState(false);\r\nconst[response,setresponse]=useState('');\r\nconst[snackcolor,setscackcolor]=useState('');\r\nconst handleClick = () => {\r\n  setOpen(true);\r\n};\r\n\r\nconst handleClose = (event, reason) => {\r\n  if (reason === 'clickaway') {\r\n    return;\r\n  }\r\n\r\n  setOpen(false);\r\n};\r\n\r\nconst Close = () => {\r\n  window.location=\"/\"\r\n}\r\n\r\nconst  createUser= async (data)=>{\r\n  console.log(data);\r\nlet response=await DataService.create(data);\r\n\r\nconsole.log(\"response of create\"+JSON.stringify(response.data))\r\nsetresponse(response.data)\r\nsetOpen(false);\r\nhandleClick(true)\r\n\r\nif(response){\r\n  setState({ opens: true,  vertical: 'top', horizontal: 'right' });\r\n  handleClick({ vertical: 'top', horizontal: 'right' })\r\nif(response.data===\"The Email is already Present, Failed to Create new User\"){\r\n  response=\"\";\r\nsetscackcolor(\"error\")\r\n}\r\nelse{\r\n  setscackcolor(\"success\")\r\n  response=\"\";\r\n}\r\n\r\n}\r\nhandleClick();\r\n}\r\n\r\n  return (\r\n    <>\r\n       <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}\r\n   \r\n   key={vertical + horizontal}\r\n   anchorOrigin={{ vertical, horizontal }}>\r\n        <Alert onClose={handleClose} severity={snackcolor}\r\n       \r\n        >\r\n         {response}\r\n        </Alert>\r\n      </Snackbar>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          CREATE USER\r\n        </Typography>\r\n        <Formik\r\n          initialValues={{\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            adhar: \"\",\r\n            dob:'',\r\n            status:'Active',\r\n            createdAt:Date.now(),\r\n            updatedAt:Date.now()\r\n          }}\r\n          validationSchema={SignupSchema}\r\n          onSubmit={values => {\r\n            console.log(values);\r\ncreateUser(values)\r\n          }}\r\n        >\r\n          {({ errors, handleChange, touched }) => (\r\n            <Form className={classes.form}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    error={errors.firstName && touched.firstName}\r\n                    autoComplete=\"fname\"\r\n                    name=\"firstName\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"firstName\"\r\n                    label=\"First Name\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.firstName && touched.firstName\r\n                        ? errors.firstName\r\n                        : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    error={errors.lastName && touched.lastName}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    autoComplete=\"lname\"\r\n                    helperText={\r\n                      errors.lastName && touched.lastName\r\n                        ? errors.lastName\r\n                        : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    error={errors.email && touched.email}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    helperText={\r\n                      errors.email && touched.email ? errors.email : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    error={errors.dob && touched.dob}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"dob\"\r\n                    label=\"DOB\"\r\n                    name=\"dob\"\r\n                    type=\"date\"\r\n                    autoComplete=\"dob\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    helperText={\r\n                      errors.dob && touched.dob ? errors.dob : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    error={errors.adhar && touched.adhar}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    name=\"adhar\"\r\n                    label=\"adhar\"\r\n                    type=\"textField\"\r\n                    id=\"adhar\"\r\n                    autoComplete=\"current-password\"\r\n                    helperText={\r\n                      errors.adhar && touched.adhar\r\n                        ? errors.adhar\r\n                        : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Save\r\n              </Button>\r\n              <Button color=\"secondary\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n               onClick={Close}>CANCEL</Button>\r\n\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </Container>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default RegistrationForm;","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\InterViewProceses\\LandingPageInterview.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\InterViewProceses\\SecondInterviewProcess.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\InterViewProceses\\FirstInterviewProcess.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\InterViewProceses\\FinalRound.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\LoginPage\\Login.js",["336","337","338"],"import React from \"react\";\r\nimport \"./Login.css\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Avatar,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Link,\r\n} from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport RegService from \"../../Service/RegService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport LandingPage from \"../ApplicantLandingPage/LandingPage\";\r\nconst Login = () => {\r\n  let history = useHistory();\r\n  const paperStyle = { padding: 20, width: 280, margin: \"55px auto\" };\r\n  const avatarStyle = { backgroundColor: \"#AF0069\" };\r\n  const btnStyle = { margin: \"15px 0px\" };\r\n  const initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n    remember: false,\r\n  };\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Please enter valid email\").required(\"Required\"),\r\n    password: Yup.string().required(\"Required\"),\r\n  });\r\n  const onSubmit = (values, props) => {\r\n    console.log(values);\r\n    const regjson = {\r\n      email: values.email,\r\n      password: values.password,\r\n    };\r\n    console.log(\"regjson\", regjson);\r\n    if (RegService.fetchUsers(regjson)) {\r\n      history.push(\"/LandingPage\");\r\n    }\r\n    console.log(\"login sucessfully done\");\r\n    setTimeout(() => {\r\n      props.resetForm();\r\n      props.setSubmitting(false);\r\n    }, 2000);\r\n    console.log(props);\r\n  };\r\n\r\n  \r\n  const handleSignin = () => {\r\n    history.push(\"/registration\");\r\n  };\r\n\r\n  const handleForgetPass = () => {\r\n    history.push(\"/ForgetPassword\");\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Paper elevation={10} style={paperStyle}>\r\n        <Grid align=\"center\">\r\n          <Avatar style={avatarStyle}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <h2>Login Here</h2>\r\n        </Grid>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          onSubmit={onSubmit}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {(props) => (\r\n            <Form>\r\n              <Field\r\n                as={TextField}\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                placeholder=\"Enter Username\"\r\n                helperText={<ErrorMessage name=\"username\" />}\r\n                fullWidth\r\n                required\r\n              />\r\n              <Field\r\n                as={TextField}\r\n                style={{ marginTop: \"10px\" }}\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                helperText={<ErrorMessage name=\"password\" />}\r\n                placeholder=\"Enter Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n                required\r\n              />\r\n              <Typography style={{ marginTop: \"10px\" }}>\r\n              <Link onClick={handleForgetPass}> Forget password ?</Link>\r\n              </Typography>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disabled={props.isSubmitting}\r\n                style={btnStyle}\r\n                fullWidth\r\n              >\r\n                {props.isSubmitting ? \"Loading\" : \"Login\"}\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n\r\n        <Typography>\r\n          Do you have an account?<Link onClick={handleSignin}> Sign Up</Link>\r\n        </Typography>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\nexport default Login;\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\FormikValidationForm\\UpdateProfileForm.js",["339","340"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport * as moment from 'moment'\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport DataService from \"../../Service/service\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet SignupSchema = yup.object().shape({\r\n  firstName: yup.string()\r\n  .min(2, 'Too Short!')\r\n     .max(70, 'Too Long!')\r\n     .required(\"This field is required.\"),\r\n  lastName: yup.string()\r\n  .min(2, 'Too Short!')\r\n     .max(70, 'Too Long!')\r\n     .required(\"This field is required.\"),\r\n  email: yup\r\n    .string()\r\n    .email()\r\n    .required(\"This field is required.\"),\r\n  adhar: yup\r\n    .string()\r\n    .min(12, \"Adhar Number is too short.\")\r\n    .max(12, \"Adhar Number is too long.\")\r\n    .required(\"This field is required.\"),\r\n    dob:yup.string().test(\r\n        \"dob\",\r\n        \"error message\",\r\n        value => {\r\n          return moment().diff(moment(value),'years') >= 18;\r\n        }\r\n      )\r\n\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\n const UpdateProfileForm= ({data}) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: 'top',\r\n    horizontal: 'center',\r\n  });\r\n  const { vertical, horizontal} = state;\r\n\r\n  const Close = () => {\r\n    window.location=\"/\"\r\n  }\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\nconst handleClick = () => {\r\n  setOpen(true);\r\n};\r\n\r\nconst handleClose = (event, reason) => {\r\n  if (reason === 'clickaway') {\r\n    return;\r\n  }\r\n\r\n  setOpen(false);\r\n};\r\n\r\n  const updateUser=(id,data)=>{\r\n    console.log(id+\"/////\"+JSON.stringify(data))\r\n    DataService.update(id,JSON.stringify(data));\r\n    handleClick();\r\n    Close();\r\n  }\r\n  return (\r\n    <>\r\n    <div className={classes.root}>\r\n     <Snackbar open={open} anchorOrigin={{ vertical, horizontal }} autoHideDuration={6000} onClose={handleClose}>\r\n       <Alert onClose={handleClose} severity=\"success\">\r\n         user information updated successfully!\r\n       </Alert>\r\n     </Snackbar>\r\n   </div>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          UPDATE USER\r\n        </Typography>\r\n        <Formik\r\n          initialValues={{\r\n            id:data.id,\r\n            firstName: data.firstName,\r\n            lastName: data.lastName,\r\n            email:data.email,\r\n            adhar: data.adhar,\r\n            dob:data.dob,\r\n            status:data.status,\r\n        createdAt:data.createdAt,\r\n        updatedAt:data.updatedAt\r\n          }}\r\n          validationSchema={SignupSchema}\r\n          onSubmit={values => {\r\n            console.log(values);\r\n            updateUser(values.id,values)\r\n          }}\r\n        >\r\n          {({ errors, handleChange, touched }) => (\r\n            <Form className={classes.form}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    error={errors.firstName && touched.firstName}\r\n                    autoComplete=\"fname\"\r\n                    defaultValue={data.firstName}\r\n                    name=\"firstName\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"firstName\"\r\n                    label=\"First Name\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.firstName && touched.firstName\r\n                        ? errors.firstName\r\n                        : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    error={errors.lastName && touched.lastName}\r\n                    defaultValue={data.lastName}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    autoComplete=\"lname\"\r\n                    helperText={\r\n                      errors.lastName && touched.lastName\r\n                        ? errors.lastName\r\n                        : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    error={errors.email && touched.email}\r\n                    defaultValue={data.email}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    helperText={\r\n                      errors.email && touched.email ? errors.email : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    error={errors.dob && touched.dob}\r\n                    defaultValue={data.dob}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"dob\"\r\n                    label=\"DOB\"\r\n                    name=\"dob\"\r\n                    type=\"date\"\r\n                    autoComplete=\"dob\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    helperText={\r\n                      errors.dob && touched.dob ? errors.dob : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    error={errors.adhar && touched.adhar}\r\n                    defaultValue={data.adhar}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    name=\"adhar\"\r\n                    label=\"adhar\"\r\n                    type=\"textField\"\r\n                    id=\"adhar\"\r\n                    autoComplete=\"current-password\"\r\n                    helperText={\r\n                      errors.adhar && touched.adhar\r\n                        ? errors.adhar\r\n                        : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Update\r\n              </Button>\r\n              <Button color=\"secondary\"  fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={Close}>CANCEL</Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </Container>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default UpdateProfileForm;","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantLandingPage\\LandingPage.js",["341","342"],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantLandingPage\\LandingPageCard.js",["343","344","345","346","347","348","349","350","351","352"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function RecipeReviewCard({jobdetails}) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n      <Typography variant=\"body2\" gutterBottom align='left' style={{margin:'10px'}}>{jobdetails.country} | {jobdetails.city}</Typography>\r\n      <Typography variant=\"h5\" gutterBottom align='left' style={{margin:'10px',color:'tan'}}>{jobdetails.position}</Typography> \r\n      <Typography variant='subtitle1' gutterBottom align='left' style={{marginTop:'20px'}}>{jobdetails.jobcategory}</Typography>\r\n      <Typography variant=\"caption\" display=\"block\" gutterBottom align='left' style={{marginTop:'30px'}}>{jobdetails.level}</Typography>\r\n     \r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton color='primary'>\r\n          <ArrowForwardIcon/>\r\n        </IconButton>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\Footer\\Footer.js",["353","354","355","356","357","358","359"],"\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PaymentTwoToneIcon from '@material-ui/icons/PaymentTwoTone';\r\nimport StorefrontRoundedIcon from '@material-ui/icons/StorefrontRounded';\r\nimport PhoneAndroidRoundedIcon from '@material-ui/icons/PhoneAndroidRounded';\r\nimport EmailRoundedIcon from '@material-ui/icons/EmailRounded';\r\nimport ContactSupportRoundedIcon from '@material-ui/icons/ContactSupportRounded';\r\nimport StoreTwoToneIcon from '@material-ui/icons/StoreTwoTone';\r\nimport PermContactCalendarIcon from '@material-ui/icons/PermContactCalendar';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    textAlign: \"center\",\r\n    color: \"#FFFFFF\",\r\n    marginTop:'20px'\r\n  },\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root} style={{ backgroundColor: \"#cb997e\" }}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={4}style={{textAlign:'center'}}>\r\n          {/* <StoreTwoToneIcon/>  */}\r\n          Information for...<th/>\r\n          <br/>\r\n        <span>Developers</span><tr/>\r\n        <span>Business Partners</span><tr/>\r\n        <span>Supproting People</span><tr/>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4}>\r\n       Connect with us<th/>\r\n        <br/>\r\n        <span> Support</span><tr/>\r\n        <span>Branchs</span><tr/>\r\n        <span>About Odigo Tech</span><tr/>\r\n        \r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4}>\r\n        {/* <PermContactCalendarIcon/>   */}\r\n        CONTACT INFORMATION<th/>\r\n        <br/>\r\n        {/* <EmailRoundedIcon/>\r\n        <PhoneAndroidRoundedIcon/> \r\n        <StorefrontRoundedIcon/> */}\r\n        <span> exampe123@email.com</span><tr/>\r\n        <span>  9199******99</span><tr/>\r\n        <span> 9981******88</span><tr/>\r\n        </Grid>\r\n        <Grid item xs={12}>------------------------------------------------------------------------------</Grid>\r\n        <Grid item xs={12}>@Copy Right 2020</Grid>\r\n      </Grid>\r\n\r\n    </div>  \r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\MenuBar\\MenuBarLandingPage.js",["360","361","362","363","364","365"],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\LoginPage\\Registration.js",["366","367","368","369"],"import React from 'react';\r\nimport {Grid,Paper,Avatar,TextField,Button,Typography,Link} from '@material-ui/core';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {Formik,Form,Field,ErrorMessage} from 'formik';\r\nimport RegService from \"../../Service/RegService\";\r\nimport {FormHelperText} from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as Yup from 'yup';\r\nconst Registration=()=>{\r\nconst paperStyle={padding:\"40px 30px\",width:450,margin:\"20px auto\"}\r\nconst btnStyle={margin:\"20px 5px\"}\r\n// const [value, setValue] = React.useState('female');\r\n\r\n// const handleChange = (event) => {\r\n// setValue(event.target.value);\r\n// };\r\n\r\nconst initialValues={\r\nfirstName:'',\r\nlastName:'',\r\nemail:'',\r\nphoneNumber:'',\r\ncurrentLocation:'',\r\npassword:'',\r\ntermsAndCondition:false\r\n}\r\nconst validationSchema=Yup.object().shape({\r\nfirstName:Yup.string().min(3,'Its too short').required('Required'),\r\nlastName:Yup.string().min(3,'Its too short').required('Required'),\r\nemail:Yup.string().email('Please enter valid email').required('Required'),\r\nphoneNumber:Yup.number().min(10,'Phone number length should be 10 digits').typeError('Enter valid phone number').required('Required'),\r\ncurrentLocation:Yup.string().min(3,'Its too short').required('Required'),\r\npassword:Yup.string().min(8,'Pssword minimum length should be 8').required('Required'),\r\ntermsAndCondition:Yup.string().oneOf(['true'],'Please Accept terms and condition')\r\n})\r\nconst onSubmit=(values,props)=>{\r\nconsole.log(values)\r\nconst regjson={\r\naddress: values.currentLocation,\r\nemail: values.email,\r\nfirstName: values.firstName,\r\nlastName: values.lastName,\r\npassword: values.password,\r\nphoneNo: values.phoneNumber\r\n}\r\nRegService.addUser(regjson);\r\nalert('Logged In successfully');\r\nconsole.log(\"sucessfully done\");\r\nsetTimeout(()=>{props.resetForm()\r\nprops.setSubmitting(false)},\r\n2000)\r\nconsole.log(props)\r\n}\r\n\r\nlet history = useHistory();\r\nconst handleSignIn = () => {\r\n  history.push(\"/login\");\r\n};\r\n\r\nreturn(\r\n<Grid>\r\n<Paper elevation={10} style={paperStyle}>\r\n<Grid align=\"center\">\r\n<Avatar style={{backgroundColor:\"#1bbd7e\"}}>\r\n<AddCircleOutlineIcon/>\r\n</Avatar>\r\n<h2 style={{margin:\"0\"}}>Sign Up</h2>\r\n<Typography variant=\"caption\" gutterBottom>Please fill this form to create an account</Typography>\r\n</Grid>\r\n<Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n{(props)=>(\r\n<Form>\r\n<Field as={TextField} label='FirstName' name='firstName' placeholder='Enter your Firstname' helperText={<ErrorMessage name=\"firstName\"/>} fullWidth required/>\r\n<Field as={TextField} label='LastName' name='lastName' placeholder='Enter your Lastname' helperText={<ErrorMessage name=\"lastName\"/>} fullWidth required/>\r\n\r\n{/* <RadioGroup aria-label=\"gender\" name=\"gender1\" style={{display:\"initial\"}}>\r\n<FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n<FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n<FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\r\n</RadioGroup> */}\r\n\r\n<Field as={TextField} name='email' label='Email' placeholder='Enter your email' helperText={<ErrorMessage name=\"email\"/>} fullWidth required/>\r\n<Field as={TextField} name='phoneNumber' label='Phone Number' placeholder='Enter your phone number' helperText={<ErrorMessage name=\"phoneNumber\"/>} fullWidth required/>\r\n<Field as={TextField} name='currentLocation' label='Address' placeholder='Enter your current location' helperText={<ErrorMessage name=\"currentLocation\"/>} fullWidth required/>\r\n<Field as={TextField} name='password' label='Password' type=\"password\" placeholder='Enter your password' helperText={<ErrorMessage name=\"password\"/>} fullWidth required/>\r\n<FormControlLabel\r\ncontrol={<Field as={Checkbox} name=\"termsAndCondition\" />}\r\nlabel=\"I accept the terms and conditions\" helperText={<ErrorMessage name=\"termsAndCondition\"/>}\r\n/>\r\n<FormHelperText><ErrorMessage name=\"termsAndCondition\"/></FormHelperText>\r\n<Button type=\"submit\" color=\"primary\" variant=\"contained\" disabled={props.isSubmitting} style={btnStyle}>{props.isSubmitting?\"Loading\":\"Sign Up\"}</Button>\r\n<Typography>Already have an account?<Link onClick={handleSignIn}>Sign In</Link></Typography>\r\n</Form>\r\n)\r\n}\r\n</Formik>\r\n</Paper>\r\n</Grid>\r\n)\r\n}\r\nexport default Registration;","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\JobModel\\JobDetailsPage.js",["370","371","372","373","374","375","376","377","378","379","380","381"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuBar from \"../MenuBar/Menu\"\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport JobService from \"../../Service/JobService\"\r\nimport { date } from \"yup/lib/locale\";\r\nimport * as moment from 'moment';\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n\r\n\r\nlet SignupSchema = yup.object().shape({\r\n  JobTitle: yup.string()\r\n    .min(2, 'Too Short!')\r\n       .max(70, 'Too Long!')\r\n       .required(\"This field is required.\"),\r\n    JobDescription: yup.string()\r\n    .min(10, 'Too Short!')\r\n       .max(500, 'Too Long!')\r\n       .required(\"This field is required.\"),\r\n    ContactEmail: yup\r\n      .string()\r\n      .email()\r\n      .required(\"This field is required.\"),\r\n      NoOfVacanci:yup.number().min(1).required('this field is required'),\r\n\r\n      platname: yup.string()\r\n      .min(2, 'Too Short!')\r\n         .max(70, 'Too Long!')\r\n         .required(\"This field is required.\"),\r\n\r\n         platdescription: yup.string()\r\n         .min(20, 'Too Short!')\r\n            .max(250, 'Too Long!')\r\n            .required(\"This field is required.\"),\r\n\r\n            orgName: yup.string()\r\n            .min(2, 'Too Short!')\r\n               .max(70, 'Too Long!')\r\n               .required(\"This field is required.\"),\r\n            \r\n               orgDescription: yup.string()\r\n               .min(20, 'Too Short!')\r\n                  .max(70, 'Too Long!')\r\n                  .required(\"This field is required.\"),\r\n\r\n                  location: yup.string()\r\n               .min(5, 'Too Short!')\r\n                  .max(70, 'Too Long!')\r\n                  .required(\"This field is required.\")  ,\r\nphoneNumber: yup.string().matches(phoneRegExp, 'Phone number is not valid'),\r\n// startingDate:yup.string().test(\r\n//   \"dob\",\r\n//   \"current date\",\r\n//   value => {\r\n//     return moment().diff(moment(value),'days') == 1;\r\n//   }\r\n// )\r\n});\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  root: {\r\n      flexGrow: 1,\r\n      minWidth: 275,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\n const RegistrationForm= () => {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: 'top',\r\n    horizontal: 'center',\r\n  });\r\n  \r\n  const { vertical, horizontal} = state;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n\r\nconst Close = () => {\r\n  window.location=\"/\"\r\n}\r\n\r\nconst Jobcreate=(e)=>{\r\nconst jobjson={\r\n  datePublished:e.StartingDate,\r\n    description:e.JobDescription,\r\n    endingDate:e.StartingDate,\r\n    jobPlatform: {\r\n      platformName:e.platname,\r\n      platformDescription:e.platdescription,\r\n    },\r\n    jobPosition: {\r\n      description: e.JobDescription,\r\n      jobCategory: e.JobTitle,\r\n      name: e.JobTitle\r\n    },\r\n    name:e.JobTitle,\r\n    organization: {\r\n      orgDescription:e.orgDescription,\r\n      orgName:e.orgName\r\n    },\r\n    startingDate:e.StartingDate,\r\n    vacancy:e.NoOfVacanci,\r\n    email:e.ContactEmail,\r\n    phoneno:e.phoneNumber,\r\n    location:e.location\r\n}\r\n// console.log(jobjson)\r\nJobService.addUser(jobjson)\r\nconsole.log(\"success\");\r\n}\r\n\r\n  return (\r\n    <>\r\n        <MenuBar/>\r\n        <Typography align='left' style={{margin:'20px',fontSize:'20px',color:'black'}}>Basic Job Details</Typography>\r\n        <Formik\r\n          initialValues={{\r\n            JobTitle:\"\",\r\n            JobDescription:\"\",\r\n            ContactEmail:\"\",\r\n            NoOfVacanci:\"\",\r\n            platname:\"\",\r\n            platdescription:\"\",\r\n            orgName:\"\",\r\n            orgDescription:\"\",\r\n            StartingDate:\"\",\r\n            location:'',\r\n            salary:'',\r\n            phoneNumber:''\r\n          }}\r\n          validationSchema={SignupSchema}\r\n          onSubmit={values => {\r\n            console.log(values)\r\n            Jobcreate(values);\r\n          }}\r\n        >\r\n          {({ errors, handleChange, touched }) => (\r\n            <Form className={classes.form}>\r\n                <Card className={classes.root} style={{margin:'20px'}}>\r\n                <CardContent>\r\n              <Grid container spacing={2}>   \r\n                <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    error={errors.JobTitle && touched.JobTitle}\r\n                    autoComplete=\"JobTitle\"\r\n                    name=\"JobTitle\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"JobTitle\"\r\n                    label=\"JobTitle\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.JobTitle && touched.JobTitle\r\n                        ? errors.JobTitle\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n        <TextField\r\n                    error={errors.JobDescription && touched.JobDescription}\r\n                    autoComplete=\"JobDescription\"\r\n                    name=\"JobDescription\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"JobDescription\"\r\n                    label=\"JobDescription\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.firstJobDescription && touched.JobDescription\r\n                        ? errors.JobDescription\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n             <Grid container spacing={3} style={{marginTop:'20px'}}>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n                    error={errors.salary && touched.salary}\r\n                    autoComplete=\"salary\"\r\n                    name=\"salary\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"salary\"\r\n                    label=\"salary\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.salary && touched.salary\r\n                        ? errors.salary\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.location && touched.location}\r\n                    autoComplete=\"location\"\r\n                    name=\"location\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"location\"\r\n                    label=\"location\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.location && touched.location\r\n                        ? errors.location\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.NoOfVacanci && touched.NoOfVacanci}\r\n                    autoComplete=\"NoOfVacanci\"\r\n                    name=\"NoOfVacanci\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"NoOfVacanci\"\r\n                    label=\"NoOfVacanci\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.NoOfVacanci && touched.NoOfVacanci\r\n                        ? errors.NoOfVacanci\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n      </Grid>\r\n              \r\n                </Grid>\r\n                </CardContent>\r\n                </Card>\r\n                <Typography align='left' style={{margin:'20px',fontSize:'20px',color:'black'}}>\r\n                  Organization Details</Typography>\r\n                  <Card className={classes.root} style={{margin:'20px'}}>\r\n                <CardContent>\r\n              <Grid container spacing={2}>   \r\n                <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    error={errors.orgName && touched.orgName}\r\n                    autoComplete=\"orgName\"\r\n                    name=\"orgName\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"orgName\"\r\n                    label=\"orgName\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.orgName && touched.orgName\r\n                        ? errors.orgName\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n        <TextField\r\n                    error={errors.orgDescription && touched.orgDescription}\r\n                    autoComplete=\"orgDescription\"\r\n                    name=\"orgDescription\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"orgDescription\"\r\n                    label=\"orgDescription\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.orgDescription && touched.orgDescription\r\n                        ? errors.orgDescription\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n             <Grid container spacing={3} style={{marginTop:'20px'}}>\r\n        <Grid item xs={12} sm={4}>\r\n      \r\n          <TextField\r\n                    error={errors.StartingDate && touched.StartingDate}\r\n                    autoComplete=\"StartingDate\"\r\n                    name=\"StartingDate\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"StartingDate\"\r\n                    label=\"StartingDate\"\r\n                    autoFocus\r\n                    type=\"date\"\r\n                    autoComplete=\"startingDate\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    helperText={\r\n                      errors.StartingDate && touched.StartingDate\r\n                        ? errors.StartingDate\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.platname && touched.platname}\r\n                    autoComplete=\"platname\"\r\n                    name=\"platname\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"platname\"\r\n                    label=\"platformName\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.platname && touched.platname\r\n                        ? errors.platname\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.platdescription && touched.platdescription}\r\n                    autoComplete=\"platdescription\"\r\n                    name=\"platdescription\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"platdescription\"\r\n                    label=\"PlatformDescription\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.platdescription && touched.platdescription\r\n                        ? errors.platdescription\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n      </Grid>\r\n              \r\n                </Grid>\r\n                </CardContent>\r\n                </Card>\r\n              {/* ---- */}\r\n              <Typography align='left' style={{margin:'20px',fontSize:'20px',color:'black'}}>\r\n                  Contact Details</Typography>\r\n                  <Card className={classes.root} style={{margin:'20px'}}>\r\n                <CardContent>\r\n              <Grid container spacing={2}>   \r\n                <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    error={errors.ContactEmail && touched.ContactEmail}\r\n                    autoComplete=\"ContactEmail\"\r\n                    name=\"ContactEmail\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"ContactEmail\"\r\n                    label=\"ContactEmail\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.ContactEmail && touched.ContactEmail\r\n                        ? errors.ContactEmail\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n        <TextField\r\n                    error={errors.phoneNumber && touched.phoneNumber}\r\n                    autoComplete=\"phoneNumber\"\r\n                    name=\"phoneNumber\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"phoneNumber\"\r\n                    label=\"phoneNumber\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.phoneNumber && touched.phoneNumber\r\n                        ? errors.phoneNumber\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n             {/* {/* <Grid container spacing={3} style={{marginTop:'20px'}}>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n                    error={errors.salary && touched.salary}\r\n                    autoComplete=\"salary\"\r\n                    name=\"salary\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"salary\"\r\n                    label=\"salary\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.salary && touched.salary\r\n                        ? errors.salary\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.location && touched.location}\r\n                    autoComplete=\"location\"\r\n                    name=\"location\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"location\"\r\n                    label=\"location\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.location && touched.location\r\n                        ? errors.location\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <TextField\r\n                    error={errors.NoOfVacanci && touched.NoOfVacanci}\r\n                    autoComplete=\"NoOfVacanci\"\r\n                    name=\"NoOfVacanci\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    id=\"NoOfVacanci\"\r\n                    label=\"NoOfVacanci\"\r\n                    autoFocus\r\n                    helperText={\r\n                      errors.NoOfVacanci && touched.NoOfVacanci\r\n                        ? errors.NoOfVacanci\r\n                        : null\r\n                    }\r\n                  />\r\n        </Grid>\r\n      </Grid>\r\n               */}\r\n                </Grid> \r\n                </CardContent>\r\n                </Card>\r\n                {/* ------- */}\r\n        \r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Save\r\n              </Button>\r\n              <Button color=\"secondary\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n               onClick={Close}>CANCEL</Button>\r\n\r\n            </Form>\r\n            \r\n          )}\r\n        </Formik>\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default RegistrationForm;","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\JobService.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantLandingPage\\LandingPageForUnauth.js",["382","383","384","385","386","387"],"import React from \"react\";\r\nimport './LandingPage.css';\r\nimport DesktopViewImg from \"../Images/Careers-Banner.png\";\r\nimport DesktopViewImg1 from \"../Images/career-banner1.jpg\";\r\nimport MobileViewImg from \"../Images/carrer2.jpg\";\r\nimport adduser from \"../Images/adduser.png\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from \"@material-ui/core\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport LandingPageCard from \"./LandingPageCard\"\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport LandingPageMenu from \"../../components/MenuBar/MenuBarLandingPage\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst category = [\r\n    {\r\n      value: 'IT',\r\n    },\r\n    {\r\n      value: 'MANAGEMENT',\r\n    },\r\n  ];\r\n\r\n  const data = [\r\n    {\r\n      city: 'BENGALURU',\r\n      country:'INDIA',\r\n      position:'FRONT END DEVELOPER',\r\n      jobcategory:\"TECHNICAL SPECIALIST\",\r\n      level:'Entry Level'\r\n    },\r\n    {\r\n        city: 'Shivamogga',\r\n        country:'INDIA',\r\n        position:'DATA-BASE SPECIALIST',\r\n        jobcategory:\"TECHNICAL SPECIALIST\",\r\n        level:'Entry Level'\r\n      },\r\n      {\r\n        city: 'Tumakuru',\r\n        country:'INDIA',\r\n        position:'APPLICATION DEVELOPER',\r\n        jobcategory:\"TECHNICAL SPECIALIST\",\r\n        level:'Entry Level'\r\n      },\r\n      {\r\n        city: 'HASSAN',\r\n        country:'INDIA',\r\n        position:'BACK-END DEVELOPER',\r\n        jobcategory:\"TECHNICAL SPECIALIST\",\r\n        level:'Entry Level'\r\n      },\r\n  ];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root1:{\r\n        flexGrow: 1,\r\n    },\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '40ch',\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\nconst LandingPage=()=>{\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const imageUrl = window.innerWidth >= 650 ? DesktopViewImg1 : MobileViewImg;\r\n    const [Category, setCategory] = React.useState('');\r\n      const handleChange = (event) => {\r\n        setCategory(event.target.value);\r\n      };\r\n\r\n      const handleRedirect=()=>{\r\n        history.push(\"/registration\");\r\n      }\r\n\r\n\r\n    return (\r\n        <>\r\n        <LandingPageMenu/>\r\n        <div style={{backgroundColor:'lightgray'}}>\r\n        <div className=\"LandingPageImg\" style={{backgroundImage: `url(${imageUrl})` }}>\r\n            <div className=\"LandingPageImg-content\">\r\n                {/* <a style={{fontSize:'40px',color:'#867979'}}>ENTRY LEVEL</a>\r\n                <a style={{fontSize:'40px',color:'#867979'}}>JOB OPPORTUNITIES</a> */}\r\n                <form className={classes.root} noValidate autoComplete=\"off\" style={{marginBottom: '168px'}}>\r\n                {/* <TextField id=\"outlined-basic\" label=\"Search\" variant=\"outlined\"/> */}\r\n                {/* <Button variant=\"contained\" color=\"primary\" style={{width:'140px',height:'55px'}}> */}\r\n  {/* Sarech */}\r\n{/* </Button> */}\r\n</form>\r\n</div>        \r\n        </div>\r\n        <div className='rows' style={{marginTop:\"20px\",backgroundColor:'gray',color:'white'}}>\r\n     <div className='row' >\r\n         <h1>Join our  </h1><h1>Organization!!</h1></div>\r\n     <div className='row' style={{marginLeft:\"20px\"}}>\r\n    <h2>Tell us more about yourself and we'll keep you up-to-date regarding upcoming</h2>\r\n    <h4>events and career opportunities that match your interests.</h4>\r\n    <Button variant=\"contained\" color=\"primary\" style={{width:'180px'}} onClick={handleRedirect}>JOIN NOW</Button>\r\n     </div> \r\n     <div className='row' style={{margin:\"20px\"}}>\r\n     <img src={adduser} alt=\"Girl in a jacket\" style={{height:'100px'}}/>\r\n     </div>\r\n \r\n       </div>\r\n       <Typography variant=\"h4\" style={{textAlign:'start',margin:'20px'}}>\r\n       Job opportunities\r\n      </Typography>\r\n      <div style={{margin:'20px'}}>\r\n      <TextField id=\"outlined-basic\" label=\"Search\" variant=\"outlined\"/>\r\n      <Button variant=\"contained\" color=\"primary\" style={{width:'180px',height:'55px',marginLeft:'20px'}}>\r\n          Search</Button>\r\n \r\n      </div>\r\n<div className={classes.root1}>\r\n      <Grid container spacing={3}>\r\n\r\n    {data.map((elem)=>(\r\n        <Grid item xs>\r\n<LandingPageCard  jobdetails={elem}/>\r\n</Grid>\r\n    ))}     \r\n        \r\n      </Grid>\r\n      </div>\r\n      <Footer/>\r\n      </div>\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default LandingPage;","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\LoginPage\\ForgetPassword.js",["388"],"import { Menu } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport MenuBar from \"../MenuBar/Menu\"\r\nconst ForgetPassword=()=>{\r\n    return(\r\n        <>\r\n        <MenuBar/>\r\n        this is ForgetPassword page need to implement.....!!\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ForgetPassword;","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantProfile\\ApplicantProfile.js",["389","390","391","392","393","394","395","396","397"],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\ApplicantProfile\\ProfileProgress.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\UserLandingPage\\UserDetails.js",["398"],"import React, { useEffect, useState } from \"react\";\r\nimport Menu from \"../MenuBar/Menu\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport UserDeatilsForm from \"./UserDeatilsForm\";\r\nimport DocumentForm from \"./DocumentForm\";\r\nimport EducationSkillsForm from \"./EducationSkillsForm\";\r\nimport ApplicationService from \"../../Service/ApplicationService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  completed: {\r\n    display: 'inline-block',\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['User Deatils', 'Education Deatils and Skills', 'Document Deatils'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <UserDeatilsForm/>;\r\n    case 1:\r\n      return <EducationSkillsForm/>;\r\n    case 2:\r\n      return <DocumentForm/>;\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalNonLinearAlternativeLabelStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [completed, setCompleted] = React.useState(new Set());\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n  const steps = getSteps();\r\n\r\n  const totalSteps = () => {\r\n    return getSteps().length;\r\n  };\r\n\r\n  const isStepOptional = (step) => {\r\n    return step === 1;\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped((prevSkipped) => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  };\r\n\r\n  const skippedSteps = () => {\r\n    return skipped.size;\r\n  };\r\n\r\n  const completedSteps = () => {\r\n    return completed.size;\r\n   \r\n  };\r\n\r\n  const allStepsCompleted = () => {\r\n    return completedSteps() === totalSteps() - skippedSteps();\r\n  };\r\n\r\n  const isLastStep = () => {\r\n    return activeStep === totalSteps() - 1;\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const newActiveStep =\r\n      isLastStep() && !allStepsCompleted()\r\n        ? // It's the last step, but not all steps have been completed\r\n          // find the first step that has been completed\r\n          steps.findIndex((step, i) => !completed.has(i))\r\n        : activeStep + 1;\r\n\r\n    setActiveStep(newActiveStep);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleStep = (step) => () => {\r\n    setActiveStep(step);\r\n  };\r\n  let history = useHistory();\r\n  const[education,setEducation]=useState([]);\r\n  const[userdeatils,setuserdeatils]=useState([]);\r\n  const[userdocument,setDocument]=useState([]);\r\n\r\n \r\nconst calllocalstorge=()=>{\r\n  setEducation(JSON.parse(localStorage.getItem('education')));\r\n    setuserdeatils(JSON.parse(localStorage.getItem('userdetails')));\r\n    setDocument(JSON.parse(localStorage.getItem('document')));\r\n}\r\n   \r\n\r\n  const handleComplete = (async) => {\r\n    // setEducation(JSON.parse(localStorage.getItem('education')));\r\n    // setuserdeatils(JSON.parse(localStorage.getItem('userdetails')));\r\n    // setDocument(JSON.parse(localStorage.getItem('document')));\r\ncalllocalstorge();\r\n    const newCompleted = new Set(completed);\r\n    newCompleted.add(activeStep);\r\n    setCompleted(newCompleted);\r\n    if (completed.size !== totalSteps() - skippedSteps()) {\r\n      handleNext();\r\n      calllocalstorge();\r\n    }\r\n    if(completedSteps() === totalSteps() - 1){\r\n      calllocalstorge();\r\n      console.log(education+\"...........\"+userdeatils+\"..........\"+userdocument)\r\n      if(education==null||userdeatils==null||userdocument==null){\r\n        calllocalstorge();\r\n        setEducation(JSON.parse(localStorage.getItem('education')));\r\n    setuserdeatils(JSON.parse(localStorage.getItem('userdetails')));\r\n    setDocument(JSON.parse(localStorage.getItem('document')));\r\n      }\r\n      else{\r\n        const  appljson={\r\n          applicant: {\r\n            email:userdeatils.email,\r\n            firstName:userdeatils.firstName,\r\n            lastName:userdeatils.lastName,\r\n            phoneNo:userdeatils.phoneNumber,\r\n            summary:userdeatils.summary\r\n          },\r\n          applicationDocument: [\r\n            {\r\n              document: {\r\n                document:userdocument.Document,\r\n                lastUpdate:userdocument.LastUpdate,\r\n                name:userdocument.ProjectName,\r\n                url:userdocument.WebSiteLink\r\n              },\r\n            }\r\n          ],\r\n          appliedDate:userdocument.LastUpdate,\r\n          education:education.schoolName,\r\n          experience:userdocument.experience,\r\n          id: 1,\r\n          otherInfo:education.schoolName\r\n        }\r\n  \r\n    ApplicationService.addUser(appljson);\r\n    console.log(\"success\"+appljson) \r\n        localStorage.clear();\r\n   \r\n      }\r\n         }\r\n \r\n   };\r\n\r\n   \r\n  const handleReset = () => {\r\n    history.push(\"/LandingPage\");\r\n  };\r\n\r\n  const isStepSkipped = (step) => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  function isStepComplete(step) {\r\n    return completed.has(step);\r\n  }\r\n\r\n  return (\r\n      <>\r\n      <Menu/>\r\n    <div className={classes.root}>\r\n      <Stepper alternativeLabel nonLinear activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const buttonProps = {};\r\n          if (isStepOptional(index)) {\r\n            buttonProps.optional = <Typography variant=\"caption\">*</Typography>;\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepButton\r\n                onClick={handleStep(index)}\r\n                completed={isStepComplete(index)}\r\n                {...buttonProps}\r\n              >\r\n                {label}\r\n              </StepButton>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <div style={{backgroundColor:\"LightGray\"}}>\r\n        {allStepsCompleted() ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              YOUR DETAILS ARE COLLECTED THANKS FOR YOUR INFORMATION\r\n            </Typography>\r\n            <Button onClick={handleReset}>GO TO YOUR PROFILE</Button>\r\n          </div>\r\n        ) : (\r\n          <div style={{marginTop:\"20px\"}}>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                Next\r\n              </Button>\r\n              {isStepOptional(activeStep) && !completed.has(activeStep) && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleSkip}\r\n                  className={classes.button}\r\n                >\r\n                  Skip\r\n                </Button>\r\n              )}\r\n\r\n              {activeStep !== steps.length &&\r\n                (completed.has(activeStep) ? (\r\n                  <Typography variant=\"caption\" className={classes.completed}>\r\n                    Step {activeStep + 1} already completed\r\n                  </Typography>\r\n                ) : (\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={handleComplete}>\r\n                    {completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'}\r\n                  </Button>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\ApplicationService.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\TechnicalLandingPage.js",["399"],"\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\nimport HandleApplication from \"./HandleApplications\";\r\nimport HandleDashboard from \"./HandleDashboard\";\r\nimport HandleNotification from \"./HandleNotification\";\r\nimport HandleRejected from \"./HandleRejected\";\r\nimport HandleSchedule from \"./HandleSchedule\";\r\nimport HandleSelected from \"./HandleSelected\";\r\nimport HandleTodaySch from \"./HandleTodaySch\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nfunction getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return <HandleApplication/>;\r\n      case 1:\r\n        return <HandleDashboard/>;\r\n      case 2:\r\n        return  <HandleNotification/>;\r\n        case 3:\r\n          return <HandleRejected/>;\r\n          case 4:\r\n              return <HandleSelected/>;\r\n              case 5:\r\n                  return <HandleSchedule/>;\r\n                  case 6:\r\n                         return <HandleTodaySch/>;\r\n      default:\r\n        return 'Unknown step';\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const [activeStep, setActiveStep] = React.useState(1);\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            TECHNICAL TEAM PAGE\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['DashBoard', 'Applications'].map((text, index) => (\r\n            <ListItem button key={text} >\r\n              <ListItemIcon>{index % 2 === 0 ? <HomeIcon color='primary' onClick={()=>setActiveStep(1)}/> : <FileCopyIcon color='primary' onClick={()=>setActiveStep(0)}/>}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n                 {[ 'Selected Resume', 'Rejected Resume'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <CheckIcon color='primary' onClick={()=>setActiveStep(4)}/> : <CancelIcon color='primary' onClick={()=>setActiveStep(3)}/>}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['Schedulied Mettings', 'Todays Schedules'].map((text, index) => (\r\n            <ListItem button key={text} >\r\n              <ListItemIcon>{index % 2 === 0 ? <ScheduleIcon color='primary' onClick={()=>setActiveStep(5)}/> : <TodayIcon color='primary' onClick={()=>setActiveStep(6)}/>}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n            {['Notifications'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <NotificationsActiveIcon color='primary' onClick={()=>setActiveStep(2)}/> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n{/*        \r\n      <HandleApplication/>\r\n      <HandleDashboard/>\r\n      <HandleNotification/>\r\n      <HandleRejected/>\r\n      <HandleSelected/>\r\n      <HandleSchedule/>\r\n      <HandleTodaySch/>\r\n       */}\r\n               <Typography>{getStepContent(activeStep)}</Typography>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\HrLandingPge.js",["400","401"],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleDashboard.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleApplications.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleRejected.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleNotification.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleTodaySch.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleSchedule.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\TECHNICALTEAM\\HandleSelected.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\Service\\RegService.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\HandleTechnicalTeam.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\HandleHrDashboard.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\ReSchuledMeetings.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\HandleHrNotification.js",[],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\ScheduledMeetings.js",["402","403","404"],"D:\\RECProject\\RECUI\\REACTRECUI\\recuitable\\src\\components\\HRLANDINGPAGE\\TodaysHrMeetings.js",[],{"ruleId":"405","replacedBy":"406"},{"ruleId":"407","replacedBy":"408"},{"ruleId":"409","severity":1,"message":"410","line":15,"column":8,"nodeType":"411","messageId":"412","endLine":15,"endColumn":19},{"ruleId":"409","severity":1,"message":"413","line":26,"column":8,"nodeType":"411","messageId":"412","endLine":26,"endColumn":25},{"ruleId":"409","severity":1,"message":"414","line":62,"column":15,"nodeType":"411","messageId":"412","endLine":62,"endColumn":23},{"ruleId":"415","severity":1,"message":"416","line":138,"column":18,"nodeType":"417","messageId":"418","endLine":138,"endColumn":20},{"ruleId":"409","severity":1,"message":"419","line":2,"column":8,"nodeType":"411","messageId":"412","endLine":2,"endColumn":19},{"ruleId":"409","severity":1,"message":"420","line":3,"column":8,"nodeType":"411","messageId":"412","endLine":3,"endColumn":13},{"ruleId":"409","severity":1,"message":"421","line":5,"column":8,"nodeType":"411","messageId":"412","endLine":5,"endColumn":13},{"ruleId":"409","severity":1,"message":"422","line":6,"column":8,"nodeType":"411","messageId":"412","endLine":6,"endColumn":16},{"ruleId":"409","severity":1,"message":"423","line":8,"column":8,"nodeType":"411","messageId":"412","endLine":8,"endColumn":18},{"ruleId":"409","severity":1,"message":"424","line":9,"column":8,"nodeType":"411","messageId":"412","endLine":9,"endColumn":20},{"ruleId":"409","severity":1,"message":"425","line":20,"column":8,"nodeType":"411","messageId":"412","endLine":20,"endColumn":20},{"ruleId":"409","severity":1,"message":"426","line":63,"column":9,"nodeType":"411","messageId":"412","endLine":63,"endColumn":16},{"ruleId":"409","severity":1,"message":"427","line":37,"column":17,"nodeType":"411","messageId":"412","endLine":37,"endColumn":26},{"ruleId":"409","severity":1,"message":"428","line":38,"column":11,"nodeType":"411","messageId":"412","endLine":38,"endColumn":16},{"ruleId":"409","severity":1,"message":"429","line":39,"column":18,"nodeType":"411","messageId":"412","endLine":39,"endColumn":30},{"ruleId":"409","severity":1,"message":"430","line":40,"column":18,"nodeType":"411","messageId":"412","endLine":40,"endColumn":30},{"ruleId":"409","severity":1,"message":"414","line":41,"column":15,"nodeType":"411","messageId":"412","endLine":41,"endColumn":23},{"ruleId":"409","severity":1,"message":"431","line":11,"column":8,"nodeType":"411","messageId":"412","endLine":11,"endColumn":15},{"ruleId":"409","severity":1,"message":"432","line":12,"column":8,"nodeType":"411","messageId":"412","endLine":12,"endColumn":18},{"ruleId":"409","severity":1,"message":"433","line":13,"column":8,"nodeType":"411","messageId":"412","endLine":13,"endColumn":16},{"ruleId":"409","severity":1,"message":"410","line":17,"column":8,"nodeType":"411","messageId":"412","endLine":17,"endColumn":19},{"ruleId":"409","severity":1,"message":"434","line":20,"column":8,"nodeType":"411","messageId":"412","endLine":20,"endColumn":20},{"ruleId":"409","severity":1,"message":"435","line":46,"column":8,"nodeType":"411","messageId":"412","endLine":46,"endColumn":15},{"ruleId":"409","severity":1,"message":"436","line":47,"column":7,"nodeType":"411","messageId":"412","endLine":47,"endColumn":17},{"ruleId":"409","severity":1,"message":"437","line":56,"column":7,"nodeType":"411","messageId":"412","endLine":56,"endColumn":19},{"ruleId":"438","severity":1,"message":"439","line":33,"column":1,"nodeType":"440","endLine":40,"endColumn":3},{"ruleId":"409","severity":1,"message":"441","line":38,"column":17,"nodeType":"411","messageId":"412","endLine":38,"endColumn":26},{"ruleId":"409","severity":1,"message":"429","line":39,"column":18,"nodeType":"411","messageId":"412","endLine":39,"endColumn":30},{"ruleId":"409","severity":1,"message":"430","line":40,"column":18,"nodeType":"411","messageId":"412","endLine":40,"endColumn":30},{"ruleId":"409","severity":1,"message":"414","line":41,"column":15,"nodeType":"411","messageId":"412","endLine":41,"endColumn":23},{"ruleId":"409","severity":1,"message":"442","line":1,"column":17,"nodeType":"411","messageId":"412","endLine":1,"endColumn":25},{"ruleId":"409","severity":1,"message":"443","line":1,"column":27,"nodeType":"411","messageId":"412","endLine":1,"endColumn":36},{"ruleId":"409","severity":1,"message":"444","line":2,"column":9,"nodeType":"411","messageId":"412","endLine":2,"endColumn":13},{"ruleId":"409","severity":1,"message":"445","line":3,"column":8,"nodeType":"411","messageId":"412","endLine":3,"endColumn":18},{"ruleId":"409","severity":1,"message":"446","line":8,"column":8,"nodeType":"411","messageId":"412","endLine":8,"endColumn":17},{"ruleId":"409","severity":1,"message":"447","line":11,"column":8,"nodeType":"411","messageId":"412","endLine":11,"endColumn":19},{"ruleId":"409","severity":1,"message":"448","line":12,"column":8,"nodeType":"411","messageId":"412","endLine":12,"endColumn":13},{"ruleId":"409","severity":1,"message":"443","line":1,"column":27,"nodeType":"411","messageId":"412","endLine":1,"endColumn":36},{"ruleId":"409","severity":1,"message":"449","line":1,"column":37,"nodeType":"411","messageId":"412","endLine":1,"endColumn":47},{"ruleId":"409","severity":1,"message":"450","line":3,"column":8,"nodeType":"411","messageId":"412","endLine":3,"endColumn":19},{"ruleId":"409","severity":1,"message":"451","line":4,"column":8,"nodeType":"411","messageId":"412","endLine":4,"endColumn":19},{"ruleId":"409","severity":1,"message":"452","line":6,"column":8,"nodeType":"411","messageId":"412","endLine":6,"endColumn":13},{"ruleId":"409","severity":1,"message":"453","line":7,"column":8,"nodeType":"411","messageId":"412","endLine":7,"endColumn":18},{"ruleId":"409","severity":1,"message":"454","line":17,"column":8,"nodeType":"411","messageId":"412","endLine":17,"endColumn":24},{"ruleId":"409","severity":1,"message":"455","line":18,"column":8,"nodeType":"411","messageId":"412","endLine":18,"endColumn":19},{"ruleId":"409","severity":1,"message":"456","line":66,"column":9,"nodeType":"411","messageId":"412","endLine":66,"endColumn":12},{"ruleId":"409","severity":1,"message":"457","line":87,"column":9,"nodeType":"411","messageId":"412","endLine":87,"endColumn":26},{"ruleId":"409","severity":1,"message":"458","line":91,"column":12,"nodeType":"411","messageId":"412","endLine":91,"endColumn":24},{"ruleId":"409","severity":1,"message":"459","line":111,"column":22,"nodeType":"411","messageId":"412","endLine":111,"endColumn":33},{"ruleId":"460","severity":1,"message":"461","line":130,"column":15,"nodeType":"462","endLine":130,"endColumn":30},{"ruleId":"460","severity":1,"message":"461","line":138,"column":33,"nodeType":"462","endLine":138,"endColumn":46},{"ruleId":"460","severity":1,"message":"461","line":303,"column":33,"nodeType":"462","endLine":303,"endColumn":46},{"ruleId":"409","severity":1,"message":"443","line":1,"column":27,"nodeType":"411","messageId":"412","endLine":1,"endColumn":36},{"ruleId":"409","severity":1,"message":"449","line":1,"column":37,"nodeType":"411","messageId":"412","endLine":1,"endColumn":47},{"ruleId":"409","severity":1,"message":"450","line":3,"column":8,"nodeType":"411","messageId":"412","endLine":3,"endColumn":19},{"ruleId":"409","severity":1,"message":"451","line":4,"column":8,"nodeType":"411","messageId":"412","endLine":4,"endColumn":19},{"ruleId":"409","severity":1,"message":"452","line":6,"column":8,"nodeType":"411","messageId":"412","endLine":6,"endColumn":13},{"ruleId":"409","severity":1,"message":"453","line":7,"column":8,"nodeType":"411","messageId":"412","endLine":7,"endColumn":18},{"ruleId":"409","severity":1,"message":"463","line":8,"column":8,"nodeType":"411","messageId":"412","endLine":8,"endColumn":21},{"ruleId":"409","severity":1,"message":"464","line":11,"column":8,"nodeType":"411","messageId":"412","endLine":11,"endColumn":14},{"ruleId":"465","severity":1,"message":"466","line":49,"column":18,"nodeType":"467","messageId":"468","endLine":49,"endColumn":55},{"ruleId":"465","severity":1,"message":"466","line":50,"column":19,"nodeType":"467","messageId":"468","endLine":50,"endColumn":60},{"ruleId":"465","severity":1,"message":"466","line":58,"column":19,"nodeType":"467","messageId":"468","endLine":58,"endColumn":60},{"ruleId":"465","severity":1,"message":"466","line":65,"column":19,"nodeType":"467","messageId":"468","endLine":65,"endColumn":60},{"ruleId":"409","severity":1,"message":"469","line":96,"column":12,"nodeType":"411","messageId":"412","endLine":96,"endColumn":19},{"ruleId":"409","severity":1,"message":"457","line":98,"column":11,"nodeType":"411","messageId":"412","endLine":98,"endColumn":28},{"ruleId":"409","severity":1,"message":"443","line":1,"column":27,"nodeType":"411","messageId":"412","endLine":1,"endColumn":36},{"ruleId":"409","severity":1,"message":"450","line":3,"column":8,"nodeType":"411","messageId":"412","endLine":3,"endColumn":19},{"ruleId":"409","severity":1,"message":"451","line":4,"column":8,"nodeType":"411","messageId":"412","endLine":4,"endColumn":19},{"ruleId":"409","severity":1,"message":"452","line":6,"column":8,"nodeType":"411","messageId":"412","endLine":6,"endColumn":13},{"ruleId":"409","severity":1,"message":"453","line":7,"column":8,"nodeType":"411","messageId":"412","endLine":7,"endColumn":18},{"ruleId":"409","severity":1,"message":"463","line":8,"column":8,"nodeType":"411","messageId":"412","endLine":8,"endColumn":21},{"ruleId":"409","severity":1,"message":"464","line":13,"column":8,"nodeType":"411","messageId":"412","endLine":13,"endColumn":14},{"ruleId":"470","severity":1,"message":"471","line":57,"column":28,"nodeType":"472","messageId":"473","endLine":57,"endColumn":29,"fix":"474"},{"ruleId":"470","severity":1,"message":"471","line":79,"column":28,"nodeType":"472","messageId":"473","endLine":79,"endColumn":29,"fix":"475"},{"ruleId":"409","severity":1,"message":"476","line":103,"column":8,"nodeType":"411","messageId":"412","endLine":103,"endColumn":25},{"ruleId":"409","severity":1,"message":"477","line":103,"column":26,"nodeType":"411","messageId":"412","endLine":103,"endColumn":46},{"ruleId":"409","severity":1,"message":"469","line":104,"column":12,"nodeType":"411","messageId":"412","endLine":104,"endColumn":19},{"ruleId":"409","severity":1,"message":"457","line":106,"column":11,"nodeType":"411","messageId":"412","endLine":106,"endColumn":28},{"ruleId":"409","severity":1,"message":"478","line":110,"column":21,"nodeType":"411","messageId":"412","endLine":110,"endColumn":33},{"ruleId":"460","severity":1,"message":"461","line":266,"column":15,"nodeType":"462","endLine":266,"endColumn":30},{"ruleId":"409","severity":1,"message":"479","line":13,"column":8,"nodeType":"411","messageId":"412","endLine":13,"endColumn":24},{"ruleId":"409","severity":1,"message":"480","line":14,"column":8,"nodeType":"411","messageId":"412","endLine":14,"endColumn":16},{"ruleId":"409","severity":1,"message":"481","line":19,"column":8,"nodeType":"411","messageId":"412","endLine":19,"endColumn":19},{"ruleId":"409","severity":1,"message":"414","line":75,"column":17,"nodeType":"411","messageId":"412","endLine":75,"endColumn":25},{"ruleId":"460","severity":1,"message":"461","line":247,"column":17,"nodeType":"462","endLine":247,"endColumn":32},{"ruleId":"409","severity":1,"message":"482","line":4,"column":8,"nodeType":"411","messageId":"412","endLine":4,"endColumn":23},{"ruleId":"409","severity":1,"message":"483","line":12,"column":8,"nodeType":"411","messageId":"412","endLine":12,"endColumn":13},{"ruleId":"409","severity":1,"message":"484","line":3,"column":8,"nodeType":"411","messageId":"412","endLine":3,"endColumn":12},{"ruleId":"409","severity":1,"message":"485","line":5,"column":8,"nodeType":"411","messageId":"412","endLine":5,"endColumn":18},{"ruleId":"409","severity":1,"message":"486","line":6,"column":8,"nodeType":"411","messageId":"412","endLine":6,"endColumn":17},{"ruleId":"409","severity":1,"message":"487","line":9,"column":8,"nodeType":"411","messageId":"412","endLine":9,"endColumn":16},{"ruleId":"409","severity":1,"message":"488","line":10,"column":8,"nodeType":"411","messageId":"412","endLine":10,"endColumn":14},{"ruleId":"409","severity":1,"message":"489","line":14,"column":8,"nodeType":"411","messageId":"412","endLine":14,"endColumn":20},{"ruleId":"409","severity":1,"message":"490","line":15,"column":8,"nodeType":"411","messageId":"412","endLine":15,"endColumn":17},{"ruleId":"409","severity":1,"message":"491","line":16,"column":8,"nodeType":"411","messageId":"412","endLine":16,"endColumn":22},{"ruleId":"409","severity":1,"message":"492","line":17,"column":8,"nodeType":"411","messageId":"412","endLine":17,"endColumn":20},{"ruleId":"409","severity":1,"message":"493","line":46,"column":9,"nodeType":"411","messageId":"412","endLine":46,"endColumn":26},{"ruleId":"409","severity":1,"message":"494","line":5,"column":8,"nodeType":"411","messageId":"412","endLine":5,"endColumn":26},{"ruleId":"409","severity":1,"message":"495","line":6,"column":8,"nodeType":"411","messageId":"412","endLine":6,"endColumn":29},{"ruleId":"409","severity":1,"message":"496","line":7,"column":8,"nodeType":"411","messageId":"412","endLine":7,"endColumn":31},{"ruleId":"409","severity":1,"message":"497","line":8,"column":8,"nodeType":"411","messageId":"412","endLine":8,"endColumn":24},{"ruleId":"409","severity":1,"message":"498","line":9,"column":8,"nodeType":"411","messageId":"412","endLine":9,"endColumn":33},{"ruleId":"409","severity":1,"message":"499","line":10,"column":8,"nodeType":"411","messageId":"412","endLine":10,"endColumn":24},{"ruleId":"409","severity":1,"message":"500","line":11,"column":8,"nodeType":"411","messageId":"412","endLine":11,"endColumn":31},{"ruleId":"409","severity":1,"message":"501","line":9,"column":8,"nodeType":"411","messageId":"412","endLine":9,"endColumn":14},{"ruleId":"409","severity":1,"message":"479","line":10,"column":8,"nodeType":"411","messageId":"412","endLine":10,"endColumn":24},{"ruleId":"409","severity":1,"message":"502","line":11,"column":8,"nodeType":"411","messageId":"412","endLine":11,"endColumn":17},{"ruleId":"409","severity":1,"message":"503","line":15,"column":8,"nodeType":"411","messageId":"412","endLine":15,"endColumn":24},{"ruleId":"409","severity":1,"message":"504","line":30,"column":10,"nodeType":"411","messageId":"412","endLine":30,"endColumn":14},{"ruleId":"409","severity":1,"message":"505","line":34,"column":9,"nodeType":"411","messageId":"412","endLine":34,"endColumn":21},{"ruleId":"409","severity":1,"message":"506","line":4,"column":8,"nodeType":"411","messageId":"412","endLine":4,"endColumn":13},{"ruleId":"409","severity":1,"message":"507","line":5,"column":8,"nodeType":"411","messageId":"412","endLine":5,"endColumn":18},{"ruleId":"409","severity":1,"message":"451","line":7,"column":8,"nodeType":"411","messageId":"412","endLine":7,"endColumn":19},{"ruleId":"409","severity":1,"message":"508","line":8,"column":8,"nodeType":"411","messageId":"412","endLine":8,"endColumn":17},{"ruleId":"409","severity":1,"message":"442","line":1,"column":17,"nodeType":"411","messageId":"412","endLine":1,"endColumn":25},{"ruleId":"409","severity":1,"message":"509","line":10,"column":8,"nodeType":"411","messageId":"412","endLine":10,"endColumn":16},{"ruleId":"409","severity":1,"message":"510","line":15,"column":10,"nodeType":"411","messageId":"412","endLine":15,"endColumn":14},{"ruleId":"409","severity":1,"message":"511","line":16,"column":13,"nodeType":"411","messageId":"412","endLine":16,"endColumn":19},{"ruleId":"409","severity":1,"message":"512","line":17,"column":10,"nodeType":"411","messageId":"412","endLine":17,"endColumn":15},{"ruleId":"409","severity":1,"message":"414","line":105,"column":17,"nodeType":"411","messageId":"412","endLine":105,"endColumn":25},{"ruleId":"409","severity":1,"message":"513","line":111,"column":11,"nodeType":"411","messageId":"412","endLine":111,"endColumn":19},{"ruleId":"409","severity":1,"message":"514","line":111,"column":21,"nodeType":"411","messageId":"412","endLine":111,"endColumn":31},{"ruleId":"409","severity":1,"message":"515","line":112,"column":10,"nodeType":"411","messageId":"412","endLine":112,"endColumn":14},{"ruleId":"409","severity":1,"message":"516","line":112,"column":16,"nodeType":"411","messageId":"412","endLine":112,"endColumn":23},{"ruleId":"460","severity":1,"message":"461","line":331,"column":21,"nodeType":"462","endLine":331,"endColumn":48},{"ruleId":"460","severity":1,"message":"461","line":500,"column":15,"nodeType":"462","endLine":500,"endColumn":30},{"ruleId":"409","severity":1,"message":"517","line":3,"column":8,"nodeType":"411","messageId":"412","endLine":3,"endColumn":22},{"ruleId":"409","severity":1,"message":"483","line":12,"column":8,"nodeType":"411","messageId":"412","endLine":12,"endColumn":13},{"ruleId":"409","severity":1,"message":"518","line":13,"column":8,"nodeType":"411","messageId":"412","endLine":13,"endColumn":16},{"ruleId":"409","severity":1,"message":"519","line":18,"column":7,"nodeType":"411","messageId":"412","endLine":18,"endColumn":15},{"ruleId":"409","severity":1,"message":"520","line":78,"column":12,"nodeType":"411","messageId":"412","endLine":78,"endColumn":20},{"ruleId":"409","severity":1,"message":"505","line":79,"column":13,"nodeType":"411","messageId":"412","endLine":79,"endColumn":25},{"ruleId":"409","severity":1,"message":"521","line":1,"column":10,"nodeType":"411","messageId":"412","endLine":1,"endColumn":14},{"ruleId":"409","severity":1,"message":"522","line":8,"column":38,"nodeType":"411","messageId":"412","endLine":8,"endColumn":42},{"ruleId":"409","severity":1,"message":"523","line":34,"column":7,"nodeType":"411","messageId":"412","endLine":34,"endColumn":13},{"ruleId":"409","severity":1,"message":"524","line":35,"column":7,"nodeType":"411","messageId":"412","endLine":35,"endColumn":13},{"ruleId":"409","severity":1,"message":"525","line":36,"column":7,"nodeType":"411","messageId":"412","endLine":36,"endColumn":18},{"ruleId":"409","severity":1,"message":"504","line":44,"column":8,"nodeType":"411","messageId":"412","endLine":44,"endColumn":12},{"ruleId":"409","severity":1,"message":"515","line":46,"column":7,"nodeType":"411","messageId":"412","endLine":46,"endColumn":11},{"ruleId":"409","severity":1,"message":"526","line":48,"column":7,"nodeType":"411","messageId":"412","endLine":48,"endColumn":20},{"ruleId":"409","severity":1,"message":"527","line":52,"column":7,"nodeType":"411","messageId":"412","endLine":52,"endColumn":17},{"ruleId":"409","severity":1,"message":"528","line":56,"column":7,"nodeType":"411","messageId":"412","endLine":56,"endColumn":18},{"ruleId":"409","severity":1,"message":"443","line":1,"column":17,"nodeType":"411","messageId":"412","endLine":1,"endColumn":26},{"ruleId":"409","severity":1,"message":"529","line":19,"column":8,"nodeType":"411","messageId":"412","endLine":19,"endColumn":17},{"ruleId":"409","severity":1,"message":"529","line":19,"column":8,"nodeType":"411","messageId":"412","endLine":19,"endColumn":17},{"ruleId":"409","severity":1,"message":"530","line":20,"column":8,"nodeType":"411","messageId":"412","endLine":20,"endColumn":16},{"ruleId":"409","severity":1,"message":"511","line":6,"column":13,"nodeType":"411","messageId":"412","endLine":6,"endColumn":19},{"ruleId":"531","severity":1,"message":"532","line":64,"column":3,"nodeType":"533","messageId":"418","endLine":64,"endColumn":8},{"ruleId":"460","severity":1,"message":"461","line":230,"column":15,"nodeType":"462","endLine":230,"endColumn":30},"no-native-reassign",["534"],"no-negated-in-lhs",["535"],"no-unused-vars","'InputFields' is defined but never used.","Identifier","unusedVar","'DialogContentText' is defined but never used.","'setState' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CenteredTab' is defined but never used.","'Icons' is defined but never used.","'PopUp' is defined but never used.","'RECTable' is defined but never used.","'ActiveUser' is defined but never used.","'InActiveUser' is defined but never used.","'UserSettings' is defined but never used.","'history' is assigned a value but never used.","'setstatus' is assigned a value but never used.","'setId' is assigned a value but never used.","'setcreatedAt' is assigned a value but never used.","'setupdatedAt' is assigned a value but never used.","'AddIcon' is defined but never used.","'GetAppIcon' is defined but never used.","'EditIcon' is defined but never used.","'SearchAndAdd' is defined but never used.","'getData' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'setStatus' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'fade' is defined but never used.","'CreateUser' is defined but never used.","'TextField' is defined but never used.","'DataService' is defined but never used.","'Table' is defined but never used.","'useReducer' is defined but never used.","'FilledInput' is defined but never used.","'FormControl' is defined but never used.","'Input' is defined but never used.","'InputLabel' is defined but never used.","'EducationDetails' is defined but never used.","'UserDeatils' is defined but never used.","'res' is assigned a value but never used.","'handleChangeCheck' is assigned a value but never used.","'handleChange' is defined but never used.","'setDocument' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'OutlinedInput' is defined but never used.","'Button' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'checked' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"536","text":"537"},{"range":"538","text":"537"},"'educationDeatails' is assigned a value but never used.","'seteducationDeatails' is assigned a value but never used.","'setEducation' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'LandingPage' is defined but never used.","'DesktopViewImg1' is defined but never used.","'Paper' is defined but never used.","'clsx' is defined but never used.","'CardHeader' is defined but never used.","'CardMedia' is defined but never used.","'Collapse' is defined but never used.","'Avatar' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'handleExpandClick' is assigned a value but never used.","'PaymentTwoToneIcon' is defined but never used.","'StorefrontRoundedIcon' is defined but never used.","'PhoneAndroidRoundedIcon' is defined but never used.","'EmailRoundedIcon' is defined but never used.","'ContactSupportRoundedIcon' is defined but never used.","'StoreTwoToneIcon' is defined but never used.","'PermContactCalendarIcon' is defined but never used.","'Switch' is defined but never used.","'FormGroup' is defined but never used.","'ApplicantProfile' is defined but never used.","'auth' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormLabel' is defined but never used.","'Snackbar' is defined but never used.","'date' is defined but never used.","'moment' is defined but never used.","'Alert' is defined but never used.","'vertical' is assigned a value but never used.","'horizontal' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'DesktopViewImg' is defined but never used.","'MenuItem' is defined but never used.","'category' is assigned a value but never used.","'Category' is assigned a value but never used.","'Menu' is defined but never used.","'Link' is defined but never used.","'style2' is assigned a value but never used.","'style3' is assigned a value but never used.","'avatarStyle' is assigned a value but never used.","'handleChange1' is assigned a value but never used.","'handleMenu' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","no-dupe-keys","Duplicate key 'paper'.","ObjectExpression","no-global-assign","no-unsafe-negation",[2262,2273],"\r\n        .",[2968,2979]]